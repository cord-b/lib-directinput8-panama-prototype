// Generated by jextract

package net.viskar.library.dinput8.natives;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;

import jdk.incubator.foreign.*;
import net.viskar.library.dinput8.internal.RuntimeHelper;

import static jdk.incubator.foreign.CLinker.*;
public final class dinput_h extends dinput_h_0 {

    /* package-private */ dinput_h() {}
    public static  int DIRECTINPUT_HEADER_VERSION() {
        return dinput_h_constants_0.DIRECTINPUT_HEADER_VERSION();
    }
    public static  int DIEFT_ALL() {
        return dinput_h_constants_0.DIEFT_ALL();
    }
    public static  int DIEFT_CONSTANTFORCE() {
        return dinput_h_constants_0.DIEFT_CONSTANTFORCE();
    }
    public static  int DIEFT_RAMPFORCE() {
        return dinput_h_constants_0.DIEFT_RAMPFORCE();
    }
    public static  int DIEFT_PERIODIC() {
        return dinput_h_constants_0.DIEFT_PERIODIC();
    }
    public static  int DIEFT_CONDITION() {
        return dinput_h_constants_0.DIEFT_CONDITION();
    }
    public static  int DIEFT_CUSTOMFORCE() {
        return dinput_h_constants_0.DIEFT_CUSTOMFORCE();
    }
    public static  int DIEFT_HARDWARE() {
        return dinput_h_constants_0.DIEFT_HARDWARE();
    }
    public static  int DIEFT_FFATTACK() {
        return dinput_h_constants_0.DIEFT_FFATTACK();
    }
    public static  int DIEFT_FFFADE() {
        return dinput_h_constants_0.DIEFT_FFFADE();
    }
    public static  int DIEFT_SATURATION() {
        return dinput_h_constants_0.DIEFT_SATURATION();
    }
    public static  int DIEFT_POSNEGCOEFFICIENTS() {
        return dinput_h_constants_0.DIEFT_POSNEGCOEFFICIENTS();
    }
    public static  int DIEFT_POSNEGSATURATION() {
        return dinput_h_constants_0.DIEFT_POSNEGSATURATION();
    }
    public static  int DIEFT_DEADBAND() {
        return dinput_h_constants_0.DIEFT_DEADBAND();
    }
    public static  int DIEFT_STARTDELAY() {
        return dinput_h_constants_0.DIEFT_STARTDELAY();
    }
    public static  int DI_DEGREES() {
        return dinput_h_constants_0.DI_DEGREES();
    }
    public static  int DI_FFNOMINALMAX() {
        return dinput_h_constants_0.DI_FFNOMINALMAX();
    }
    public static  int DI_SECONDS() {
        return dinput_h_constants_0.DI_SECONDS();
    }
    public static  int DIEFF_OBJECTIDS() {
        return dinput_h_constants_0.DIEFF_OBJECTIDS();
    }
    public static  int DIEFF_OBJECTOFFSETS() {
        return dinput_h_constants_0.DIEFF_OBJECTOFFSETS();
    }
    public static  int DIEFF_CARTESIAN() {
        return dinput_h_constants_0.DIEFF_CARTESIAN();
    }
    public static  int DIEFF_POLAR() {
        return dinput_h_constants_0.DIEFF_POLAR();
    }
    public static  int DIEFF_SPHERICAL() {
        return dinput_h_constants_0.DIEFF_SPHERICAL();
    }
    public static  int DIEP_DURATION() {
        return dinput_h_constants_0.DIEP_DURATION();
    }
    public static  int DIEP_SAMPLEPERIOD() {
        return dinput_h_constants_0.DIEP_SAMPLEPERIOD();
    }
    public static  int DIEP_GAIN() {
        return dinput_h_constants_0.DIEP_GAIN();
    }
    public static  int DIEP_TRIGGERBUTTON() {
        return dinput_h_constants_0.DIEP_TRIGGERBUTTON();
    }
    public static  int DIEP_TRIGGERREPEATINTERVAL() {
        return dinput_h_constants_0.DIEP_TRIGGERREPEATINTERVAL();
    }
    public static  int DIEP_AXES() {
        return dinput_h_constants_0.DIEP_AXES();
    }
    public static  int DIEP_DIRECTION() {
        return dinput_h_constants_0.DIEP_DIRECTION();
    }
    public static  int DIEP_ENVELOPE() {
        return dinput_h_constants_0.DIEP_ENVELOPE();
    }
    public static  int DIEP_TYPESPECIFICPARAMS() {
        return dinput_h_constants_0.DIEP_TYPESPECIFICPARAMS();
    }
    public static  int DIEP_STARTDELAY() {
        return dinput_h_constants_0.DIEP_STARTDELAY();
    }
    public static  int DIEP_ALLPARAMS_DX5() {
        return dinput_h_constants_0.DIEP_ALLPARAMS_DX5();
    }
    public static  int DIEP_ALLPARAMS() {
        return dinput_h_constants_0.DIEP_ALLPARAMS();
    }
    public static  int DIEP_START() {
        return dinput_h_constants_0.DIEP_START();
    }
    public static  int DIEP_NORESTART() {
        return dinput_h_constants_0.DIEP_NORESTART();
    }
    public static  int DIES_SOLO() {
        return dinput_h_constants_0.DIES_SOLO();
    }
    public static  int DIEGES_PLAYING() {
        return dinput_h_constants_0.DIEGES_PLAYING();
    }
    public static  int DIEGES_EMULATED() {
        return dinput_h_constants_0.DIEGES_EMULATED();
    }
    public static  int DI8DEVCLASS_ALL() {
        return dinput_h_constants_0.DI8DEVCLASS_ALL();
    }
    public static  int DI8DEVCLASS_DEVICE() {
        return dinput_h_constants_0.DI8DEVCLASS_DEVICE();
    }
    public static  int DI8DEVCLASS_POINTER() {
        return dinput_h_constants_0.DI8DEVCLASS_POINTER();
    }
    public static  int DI8DEVCLASS_KEYBOARD() {
        return dinput_h_constants_0.DI8DEVCLASS_KEYBOARD();
    }
    public static  int DI8DEVCLASS_GAMECTRL() {
        return dinput_h_constants_0.DI8DEVCLASS_GAMECTRL();
    }
    public static  int DI8DEVTYPE_DEVICE() {
        return dinput_h_constants_0.DI8DEVTYPE_DEVICE();
    }
    public static  int DI8DEVTYPE_MOUSE() {
        return dinput_h_constants_0.DI8DEVTYPE_MOUSE();
    }
    public static  int DI8DEVTYPE_KEYBOARD() {
        return dinput_h_constants_0.DI8DEVTYPE_KEYBOARD();
    }
    public static  int DI8DEVTYPE_JOYSTICK() {
        return dinput_h_constants_0.DI8DEVTYPE_JOYSTICK();
    }
    public static  int DI8DEVTYPE_GAMEPAD() {
        return dinput_h_constants_0.DI8DEVTYPE_GAMEPAD();
    }
    public static  int DI8DEVTYPE_DRIVING() {
        return dinput_h_constants_0.DI8DEVTYPE_DRIVING();
    }
    public static  int DI8DEVTYPE_FLIGHT() {
        return dinput_h_constants_0.DI8DEVTYPE_FLIGHT();
    }
    public static  int DI8DEVTYPE_1STPERSON() {
        return dinput_h_constants_0.DI8DEVTYPE_1STPERSON();
    }
    public static  int DI8DEVTYPE_DEVICECTRL() {
        return dinput_h_constants_0.DI8DEVTYPE_DEVICECTRL();
    }
    public static  int DI8DEVTYPE_SCREENPOINTER() {
        return dinput_h_constants_0.DI8DEVTYPE_SCREENPOINTER();
    }
    public static  int DI8DEVTYPE_REMOTE() {
        return dinput_h_constants_0.DI8DEVTYPE_REMOTE();
    }
    public static  int DI8DEVTYPE_SUPPLEMENTAL() {
        return dinput_h_constants_0.DI8DEVTYPE_SUPPLEMENTAL();
    }
    public static  int DIDEVTYPE_HID() {
        return dinput_h_constants_0.DIDEVTYPE_HID();
    }
    public static  int DI8DEVTYPEMOUSE_UNKNOWN() {
        return dinput_h_constants_0.DI8DEVTYPEMOUSE_UNKNOWN();
    }
    public static  int DI8DEVTYPEMOUSE_TRADITIONAL() {
        return dinput_h_constants_0.DI8DEVTYPEMOUSE_TRADITIONAL();
    }
    public static  int DI8DEVTYPEMOUSE_FINGERSTICK() {
        return dinput_h_constants_0.DI8DEVTYPEMOUSE_FINGERSTICK();
    }
    public static  int DI8DEVTYPEMOUSE_TOUCHPAD() {
        return dinput_h_constants_0.DI8DEVTYPEMOUSE_TOUCHPAD();
    }
    public static  int DI8DEVTYPEMOUSE_TRACKBALL() {
        return dinput_h_constants_0.DI8DEVTYPEMOUSE_TRACKBALL();
    }
    public static  int DI8DEVTYPEMOUSE_ABSOLUTE() {
        return dinput_h_constants_0.DI8DEVTYPEMOUSE_ABSOLUTE();
    }
    public static  int DI8DEVTYPEKEYBOARD_UNKNOWN() {
        return dinput_h_constants_0.DI8DEVTYPEKEYBOARD_UNKNOWN();
    }
    public static  int DI8DEVTYPEKEYBOARD_PCXT() {
        return dinput_h_constants_0.DI8DEVTYPEKEYBOARD_PCXT();
    }
    public static  int DI8DEVTYPEKEYBOARD_OLIVETTI() {
        return dinput_h_constants_0.DI8DEVTYPEKEYBOARD_OLIVETTI();
    }
    public static  int DI8DEVTYPEKEYBOARD_PCAT() {
        return dinput_h_constants_0.DI8DEVTYPEKEYBOARD_PCAT();
    }
    public static  int DI8DEVTYPEKEYBOARD_PCENH() {
        return dinput_h_constants_0.DI8DEVTYPEKEYBOARD_PCENH();
    }
    public static  int DI8DEVTYPEKEYBOARD_NOKIA1050() {
        return dinput_h_constants_0.DI8DEVTYPEKEYBOARD_NOKIA1050();
    }
    public static  int DI8DEVTYPEKEYBOARD_NOKIA9140() {
        return dinput_h_constants_0.DI8DEVTYPEKEYBOARD_NOKIA9140();
    }
    public static  int DI8DEVTYPEKEYBOARD_NEC98() {
        return dinput_h_constants_0.DI8DEVTYPEKEYBOARD_NEC98();
    }
    public static  int DI8DEVTYPEKEYBOARD_NEC98LAPTOP() {
        return dinput_h_constants_0.DI8DEVTYPEKEYBOARD_NEC98LAPTOP();
    }
    public static  int DI8DEVTYPEKEYBOARD_NEC98106() {
        return dinput_h_constants_0.DI8DEVTYPEKEYBOARD_NEC98106();
    }
    public static  int DI8DEVTYPEKEYBOARD_JAPAN106() {
        return dinput_h_constants_0.DI8DEVTYPEKEYBOARD_JAPAN106();
    }
    public static  int DI8DEVTYPEKEYBOARD_JAPANAX() {
        return dinput_h_constants_0.DI8DEVTYPEKEYBOARD_JAPANAX();
    }
    public static  int DI8DEVTYPEKEYBOARD_J3100() {
        return dinput_h_constants_0.DI8DEVTYPEKEYBOARD_J3100();
    }
    public static  int DI8DEVTYPE_LIMITEDGAMESUBTYPE() {
        return dinput_h_constants_0.DI8DEVTYPE_LIMITEDGAMESUBTYPE();
    }
    public static  int DI8DEVTYPEJOYSTICK_STANDARD() {
        return dinput_h_constants_0.DI8DEVTYPEJOYSTICK_STANDARD();
    }
    public static  int DI8DEVTYPEGAMEPAD_STANDARD() {
        return dinput_h_constants_0.DI8DEVTYPEGAMEPAD_STANDARD();
    }
    public static  int DI8DEVTYPEGAMEPAD_TILT() {
        return dinput_h_constants_0.DI8DEVTYPEGAMEPAD_TILT();
    }
    public static  int DI8DEVTYPEDRIVING_COMBINEDPEDALS() {
        return dinput_h_constants_0.DI8DEVTYPEDRIVING_COMBINEDPEDALS();
    }
    public static  int DI8DEVTYPEDRIVING_DUALPEDALS() {
        return dinput_h_constants_0.DI8DEVTYPEDRIVING_DUALPEDALS();
    }
    public static  int DI8DEVTYPEDRIVING_THREEPEDALS() {
        return dinput_h_constants_0.DI8DEVTYPEDRIVING_THREEPEDALS();
    }
    public static  int DI8DEVTYPEDRIVING_HANDHELD() {
        return dinput_h_constants_0.DI8DEVTYPEDRIVING_HANDHELD();
    }
    public static  int DI8DEVTYPEFLIGHT_STICK() {
        return dinput_h_constants_0.DI8DEVTYPEFLIGHT_STICK();
    }
    public static  int DI8DEVTYPEFLIGHT_YOKE() {
        return dinput_h_constants_0.DI8DEVTYPEFLIGHT_YOKE();
    }
    public static  int DI8DEVTYPEFLIGHT_RC() {
        return dinput_h_constants_0.DI8DEVTYPEFLIGHT_RC();
    }
    public static  int DI8DEVTYPE1STPERSON_UNKNOWN() {
        return dinput_h_constants_0.DI8DEVTYPE1STPERSON_UNKNOWN();
    }
    public static  int DI8DEVTYPE1STPERSON_SIXDOF() {
        return dinput_h_constants_0.DI8DEVTYPE1STPERSON_SIXDOF();
    }
    public static  int DI8DEVTYPE1STPERSON_SHOOTER() {
        return dinput_h_constants_0.DI8DEVTYPE1STPERSON_SHOOTER();
    }
    public static  int DI8DEVTYPESCREENPTR_UNKNOWN() {
        return dinput_h_constants_0.DI8DEVTYPESCREENPTR_UNKNOWN();
    }
    public static  int DI8DEVTYPESCREENPTR_LIGHTGUN() {
        return dinput_h_constants_0.DI8DEVTYPESCREENPTR_LIGHTGUN();
    }
    public static  int DI8DEVTYPESCREENPTR_LIGHTPEN() {
        return dinput_h_constants_0.DI8DEVTYPESCREENPTR_LIGHTPEN();
    }
    public static  int DI8DEVTYPESCREENPTR_TOUCH() {
        return dinput_h_constants_0.DI8DEVTYPESCREENPTR_TOUCH();
    }
    public static  int DI8DEVTYPEREMOTE_UNKNOWN() {
        return dinput_h_constants_0.DI8DEVTYPEREMOTE_UNKNOWN();
    }
    public static  int DI8DEVTYPEDEVICECTRL_UNKNOWN() {
        return dinput_h_constants_0.DI8DEVTYPEDEVICECTRL_UNKNOWN();
    }
    public static  int DI8DEVTYPEDEVICECTRL_COMMSSELECTION() {
        return dinput_h_constants_0.DI8DEVTYPEDEVICECTRL_COMMSSELECTION();
    }
    public static  int DI8DEVTYPEDEVICECTRL_COMMSSELECTION_HARDWIRED() {
        return dinput_h_constants_0.DI8DEVTYPEDEVICECTRL_COMMSSELECTION_HARDWIRED();
    }
    public static  int DI8DEVTYPESUPPLEMENTAL_UNKNOWN() {
        return dinput_h_constants_0.DI8DEVTYPESUPPLEMENTAL_UNKNOWN();
    }
    public static  int DI8DEVTYPESUPPLEMENTAL_2NDHANDCONTROLLER() {
        return dinput_h_constants_0.DI8DEVTYPESUPPLEMENTAL_2NDHANDCONTROLLER();
    }
    public static  int DI8DEVTYPESUPPLEMENTAL_HEADTRACKER() {
        return dinput_h_constants_0.DI8DEVTYPESUPPLEMENTAL_HEADTRACKER();
    }
    public static  int DI8DEVTYPESUPPLEMENTAL_HANDTRACKER() {
        return dinput_h_constants_0.DI8DEVTYPESUPPLEMENTAL_HANDTRACKER();
    }
    public static  int DI8DEVTYPESUPPLEMENTAL_SHIFTSTICKGATE() {
        return dinput_h_constants_0.DI8DEVTYPESUPPLEMENTAL_SHIFTSTICKGATE();
    }
    public static  int DI8DEVTYPESUPPLEMENTAL_SHIFTER() {
        return dinput_h_constants_0.DI8DEVTYPESUPPLEMENTAL_SHIFTER();
    }
    public static  int DI8DEVTYPESUPPLEMENTAL_THROTTLE() {
        return dinput_h_constants_0.DI8DEVTYPESUPPLEMENTAL_THROTTLE();
    }
    public static  int DI8DEVTYPESUPPLEMENTAL_SPLITTHROTTLE() {
        return dinput_h_constants_0.DI8DEVTYPESUPPLEMENTAL_SPLITTHROTTLE();
    }
    public static  int DI8DEVTYPESUPPLEMENTAL_COMBINEDPEDALS() {
        return dinput_h_constants_0.DI8DEVTYPESUPPLEMENTAL_COMBINEDPEDALS();
    }
    public static  int DI8DEVTYPESUPPLEMENTAL_DUALPEDALS() {
        return dinput_h_constants_0.DI8DEVTYPESUPPLEMENTAL_DUALPEDALS();
    }
    public static  int DI8DEVTYPESUPPLEMENTAL_THREEPEDALS() {
        return dinput_h_constants_0.DI8DEVTYPESUPPLEMENTAL_THREEPEDALS();
    }
    public static  int DI8DEVTYPESUPPLEMENTAL_RUDDERPEDALS() {
        return dinput_h_constants_0.DI8DEVTYPESUPPLEMENTAL_RUDDERPEDALS();
    }
    public static  int DIDC_ATTACHED() {
        return dinput_h_constants_0.DIDC_ATTACHED();
    }
    public static  int DIDC_POLLEDDEVICE() {
        return dinput_h_constants_0.DIDC_POLLEDDEVICE();
    }
    public static  int DIDC_EMULATED() {
        return dinput_h_constants_0.DIDC_EMULATED();
    }
    public static  int DIDC_POLLEDDATAFORMAT() {
        return dinput_h_constants_0.DIDC_POLLEDDATAFORMAT();
    }
    public static  int DIDC_FORCEFEEDBACK() {
        return dinput_h_constants_0.DIDC_FORCEFEEDBACK();
    }
    public static  int DIDC_FFATTACK() {
        return dinput_h_constants_0.DIDC_FFATTACK();
    }
    public static  int DIDC_FFFADE() {
        return dinput_h_constants_0.DIDC_FFFADE();
    }
    public static  int DIDC_SATURATION() {
        return dinput_h_constants_0.DIDC_SATURATION();
    }
    public static  int DIDC_POSNEGCOEFFICIENTS() {
        return dinput_h_constants_0.DIDC_POSNEGCOEFFICIENTS();
    }
    public static  int DIDC_POSNEGSATURATION() {
        return dinput_h_constants_0.DIDC_POSNEGSATURATION();
    }
    public static  int DIDC_DEADBAND() {
        return dinput_h_constants_0.DIDC_DEADBAND();
    }
    public static  int DIDC_STARTDELAY() {
        return dinput_h_constants_0.DIDC_STARTDELAY();
    }
    public static  int DIDC_ALIAS() {
        return dinput_h_constants_0.DIDC_ALIAS();
    }
    public static  int DIDC_PHANTOM() {
        return dinput_h_constants_0.DIDC_PHANTOM();
    }
    public static  int DIDC_HIDDEN() {
        return dinput_h_constants_0.DIDC_HIDDEN();
    }
    public static  int DIDFT_ALL() {
        return dinput_h_constants_0.DIDFT_ALL();
    }
    public static  int DIDFT_RELAXIS() {
        return dinput_h_constants_0.DIDFT_RELAXIS();
    }
    public static  int DIDFT_ABSAXIS() {
        return dinput_h_constants_0.DIDFT_ABSAXIS();
    }
    public static  int DIDFT_AXIS() {
        return dinput_h_constants_0.DIDFT_AXIS();
    }
    public static  int DIDFT_PSHBUTTON() {
        return dinput_h_constants_0.DIDFT_PSHBUTTON();
    }
    public static  int DIDFT_TGLBUTTON() {
        return dinput_h_constants_0.DIDFT_TGLBUTTON();
    }
    public static  int DIDFT_BUTTON() {
        return dinput_h_constants_0.DIDFT_BUTTON();
    }
    public static  int DIDFT_POV() {
        return dinput_h_constants_0.DIDFT_POV();
    }
    public static  int DIDFT_COLLECTION() {
        return dinput_h_constants_0.DIDFT_COLLECTION();
    }
    public static  int DIDFT_NODATA() {
        return dinput_h_constants_0.DIDFT_NODATA();
    }
    public static  int DIDFT_ANYINSTANCE() {
        return dinput_h_constants_0.DIDFT_ANYINSTANCE();
    }
    public static  int DIDFT_FFACTUATOR() {
        return dinput_h_constants_0.DIDFT_FFACTUATOR();
    }
    public static  int DIDFT_FFEFFECTTRIGGER() {
        return dinput_h_constants_0.DIDFT_FFEFFECTTRIGGER();
    }
    public static  int DIDFT_OUTPUT() {
        return dinput_h_constants_0.DIDFT_OUTPUT();
    }
    public static  int DIDFT_VENDORDEFINED() {
        return dinput_h_constants_0.DIDFT_VENDORDEFINED();
    }
    public static  int DIDFT_ALIAS() {
        return dinput_h_constants_0.DIDFT_ALIAS();
    }
    public static  int DIDFT_NOCOLLECTION() {
        return dinput_h_constants_0.DIDFT_NOCOLLECTION();
    }
    public static  int DIDF_ABSAXIS() {
        return dinput_h_constants_0.DIDF_ABSAXIS();
    }
    public static  int DIDF_RELAXIS() {
        return dinput_h_constants_0.DIDF_RELAXIS();
    }
    public static  int DIA_FORCEFEEDBACK() {
        return dinput_h_constants_0.DIA_FORCEFEEDBACK();
    }
    public static  int DIA_APPMAPPED() {
        return dinput_h_constants_0.DIA_APPMAPPED();
    }
    public static  int DIA_APPNOMAP() {
        return dinput_h_constants_0.DIA_APPNOMAP();
    }
    public static  int DIA_NORANGE() {
        return dinput_h_constants_0.DIA_NORANGE();
    }
    public static  int DIA_APPFIXED() {
        return dinput_h_constants_0.DIA_APPFIXED();
    }
    public static  int DIAH_UNMAPPED() {
        return dinput_h_constants_0.DIAH_UNMAPPED();
    }
    public static  int DIAH_USERCONFIG() {
        return dinput_h_constants_0.DIAH_USERCONFIG();
    }
    public static  int DIAH_APPREQUESTED() {
        return dinput_h_constants_0.DIAH_APPREQUESTED();
    }
    public static  int DIAH_HWAPP() {
        return dinput_h_constants_0.DIAH_HWAPP();
    }
    public static  int DIAH_HWDEFAULT() {
        return dinput_h_constants_0.DIAH_HWDEFAULT();
    }
    public static  int DIAH_DEFAULT() {
        return dinput_h_constants_0.DIAH_DEFAULT();
    }
    public static  int DIAFTS_UNUSEDDEVICELOW() {
        return dinput_h_constants_0.DIAFTS_UNUSEDDEVICELOW();
    }
    public static  int DIAFTS_UNUSEDDEVICEHIGH() {
        return dinput_h_constants_0.DIAFTS_UNUSEDDEVICEHIGH();
    }
    public static  int DIDBAM_DEFAULT() {
        return dinput_h_constants_0.DIDBAM_DEFAULT();
    }
    public static  int DIDBAM_PRESERVE() {
        return dinput_h_constants_0.DIDBAM_PRESERVE();
    }
    public static  int DIDBAM_INITIALIZE() {
        return dinput_h_constants_0.DIDBAM_INITIALIZE();
    }
    public static  int DIDBAM_HWDEFAULTS() {
        return dinput_h_constants_0.DIDBAM_HWDEFAULTS();
    }
    public static  int DIDSAM_DEFAULT() {
        return dinput_h_constants_0.DIDSAM_DEFAULT();
    }
    public static  int DIDSAM_NOUSER() {
        return dinput_h_constants_0.DIDSAM_NOUSER();
    }
    public static  int DIDSAM_FORCESAVE() {
        return dinput_h_constants_0.DIDSAM_FORCESAVE();
    }
    public static  int DICD_DEFAULT() {
        return dinput_h_constants_0.DICD_DEFAULT();
    }
    public static  int DICD_EDIT() {
        return dinput_h_constants_0.DICD_EDIT();
    }
    public static  int DIDIFT_CONFIGURATION() {
        return dinput_h_constants_0.DIDIFT_CONFIGURATION();
    }
    public static  int DIDIFT_OVERLAY() {
        return dinput_h_constants_0.DIDIFT_OVERLAY();
    }
    public static  int DIDAL_CENTERED() {
        return dinput_h_constants_0.DIDAL_CENTERED();
    }
    public static  int DIDAL_LEFTALIGNED() {
        return dinput_h_constants_0.DIDAL_LEFTALIGNED();
    }
    public static  int DIDAL_RIGHTALIGNED() {
        return dinput_h_constants_0.DIDAL_RIGHTALIGNED();
    }
    public static  int DIDAL_MIDDLE() {
        return dinput_h_constants_0.DIDAL_MIDDLE();
    }
    public static  int DIDAL_TOPALIGNED() {
        return dinput_h_constants_0.DIDAL_TOPALIGNED();
    }
    public static  int DIDAL_BOTTOMALIGNED() {
        return dinput_h_constants_0.DIDAL_BOTTOMALIGNED();
    }
    public static  int DIDOI_FFACTUATOR() {
        return dinput_h_constants_0.DIDOI_FFACTUATOR();
    }
    public static  int DIDOI_FFEFFECTTRIGGER() {
        return dinput_h_constants_0.DIDOI_FFEFFECTTRIGGER();
    }
    public static  int DIDOI_POLLED() {
        return dinput_h_constants_0.DIDOI_POLLED();
    }
    public static  int DIDOI_ASPECTPOSITION() {
        return dinput_h_constants_0.DIDOI_ASPECTPOSITION();
    }
    public static  int DIDOI_ASPECTVELOCITY() {
        return dinput_h_constants_0.DIDOI_ASPECTVELOCITY();
    }
    public static  int DIDOI_ASPECTACCEL() {
        return dinput_h_constants_0.DIDOI_ASPECTACCEL();
    }
    public static  int DIDOI_ASPECTFORCE() {
        return dinput_h_constants_0.DIDOI_ASPECTFORCE();
    }
    public static  int DIDOI_ASPECTMASK() {
        return dinput_h_constants_0.DIDOI_ASPECTMASK();
    }
    public static  int DIDOI_GUIDISUSAGE() {
        return dinput_h_constants_0.DIDOI_GUIDISUSAGE();
    }
    public static  int DIPH_DEVICE() {
        return dinput_h_constants_0.DIPH_DEVICE();
    }
    public static  int DIPH_BYOFFSET() {
        return dinput_h_constants_0.DIPH_BYOFFSET();
    }
    public static  int DIPH_BYID() {
        return dinput_h_constants_0.DIPH_BYID();
    }
    public static  int DIPH_BYUSAGE() {
        return dinput_h_constants_0.DIPH_BYUSAGE();
    }
    public static  int MAXCPOINTSNUM() {
        return dinput_h_constants_0.MAXCPOINTSNUM();
    }
    public static  int DIPROPAXISMODE_ABS() {
        return dinput_h_constants_0.DIPROPAXISMODE_ABS();
    }
    public static  int DIPROPAXISMODE_REL() {
        return dinput_h_constants_0.DIPROPAXISMODE_REL();
    }
    public static  int DIPROPAUTOCENTER_OFF() {
        return dinput_h_constants_0.DIPROPAUTOCENTER_OFF();
    }
    public static  int DIPROPAUTOCENTER_ON() {
        return dinput_h_constants_0.DIPROPAUTOCENTER_ON();
    }
    public static  int DIPROPCALIBRATIONMODE_COOKED() {
        return dinput_h_constants_0.DIPROPCALIBRATIONMODE_COOKED();
    }
    public static  int DIPROPCALIBRATIONMODE_RAW() {
        return dinput_h_constants_0.DIPROPCALIBRATIONMODE_RAW();
    }
    public static  int DIGDD_PEEK() {
        return dinput_h_constants_0.DIGDD_PEEK();
    }
    public static  int DISCL_EXCLUSIVE() {
        return dinput_h_constants_0.DISCL_EXCLUSIVE();
    }
    public static  int DISCL_NONEXCLUSIVE() {
        return dinput_h_constants_0.DISCL_NONEXCLUSIVE();
    }
    public static  int DISCL_FOREGROUND() {
        return dinput_h_constants_0.DISCL_FOREGROUND();
    }
    public static  int DISCL_BACKGROUND() {
        return dinput_h_constants_0.DISCL_BACKGROUND();
    }
    public static  int DISCL_NOWINKEY() {
        return dinput_h_constants_0.DISCL_NOWINKEY();
    }
    public static  int DISFFC_RESET() {
        return dinput_h_constants_0.DISFFC_RESET();
    }
    public static  int DISFFC_STOPALL() {
        return dinput_h_constants_0.DISFFC_STOPALL();
    }
    public static  int DISFFC_PAUSE() {
        return dinput_h_constants_0.DISFFC_PAUSE();
    }
    public static  int DISFFC_CONTINUE() {
        return dinput_h_constants_0.DISFFC_CONTINUE();
    }
    public static  int DISFFC_SETACTUATORSON() {
        return dinput_h_constants_0.DISFFC_SETACTUATORSON();
    }
    public static  int DISFFC_SETACTUATORSOFF() {
        return dinput_h_constants_0.DISFFC_SETACTUATORSOFF();
    }
    public static  int DIGFFS_EMPTY() {
        return dinput_h_constants_0.DIGFFS_EMPTY();
    }
    public static  int DIGFFS_STOPPED() {
        return dinput_h_constants_0.DIGFFS_STOPPED();
    }
    public static  int DIGFFS_PAUSED() {
        return dinput_h_constants_0.DIGFFS_PAUSED();
    }
    public static  int DIGFFS_ACTUATORSON() {
        return dinput_h_constants_0.DIGFFS_ACTUATORSON();
    }
    public static  int DIGFFS_ACTUATORSOFF() {
        return dinput_h_constants_0.DIGFFS_ACTUATORSOFF();
    }
    public static  int DIGFFS_POWERON() {
        return dinput_h_constants_0.DIGFFS_POWERON();
    }
    public static  int DIGFFS_POWEROFF() {
        return dinput_h_constants_0.DIGFFS_POWEROFF();
    }
    public static  int DIGFFS_SAFETYSWITCHON() {
        return dinput_h_constants_0.DIGFFS_SAFETYSWITCHON();
    }
    public static  int DIGFFS_SAFETYSWITCHOFF() {
        return dinput_h_constants_0.DIGFFS_SAFETYSWITCHOFF();
    }
    public static  int DIGFFS_USERFFSWITCHON() {
        return dinput_h_constants_0.DIGFFS_USERFFSWITCHON();
    }
    public static  int DIGFFS_USERFFSWITCHOFF() {
        return dinput_h_constants_0.DIGFFS_USERFFSWITCHOFF();
    }
    public static  int DISDD_CONTINUE() {
        return dinput_h_constants_0.DISDD_CONTINUE();
    }
    public static  int DIFEF_DEFAULT() {
        return dinput_h_constants_0.DIFEF_DEFAULT();
    }
    public static  int DIFEF_INCLUDENONSTANDARD() {
        return dinput_h_constants_0.DIFEF_INCLUDENONSTANDARD();
    }
    public static  int DIFEF_MODIFYIFNEEDED() {
        return dinput_h_constants_0.DIFEF_MODIFYIFNEEDED();
    }
    public static  int DIK_ESCAPE() {
        return dinput_h_constants_0.DIK_ESCAPE();
    }
    public static  int DIK_1() {
        return dinput_h_constants_0.DIK_1();
    }
    public static  int DIK_2() {
        return dinput_h_constants_0.DIK_2();
    }
    public static  int DIK_3() {
        return dinput_h_constants_0.DIK_3();
    }
    public static  int DIK_4() {
        return dinput_h_constants_0.DIK_4();
    }
    public static  int DIK_5() {
        return dinput_h_constants_0.DIK_5();
    }
    public static  int DIK_6() {
        return dinput_h_constants_0.DIK_6();
    }
    public static  int DIK_7() {
        return dinput_h_constants_0.DIK_7();
    }
    public static  int DIK_8() {
        return dinput_h_constants_0.DIK_8();
    }
    public static  int DIK_9() {
        return dinput_h_constants_0.DIK_9();
    }
    public static  int DIK_0() {
        return dinput_h_constants_0.DIK_0();
    }
    public static  int DIK_MINUS() {
        return dinput_h_constants_0.DIK_MINUS();
    }
    public static  int DIK_EQUALS() {
        return dinput_h_constants_0.DIK_EQUALS();
    }
    public static  int DIK_BACK() {
        return dinput_h_constants_0.DIK_BACK();
    }
    public static  int DIK_TAB() {
        return dinput_h_constants_0.DIK_TAB();
    }
    public static  int DIK_Q() {
        return dinput_h_constants_0.DIK_Q();
    }
    public static  int DIK_W() {
        return dinput_h_constants_0.DIK_W();
    }
    public static  int DIK_E() {
        return dinput_h_constants_0.DIK_E();
    }
    public static  int DIK_R() {
        return dinput_h_constants_0.DIK_R();
    }
    public static  int DIK_T() {
        return dinput_h_constants_0.DIK_T();
    }
    public static  int DIK_Y() {
        return dinput_h_constants_0.DIK_Y();
    }
    public static  int DIK_U() {
        return dinput_h_constants_0.DIK_U();
    }
    public static  int DIK_I() {
        return dinput_h_constants_0.DIK_I();
    }
    public static  int DIK_O() {
        return dinput_h_constants_0.DIK_O();
    }
    public static  int DIK_P() {
        return dinput_h_constants_0.DIK_P();
    }
    public static  int DIK_LBRACKET() {
        return dinput_h_constants_0.DIK_LBRACKET();
    }
    public static  int DIK_RBRACKET() {
        return dinput_h_constants_0.DIK_RBRACKET();
    }
    public static  int DIK_RETURN() {
        return dinput_h_constants_0.DIK_RETURN();
    }
    public static  int DIK_LCONTROL() {
        return dinput_h_constants_0.DIK_LCONTROL();
    }
    public static  int DIK_A() {
        return dinput_h_constants_0.DIK_A();
    }
    public static  int DIK_S() {
        return dinput_h_constants_0.DIK_S();
    }
    public static  int DIK_D() {
        return dinput_h_constants_0.DIK_D();
    }
    public static  int DIK_F() {
        return dinput_h_constants_0.DIK_F();
    }
    public static  int DIK_G() {
        return dinput_h_constants_0.DIK_G();
    }
    public static  int DIK_H() {
        return dinput_h_constants_0.DIK_H();
    }
    public static  int DIK_J() {
        return dinput_h_constants_0.DIK_J();
    }
    public static  int DIK_K() {
        return dinput_h_constants_0.DIK_K();
    }
    public static  int DIK_L() {
        return dinput_h_constants_0.DIK_L();
    }
    public static  int DIK_SEMICOLON() {
        return dinput_h_constants_0.DIK_SEMICOLON();
    }
    public static  int DIK_APOSTROPHE() {
        return dinput_h_constants_0.DIK_APOSTROPHE();
    }
    public static  int DIK_GRAVE() {
        return dinput_h_constants_0.DIK_GRAVE();
    }
    public static  int DIK_LSHIFT() {
        return dinput_h_constants_0.DIK_LSHIFT();
    }
    public static  int DIK_BACKSLASH() {
        return dinput_h_constants_0.DIK_BACKSLASH();
    }
    public static  int DIK_Z() {
        return dinput_h_constants_0.DIK_Z();
    }
    public static  int DIK_X() {
        return dinput_h_constants_0.DIK_X();
    }
    public static  int DIK_C() {
        return dinput_h_constants_0.DIK_C();
    }
    public static  int DIK_V() {
        return dinput_h_constants_0.DIK_V();
    }
    public static  int DIK_B() {
        return dinput_h_constants_0.DIK_B();
    }
    public static  int DIK_N() {
        return dinput_h_constants_0.DIK_N();
    }
    public static  int DIK_M() {
        return dinput_h_constants_0.DIK_M();
    }
    public static  int DIK_COMMA() {
        return dinput_h_constants_0.DIK_COMMA();
    }
    public static  int DIK_PERIOD() {
        return dinput_h_constants_0.DIK_PERIOD();
    }
    public static  int DIK_SLASH() {
        return dinput_h_constants_0.DIK_SLASH();
    }
    public static  int DIK_RSHIFT() {
        return dinput_h_constants_0.DIK_RSHIFT();
    }
    public static  int DIK_MULTIPLY() {
        return dinput_h_constants_0.DIK_MULTIPLY();
    }
    public static  int DIK_LMENU() {
        return dinput_h_constants_0.DIK_LMENU();
    }
    public static  int DIK_SPACE() {
        return dinput_h_constants_0.DIK_SPACE();
    }
    public static  int DIK_CAPITAL() {
        return dinput_h_constants_0.DIK_CAPITAL();
    }
    public static  int DIK_F1() {
        return dinput_h_constants_0.DIK_F1();
    }
    public static  int DIK_F2() {
        return dinput_h_constants_0.DIK_F2();
    }
    public static  int DIK_F3() {
        return dinput_h_constants_0.DIK_F3();
    }
    public static  int DIK_F4() {
        return dinput_h_constants_0.DIK_F4();
    }
    public static  int DIK_F5() {
        return dinput_h_constants_0.DIK_F5();
    }
    public static  int DIK_F6() {
        return dinput_h_constants_0.DIK_F6();
    }
    public static  int DIK_F7() {
        return dinput_h_constants_0.DIK_F7();
    }
    public static  int DIK_F8() {
        return dinput_h_constants_0.DIK_F8();
    }
    public static  int DIK_F9() {
        return dinput_h_constants_0.DIK_F9();
    }
    public static  int DIK_F10() {
        return dinput_h_constants_0.DIK_F10();
    }
    public static  int DIK_NUMLOCK() {
        return dinput_h_constants_0.DIK_NUMLOCK();
    }
    public static  int DIK_SCROLL() {
        return dinput_h_constants_0.DIK_SCROLL();
    }
    public static  int DIK_NUMPAD7() {
        return dinput_h_constants_0.DIK_NUMPAD7();
    }
    public static  int DIK_NUMPAD8() {
        return dinput_h_constants_0.DIK_NUMPAD8();
    }
    public static  int DIK_NUMPAD9() {
        return dinput_h_constants_0.DIK_NUMPAD9();
    }
    public static  int DIK_SUBTRACT() {
        return dinput_h_constants_0.DIK_SUBTRACT();
    }
    public static  int DIK_NUMPAD4() {
        return dinput_h_constants_0.DIK_NUMPAD4();
    }
    public static  int DIK_NUMPAD5() {
        return dinput_h_constants_0.DIK_NUMPAD5();
    }
    public static  int DIK_NUMPAD6() {
        return dinput_h_constants_0.DIK_NUMPAD6();
    }
    public static  int DIK_ADD() {
        return dinput_h_constants_0.DIK_ADD();
    }
    public static  int DIK_NUMPAD1() {
        return dinput_h_constants_0.DIK_NUMPAD1();
    }
    public static  int DIK_NUMPAD2() {
        return dinput_h_constants_0.DIK_NUMPAD2();
    }
    public static  int DIK_NUMPAD3() {
        return dinput_h_constants_0.DIK_NUMPAD3();
    }
    public static  int DIK_NUMPAD0() {
        return dinput_h_constants_0.DIK_NUMPAD0();
    }
    public static  int DIK_DECIMAL() {
        return dinput_h_constants_0.DIK_DECIMAL();
    }
    public static  int DIK_OEM_102() {
        return dinput_h_constants_0.DIK_OEM_102();
    }
    public static  int DIK_F11() {
        return dinput_h_constants_0.DIK_F11();
    }
    public static  int DIK_F12() {
        return dinput_h_constants_0.DIK_F12();
    }
    public static  int DIK_F13() {
        return dinput_h_constants_0.DIK_F13();
    }
    public static  int DIK_F14() {
        return dinput_h_constants_0.DIK_F14();
    }
    public static  int DIK_F15() {
        return dinput_h_constants_0.DIK_F15();
    }
    public static  int DIK_KANA() {
        return dinput_h_constants_0.DIK_KANA();
    }
    public static  int DIK_ABNT_C1() {
        return dinput_h_constants_0.DIK_ABNT_C1();
    }
    public static  int DIK_CONVERT() {
        return dinput_h_constants_0.DIK_CONVERT();
    }
    public static  int DIK_NOCONVERT() {
        return dinput_h_constants_0.DIK_NOCONVERT();
    }
    public static  int DIK_YEN() {
        return dinput_h_constants_0.DIK_YEN();
    }
    public static  int DIK_ABNT_C2() {
        return dinput_h_constants_0.DIK_ABNT_C2();
    }
    public static  int DIK_NUMPADEQUALS() {
        return dinput_h_constants_0.DIK_NUMPADEQUALS();
    }
    public static  int DIK_PREVTRACK() {
        return dinput_h_constants_0.DIK_PREVTRACK();
    }
    public static  int DIK_AT() {
        return dinput_h_constants_0.DIK_AT();
    }
    public static  int DIK_COLON() {
        return dinput_h_constants_0.DIK_COLON();
    }
    public static  int DIK_UNDERLINE() {
        return dinput_h_constants_0.DIK_UNDERLINE();
    }
    public static  int DIK_KANJI() {
        return dinput_h_constants_0.DIK_KANJI();
    }
    public static  int DIK_STOP() {
        return dinput_h_constants_0.DIK_STOP();
    }
    public static  int DIK_AX() {
        return dinput_h_constants_0.DIK_AX();
    }
    public static  int DIK_UNLABELED() {
        return dinput_h_constants_0.DIK_UNLABELED();
    }
    public static  int DIK_NEXTTRACK() {
        return dinput_h_constants_0.DIK_NEXTTRACK();
    }
    public static  int DIK_NUMPADENTER() {
        return dinput_h_constants_0.DIK_NUMPADENTER();
    }
    public static  int DIK_RCONTROL() {
        return dinput_h_constants_0.DIK_RCONTROL();
    }
    public static  int DIK_MUTE() {
        return dinput_h_constants_0.DIK_MUTE();
    }
    public static  int DIK_CALCULATOR() {
        return dinput_h_constants_0.DIK_CALCULATOR();
    }
    public static  int DIK_PLAYPAUSE() {
        return dinput_h_constants_0.DIK_PLAYPAUSE();
    }
    public static  int DIK_MEDIASTOP() {
        return dinput_h_constants_0.DIK_MEDIASTOP();
    }
    public static  int DIK_VOLUMEDOWN() {
        return dinput_h_constants_0.DIK_VOLUMEDOWN();
    }
    public static  int DIK_VOLUMEUP() {
        return dinput_h_constants_0.DIK_VOLUMEUP();
    }
    public static  int DIK_WEBHOME() {
        return dinput_h_constants_0.DIK_WEBHOME();
    }
    public static  int DIK_NUMPADCOMMA() {
        return dinput_h_constants_0.DIK_NUMPADCOMMA();
    }
    public static  int DIK_DIVIDE() {
        return dinput_h_constants_0.DIK_DIVIDE();
    }
    public static  int DIK_SYSRQ() {
        return dinput_h_constants_0.DIK_SYSRQ();
    }
    public static  int DIK_RMENU() {
        return dinput_h_constants_0.DIK_RMENU();
    }
    public static  int DIK_PAUSE() {
        return dinput_h_constants_0.DIK_PAUSE();
    }
    public static  int DIK_HOME() {
        return dinput_h_constants_0.DIK_HOME();
    }
    public static  int DIK_UP() {
        return dinput_h_constants_0.DIK_UP();
    }
    public static  int DIK_PRIOR() {
        return dinput_h_constants_0.DIK_PRIOR();
    }
    public static  int DIK_LEFT() {
        return dinput_h_constants_0.DIK_LEFT();
    }
    public static  int DIK_RIGHT() {
        return dinput_h_constants_0.DIK_RIGHT();
    }
    public static  int DIK_END() {
        return dinput_h_constants_0.DIK_END();
    }
    public static  int DIK_DOWN() {
        return dinput_h_constants_0.DIK_DOWN();
    }
    public static  int DIK_NEXT() {
        return dinput_h_constants_0.DIK_NEXT();
    }
    public static  int DIK_INSERT() {
        return dinput_h_constants_0.DIK_INSERT();
    }
    public static  int DIK_DELETE() {
        return dinput_h_constants_0.DIK_DELETE();
    }
    public static  int DIK_LWIN() {
        return dinput_h_constants_0.DIK_LWIN();
    }
    public static  int DIK_RWIN() {
        return dinput_h_constants_0.DIK_RWIN();
    }
    public static  int DIK_APPS() {
        return dinput_h_constants_0.DIK_APPS();
    }
    public static  int DIK_POWER() {
        return dinput_h_constants_0.DIK_POWER();
    }
    public static  int DIK_SLEEP() {
        return dinput_h_constants_0.DIK_SLEEP();
    }
    public static  int DIK_WAKE() {
        return dinput_h_constants_0.DIK_WAKE();
    }
    public static  int DIK_WEBSEARCH() {
        return dinput_h_constants_0.DIK_WEBSEARCH();
    }
    public static  int DIK_WEBFAVORITES() {
        return dinput_h_constants_0.DIK_WEBFAVORITES();
    }
    public static  int DIK_WEBREFRESH() {
        return dinput_h_constants_0.DIK_WEBREFRESH();
    }
    public static  int DIK_WEBSTOP() {
        return dinput_h_constants_0.DIK_WEBSTOP();
    }
    public static  int DIK_WEBFORWARD() {
        return dinput_h_constants_0.DIK_WEBFORWARD();
    }
    public static  int DIK_WEBBACK() {
        return dinput_h_constants_0.DIK_WEBBACK();
    }
    public static  int DIK_MYCOMPUTER() {
        return dinput_h_constants_0.DIK_MYCOMPUTER();
    }
    public static  int DIK_MAIL() {
        return dinput_h_constants_0.DIK_MAIL();
    }
    public static  int DIK_MEDIASELECT() {
        return dinput_h_constants_0.DIK_MEDIASELECT();
    }
    public static  int DIENUM_STOP() {
        return dinput_h_constants_0.DIENUM_STOP();
    }
    public static  int DIENUM_CONTINUE() {
        return dinput_h_constants_0.DIENUM_CONTINUE();
    }
    public static  int DIEDFL_ALLDEVICES() {
        return dinput_h_constants_0.DIEDFL_ALLDEVICES();
    }
    public static  int DIEDFL_ATTACHEDONLY() {
        return dinput_h_constants_0.DIEDFL_ATTACHEDONLY();
    }
    public static  int DIEDFL_FORCEFEEDBACK() {
        return dinput_h_constants_0.DIEDFL_FORCEFEEDBACK();
    }
    public static  int DIEDFL_INCLUDEALIASES() {
        return dinput_h_constants_0.DIEDFL_INCLUDEALIASES();
    }
    public static  int DIEDFL_INCLUDEPHANTOMS() {
        return dinput_h_constants_0.DIEDFL_INCLUDEPHANTOMS();
    }
    public static  int DIEDFL_INCLUDEHIDDEN() {
        return dinput_h_constants_0.DIEDFL_INCLUDEHIDDEN();
    }
    public static  int DIEDBS_MAPPEDPRI1() {
        return dinput_h_constants_0.DIEDBS_MAPPEDPRI1();
    }
    public static  int DIEDBS_MAPPEDPRI2() {
        return dinput_h_constants_0.DIEDBS_MAPPEDPRI2();
    }
    public static  int DIEDBS_RECENTDEVICE() {
        return dinput_h_constants_0.DIEDBS_RECENTDEVICE();
    }
    public static  int DIEDBS_NEWDEVICE() {
        return dinput_h_constants_0.DIEDBS_NEWDEVICE();
    }
    public static  int DIEDBSFL_ATTACHEDONLY() {
        return dinput_h_constants_0.DIEDBSFL_ATTACHEDONLY();
    }
    public static  int DIEDBSFL_THISUSER() {
        return dinput_h_constants_0.DIEDBSFL_THISUSER();
    }
    public static  int DIEDBSFL_AVAILABLEDEVICES() {
        return dinput_h_constants_0.DIEDBSFL_AVAILABLEDEVICES();
    }
    public static  int DIEDBSFL_MULTIMICEKEYBOARDS() {
        return dinput_h_constants_0.DIEDBSFL_MULTIMICEKEYBOARDS();
    }
    public static  int DIEDBSFL_NONGAMINGDEVICES() {
        return dinput_h_constants_0.DIEDBSFL_NONGAMINGDEVICES();
    }
    public static  int DIEDBSFL_VALID() {
        return dinput_h_constants_0.DIEDBSFL_VALID();
    }
    public static  int DIVIRTUAL_DRIVING_RACE() {
        return dinput_h_constants_0.DIVIRTUAL_DRIVING_RACE();
    }
    public static  int DIAXIS_DRIVINGR_STEER() {
        return dinput_h_constants_0.DIAXIS_DRIVINGR_STEER();
    }
    public static  int DIAXIS_DRIVINGR_ACCELERATE() {
        return dinput_h_constants_0.DIAXIS_DRIVINGR_ACCELERATE();
    }
    public static  int DIAXIS_DRIVINGR_BRAKE() {
        return dinput_h_constants_0.DIAXIS_DRIVINGR_BRAKE();
    }
    public static  int DIBUTTON_DRIVINGR_SHIFTUP() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGR_SHIFTUP();
    }
    public static  int DIBUTTON_DRIVINGR_SHIFTDOWN() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGR_SHIFTDOWN();
    }
    public static  int DIBUTTON_DRIVINGR_VIEW() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGR_VIEW();
    }
    public static  int DIBUTTON_DRIVINGR_MENU() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGR_MENU();
    }
    public static  int DIAXIS_DRIVINGR_ACCEL_AND_BRAKE() {
        return dinput_h_constants_0.DIAXIS_DRIVINGR_ACCEL_AND_BRAKE();
    }
    public static  int DIHATSWITCH_DRIVINGR_GLANCE() {
        return dinput_h_constants_0.DIHATSWITCH_DRIVINGR_GLANCE();
    }
    public static  int DIBUTTON_DRIVINGR_BRAKE() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGR_BRAKE();
    }
    public static  int DIBUTTON_DRIVINGR_DASHBOARD() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGR_DASHBOARD();
    }
    public static  int DIBUTTON_DRIVINGR_AIDS() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGR_AIDS();
    }
    public static  int DIBUTTON_DRIVINGR_MAP() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGR_MAP();
    }
    public static  int DIBUTTON_DRIVINGR_BOOST() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGR_BOOST();
    }
    public static  int DIBUTTON_DRIVINGR_PIT() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGR_PIT();
    }
    public static  int DIBUTTON_DRIVINGR_ACCELERATE_LINK() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGR_ACCELERATE_LINK();
    }
    public static  int DIBUTTON_DRIVINGR_STEER_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGR_STEER_LEFT_LINK();
    }
    public static  int DIBUTTON_DRIVINGR_STEER_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGR_STEER_RIGHT_LINK();
    }
    public static  int DIBUTTON_DRIVINGR_GLANCE_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGR_GLANCE_LEFT_LINK();
    }
    public static  int DIBUTTON_DRIVINGR_GLANCE_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGR_GLANCE_RIGHT_LINK();
    }
    public static  int DIBUTTON_DRIVINGR_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGR_DEVICE();
    }
    public static  int DIBUTTON_DRIVINGR_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGR_PAUSE();
    }
    public static  int DIVIRTUAL_DRIVING_COMBAT() {
        return dinput_h_constants_0.DIVIRTUAL_DRIVING_COMBAT();
    }
    public static  int DIAXIS_DRIVINGC_STEER() {
        return dinput_h_constants_0.DIAXIS_DRIVINGC_STEER();
    }
    public static  int DIAXIS_DRIVINGC_ACCELERATE() {
        return dinput_h_constants_0.DIAXIS_DRIVINGC_ACCELERATE();
    }
    public static  int DIAXIS_DRIVINGC_BRAKE() {
        return dinput_h_constants_0.DIAXIS_DRIVINGC_BRAKE();
    }
    public static  int DIBUTTON_DRIVINGC_FIRE() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGC_FIRE();
    }
    public static  int DIBUTTON_DRIVINGC_WEAPONS() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGC_WEAPONS();
    }
    public static  int DIBUTTON_DRIVINGC_TARGET() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGC_TARGET();
    }
    public static  int DIBUTTON_DRIVINGC_MENU() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGC_MENU();
    }
    public static  int DIAXIS_DRIVINGC_ACCEL_AND_BRAKE() {
        return dinput_h_constants_0.DIAXIS_DRIVINGC_ACCEL_AND_BRAKE();
    }
    public static  int DIHATSWITCH_DRIVINGC_GLANCE() {
        return dinput_h_constants_0.DIHATSWITCH_DRIVINGC_GLANCE();
    }
    public static  int DIBUTTON_DRIVINGC_SHIFTUP() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGC_SHIFTUP();
    }
    public static  int DIBUTTON_DRIVINGC_SHIFTDOWN() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGC_SHIFTDOWN();
    }
    public static  int DIBUTTON_DRIVINGC_DASHBOARD() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGC_DASHBOARD();
    }
    public static  int DIBUTTON_DRIVINGC_AIDS() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGC_AIDS();
    }
    public static  int DIBUTTON_DRIVINGC_BRAKE() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGC_BRAKE();
    }
    public static  int DIBUTTON_DRIVINGC_FIRESECONDARY() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGC_FIRESECONDARY();
    }
    public static  int DIBUTTON_DRIVINGC_ACCELERATE_LINK() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGC_ACCELERATE_LINK();
    }
    public static  int DIBUTTON_DRIVINGC_STEER_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGC_STEER_LEFT_LINK();
    }
    public static  int DIBUTTON_DRIVINGC_STEER_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGC_STEER_RIGHT_LINK();
    }
    public static  int DIBUTTON_DRIVINGC_GLANCE_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGC_GLANCE_LEFT_LINK();
    }
    public static  int DIBUTTON_DRIVINGC_GLANCE_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGC_GLANCE_RIGHT_LINK();
    }
    public static  int DIBUTTON_DRIVINGC_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGC_DEVICE();
    }
    public static  int DIBUTTON_DRIVINGC_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGC_PAUSE();
    }
    public static  int DIVIRTUAL_DRIVING_TANK() {
        return dinput_h_constants_0.DIVIRTUAL_DRIVING_TANK();
    }
    public static  int DIAXIS_DRIVINGT_STEER() {
        return dinput_h_constants_0.DIAXIS_DRIVINGT_STEER();
    }
    public static  int DIAXIS_DRIVINGT_BARREL() {
        return dinput_h_constants_0.DIAXIS_DRIVINGT_BARREL();
    }
    public static  int DIAXIS_DRIVINGT_ACCELERATE() {
        return dinput_h_constants_0.DIAXIS_DRIVINGT_ACCELERATE();
    }
    public static  int DIAXIS_DRIVINGT_ROTATE() {
        return dinput_h_constants_0.DIAXIS_DRIVINGT_ROTATE();
    }
    public static  int DIBUTTON_DRIVINGT_FIRE() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGT_FIRE();
    }
    public static  int DIBUTTON_DRIVINGT_WEAPONS() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGT_WEAPONS();
    }
    public static  int DIBUTTON_DRIVINGT_TARGET() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGT_TARGET();
    }
    public static  int DIBUTTON_DRIVINGT_MENU() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGT_MENU();
    }
    public static  int DIHATSWITCH_DRIVINGT_GLANCE() {
        return dinput_h_constants_0.DIHATSWITCH_DRIVINGT_GLANCE();
    }
    public static  int DIAXIS_DRIVINGT_BRAKE() {
        return dinput_h_constants_0.DIAXIS_DRIVINGT_BRAKE();
    }
    public static  int DIAXIS_DRIVINGT_ACCEL_AND_BRAKE() {
        return dinput_h_constants_0.DIAXIS_DRIVINGT_ACCEL_AND_BRAKE();
    }
    public static  int DIBUTTON_DRIVINGT_VIEW() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGT_VIEW();
    }
    public static  int DIBUTTON_DRIVINGT_DASHBOARD() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGT_DASHBOARD();
    }
    public static  int DIBUTTON_DRIVINGT_BRAKE() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGT_BRAKE();
    }
    public static  int DIBUTTON_DRIVINGT_FIRESECONDARY() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGT_FIRESECONDARY();
    }
    public static  int DIBUTTON_DRIVINGT_ACCELERATE_LINK() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGT_ACCELERATE_LINK();
    }
    public static  int DIBUTTON_DRIVINGT_STEER_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGT_STEER_LEFT_LINK();
    }
    public static  int DIBUTTON_DRIVINGT_STEER_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGT_STEER_RIGHT_LINK();
    }
    public static  int DIBUTTON_DRIVINGT_BARREL_UP_LINK() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGT_BARREL_UP_LINK();
    }
    public static  int DIBUTTON_DRIVINGT_BARREL_DOWN_LINK() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGT_BARREL_DOWN_LINK();
    }
    public static  int DIBUTTON_DRIVINGT_ROTATE_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGT_ROTATE_LEFT_LINK();
    }
    public static  int DIBUTTON_DRIVINGT_ROTATE_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGT_ROTATE_RIGHT_LINK();
    }
    public static  int DIBUTTON_DRIVINGT_GLANCE_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGT_GLANCE_LEFT_LINK();
    }
    public static  int DIBUTTON_DRIVINGT_GLANCE_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGT_GLANCE_RIGHT_LINK();
    }
    public static  int DIBUTTON_DRIVINGT_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGT_DEVICE();
    }
    public static  int DIBUTTON_DRIVINGT_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_DRIVINGT_PAUSE();
    }
    public static  int DIVIRTUAL_FLYING_CIVILIAN() {
        return dinput_h_constants_0.DIVIRTUAL_FLYING_CIVILIAN();
    }
    public static  int DIAXIS_FLYINGC_BANK() {
        return dinput_h_constants_0.DIAXIS_FLYINGC_BANK();
    }
    public static  int DIAXIS_FLYINGC_PITCH() {
        return dinput_h_constants_0.DIAXIS_FLYINGC_PITCH();
    }
    public static  int DIAXIS_FLYINGC_THROTTLE() {
        return dinput_h_constants_0.DIAXIS_FLYINGC_THROTTLE();
    }
    public static  int DIBUTTON_FLYINGC_VIEW() {
        return dinput_h_constants_0.DIBUTTON_FLYINGC_VIEW();
    }
    public static  int DIBUTTON_FLYINGC_DISPLAY() {
        return dinput_h_constants_0.DIBUTTON_FLYINGC_DISPLAY();
    }
    public static  int DIBUTTON_FLYINGC_GEAR() {
        return dinput_h_constants_0.DIBUTTON_FLYINGC_GEAR();
    }
    public static  int DIBUTTON_FLYINGC_MENU() {
        return dinput_h_constants_0.DIBUTTON_FLYINGC_MENU();
    }
    public static  int DIHATSWITCH_FLYINGC_GLANCE() {
        return dinput_h_constants_0.DIHATSWITCH_FLYINGC_GLANCE();
    }
    public static  int DIAXIS_FLYINGC_BRAKE() {
        return dinput_h_constants_0.DIAXIS_FLYINGC_BRAKE();
    }
    public static  int DIAXIS_FLYINGC_RUDDER() {
        return dinput_h_constants_0.DIAXIS_FLYINGC_RUDDER();
    }
    public static  int DIAXIS_FLYINGC_FLAPS() {
        return dinput_h_constants_0.DIAXIS_FLYINGC_FLAPS();
    }
    public static  int DIBUTTON_FLYINGC_FLAPSUP() {
        return dinput_h_constants_0.DIBUTTON_FLYINGC_FLAPSUP();
    }
    public static  int DIBUTTON_FLYINGC_FLAPSDOWN() {
        return dinput_h_constants_0.DIBUTTON_FLYINGC_FLAPSDOWN();
    }
    public static  int DIBUTTON_FLYINGC_BRAKE_LINK() {
        return dinput_h_constants_0.DIBUTTON_FLYINGC_BRAKE_LINK();
    }
    public static  int DIBUTTON_FLYINGC_FASTER_LINK() {
        return dinput_h_constants_0.DIBUTTON_FLYINGC_FASTER_LINK();
    }
    public static  int DIBUTTON_FLYINGC_SLOWER_LINK() {
        return dinput_h_constants_0.DIBUTTON_FLYINGC_SLOWER_LINK();
    }
    public static  int DIBUTTON_FLYINGC_GLANCE_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_FLYINGC_GLANCE_LEFT_LINK();
    }
    public static  int DIBUTTON_FLYINGC_GLANCE_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_FLYINGC_GLANCE_RIGHT_LINK();
    }
    public static  int DIBUTTON_FLYINGC_GLANCE_UP_LINK() {
        return dinput_h_constants_0.DIBUTTON_FLYINGC_GLANCE_UP_LINK();
    }
    public static  int DIBUTTON_FLYINGC_GLANCE_DOWN_LINK() {
        return dinput_h_constants_0.DIBUTTON_FLYINGC_GLANCE_DOWN_LINK();
    }
    public static  int DIBUTTON_FLYINGC_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_FLYINGC_DEVICE();
    }
    public static  int DIBUTTON_FLYINGC_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_FLYINGC_PAUSE();
    }
    public static  int DIVIRTUAL_FLYING_MILITARY() {
        return dinput_h_constants_0.DIVIRTUAL_FLYING_MILITARY();
    }
    public static  int DIAXIS_FLYINGM_BANK() {
        return dinput_h_constants_0.DIAXIS_FLYINGM_BANK();
    }
    public static  int DIAXIS_FLYINGM_PITCH() {
        return dinput_h_constants_0.DIAXIS_FLYINGM_PITCH();
    }
    public static  int DIAXIS_FLYINGM_THROTTLE() {
        return dinput_h_constants_0.DIAXIS_FLYINGM_THROTTLE();
    }
    public static  int DIBUTTON_FLYINGM_FIRE() {
        return dinput_h_constants_0.DIBUTTON_FLYINGM_FIRE();
    }
    public static  int DIBUTTON_FLYINGM_WEAPONS() {
        return dinput_h_constants_0.DIBUTTON_FLYINGM_WEAPONS();
    }
    public static  int DIBUTTON_FLYINGM_TARGET() {
        return dinput_h_constants_0.DIBUTTON_FLYINGM_TARGET();
    }
    public static  int DIBUTTON_FLYINGM_MENU() {
        return dinput_h_constants_0.DIBUTTON_FLYINGM_MENU();
    }
    public static  int DIHATSWITCH_FLYINGM_GLANCE() {
        return dinput_h_constants_0.DIHATSWITCH_FLYINGM_GLANCE();
    }
    public static  int DIBUTTON_FLYINGM_COUNTER() {
        return dinput_h_constants_0.DIBUTTON_FLYINGM_COUNTER();
    }
    public static  int DIAXIS_FLYINGM_RUDDER() {
        return dinput_h_constants_0.DIAXIS_FLYINGM_RUDDER();
    }
    public static  int DIAXIS_FLYINGM_BRAKE() {
        return dinput_h_constants_0.DIAXIS_FLYINGM_BRAKE();
    }
    public static  int DIBUTTON_FLYINGM_VIEW() {
        return dinput_h_constants_0.DIBUTTON_FLYINGM_VIEW();
    }
    public static  int DIBUTTON_FLYINGM_DISPLAY() {
        return dinput_h_constants_0.DIBUTTON_FLYINGM_DISPLAY();
    }
    public static  int DIAXIS_FLYINGM_FLAPS() {
        return dinput_h_constants_0.DIAXIS_FLYINGM_FLAPS();
    }
    public static  int DIBUTTON_FLYINGM_FLAPSUP() {
        return dinput_h_constants_0.DIBUTTON_FLYINGM_FLAPSUP();
    }
    public static  int DIBUTTON_FLYINGM_FLAPSDOWN() {
        return dinput_h_constants_0.DIBUTTON_FLYINGM_FLAPSDOWN();
    }
    public static  int DIBUTTON_FLYINGM_FIRESECONDARY() {
        return dinput_h_constants_0.DIBUTTON_FLYINGM_FIRESECONDARY();
    }
    public static  int DIBUTTON_FLYINGM_GEAR() {
        return dinput_h_constants_0.DIBUTTON_FLYINGM_GEAR();
    }
    public static  int DIBUTTON_FLYINGM_BRAKE_LINK() {
        return dinput_h_constants_0.DIBUTTON_FLYINGM_BRAKE_LINK();
    }
    public static  int DIBUTTON_FLYINGM_FASTER_LINK() {
        return dinput_h_constants_0.DIBUTTON_FLYINGM_FASTER_LINK();
    }
    public static  int DIBUTTON_FLYINGM_SLOWER_LINK() {
        return dinput_h_constants_0.DIBUTTON_FLYINGM_SLOWER_LINK();
    }
    public static  int DIBUTTON_FLYINGM_GLANCE_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_FLYINGM_GLANCE_LEFT_LINK();
    }
    public static  int DIBUTTON_FLYINGM_GLANCE_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_FLYINGM_GLANCE_RIGHT_LINK();
    }
    public static  int DIBUTTON_FLYINGM_GLANCE_UP_LINK() {
        return dinput_h_constants_0.DIBUTTON_FLYINGM_GLANCE_UP_LINK();
    }
    public static  int DIBUTTON_FLYINGM_GLANCE_DOWN_LINK() {
        return dinput_h_constants_0.DIBUTTON_FLYINGM_GLANCE_DOWN_LINK();
    }
    public static  int DIBUTTON_FLYINGM_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_FLYINGM_DEVICE();
    }
    public static  int DIBUTTON_FLYINGM_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_FLYINGM_PAUSE();
    }
    public static  int DIVIRTUAL_FLYING_HELICOPTER() {
        return dinput_h_constants_0.DIVIRTUAL_FLYING_HELICOPTER();
    }
    public static  int DIAXIS_FLYINGH_BANK() {
        return dinput_h_constants_0.DIAXIS_FLYINGH_BANK();
    }
    public static  int DIAXIS_FLYINGH_PITCH() {
        return dinput_h_constants_0.DIAXIS_FLYINGH_PITCH();
    }
    public static  int DIAXIS_FLYINGH_COLLECTIVE() {
        return dinput_h_constants_0.DIAXIS_FLYINGH_COLLECTIVE();
    }
    public static  int DIBUTTON_FLYINGH_FIRE() {
        return dinput_h_constants_0.DIBUTTON_FLYINGH_FIRE();
    }
    public static  int DIBUTTON_FLYINGH_WEAPONS() {
        return dinput_h_constants_0.DIBUTTON_FLYINGH_WEAPONS();
    }
    public static  int DIBUTTON_FLYINGH_TARGET() {
        return dinput_h_constants_0.DIBUTTON_FLYINGH_TARGET();
    }
    public static  int DIBUTTON_FLYINGH_MENU() {
        return dinput_h_constants_0.DIBUTTON_FLYINGH_MENU();
    }
    public static  int DIHATSWITCH_FLYINGH_GLANCE() {
        return dinput_h_constants_0.DIHATSWITCH_FLYINGH_GLANCE();
    }
    public static  int DIAXIS_FLYINGH_TORQUE() {
        return dinput_h_constants_0.DIAXIS_FLYINGH_TORQUE();
    }
    public static  int DIAXIS_FLYINGH_THROTTLE() {
        return dinput_h_constants_0.DIAXIS_FLYINGH_THROTTLE();
    }
    public static  int DIBUTTON_FLYINGH_COUNTER() {
        return dinput_h_constants_0.DIBUTTON_FLYINGH_COUNTER();
    }
    public static  int DIBUTTON_FLYINGH_VIEW() {
        return dinput_h_constants_0.DIBUTTON_FLYINGH_VIEW();
    }
    public static  int DIBUTTON_FLYINGH_GEAR() {
        return dinput_h_constants_0.DIBUTTON_FLYINGH_GEAR();
    }
    public static  int DIBUTTON_FLYINGH_FIRESECONDARY() {
        return dinput_h_constants_0.DIBUTTON_FLYINGH_FIRESECONDARY();
    }
    public static  int DIBUTTON_FLYINGH_FASTER_LINK() {
        return dinput_h_constants_0.DIBUTTON_FLYINGH_FASTER_LINK();
    }
    public static  int DIBUTTON_FLYINGH_SLOWER_LINK() {
        return dinput_h_constants_0.DIBUTTON_FLYINGH_SLOWER_LINK();
    }
    public static  int DIBUTTON_FLYINGH_GLANCE_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_FLYINGH_GLANCE_LEFT_LINK();
    }
    public static  int DIBUTTON_FLYINGH_GLANCE_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_FLYINGH_GLANCE_RIGHT_LINK();
    }
    public static  int DIBUTTON_FLYINGH_GLANCE_UP_LINK() {
        return dinput_h_constants_0.DIBUTTON_FLYINGH_GLANCE_UP_LINK();
    }
    public static  int DIBUTTON_FLYINGH_GLANCE_DOWN_LINK() {
        return dinput_h_constants_0.DIBUTTON_FLYINGH_GLANCE_DOWN_LINK();
    }
    public static  int DIBUTTON_FLYINGH_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_FLYINGH_DEVICE();
    }
    public static  int DIBUTTON_FLYINGH_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_FLYINGH_PAUSE();
    }
    public static  int DIVIRTUAL_SPACESIM() {
        return dinput_h_constants_0.DIVIRTUAL_SPACESIM();
    }
    public static  int DIAXIS_SPACESIM_LATERAL() {
        return dinput_h_constants_0.DIAXIS_SPACESIM_LATERAL();
    }
    public static  int DIAXIS_SPACESIM_MOVE() {
        return dinput_h_constants_0.DIAXIS_SPACESIM_MOVE();
    }
    public static  int DIAXIS_SPACESIM_THROTTLE() {
        return dinput_h_constants_0.DIAXIS_SPACESIM_THROTTLE();
    }
    public static  int DIBUTTON_SPACESIM_FIRE() {
        return dinput_h_constants_0.DIBUTTON_SPACESIM_FIRE();
    }
    public static  int DIBUTTON_SPACESIM_WEAPONS() {
        return dinput_h_constants_0.DIBUTTON_SPACESIM_WEAPONS();
    }
    public static  int DIBUTTON_SPACESIM_TARGET() {
        return dinput_h_constants_0.DIBUTTON_SPACESIM_TARGET();
    }
    public static  int DIBUTTON_SPACESIM_MENU() {
        return dinput_h_constants_0.DIBUTTON_SPACESIM_MENU();
    }
    public static  int DIHATSWITCH_SPACESIM_GLANCE() {
        return dinput_h_constants_0.DIHATSWITCH_SPACESIM_GLANCE();
    }
    public static  int DIAXIS_SPACESIM_CLIMB() {
        return dinput_h_constants_0.DIAXIS_SPACESIM_CLIMB();
    }
    public static  int DIAXIS_SPACESIM_ROTATE() {
        return dinput_h_constants_0.DIAXIS_SPACESIM_ROTATE();
    }
    public static  int DIBUTTON_SPACESIM_VIEW() {
        return dinput_h_constants_0.DIBUTTON_SPACESIM_VIEW();
    }
    public static  int DIBUTTON_SPACESIM_DISPLAY() {
        return dinput_h_constants_0.DIBUTTON_SPACESIM_DISPLAY();
    }
    public static  int DIBUTTON_SPACESIM_RAISE() {
        return dinput_h_constants_0.DIBUTTON_SPACESIM_RAISE();
    }
    public static  int DIBUTTON_SPACESIM_LOWER() {
        return dinput_h_constants_0.DIBUTTON_SPACESIM_LOWER();
    }
    public static  int DIBUTTON_SPACESIM_GEAR() {
        return dinput_h_constants_0.DIBUTTON_SPACESIM_GEAR();
    }
    public static  int DIBUTTON_SPACESIM_FIRESECONDARY() {
        return dinput_h_constants_0.DIBUTTON_SPACESIM_FIRESECONDARY();
    }
    public static  int DIBUTTON_SPACESIM_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_SPACESIM_LEFT_LINK();
    }
    public static  int DIBUTTON_SPACESIM_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_SPACESIM_RIGHT_LINK();
    }
    public static  int DIBUTTON_SPACESIM_FORWARD_LINK() {
        return dinput_h_constants_0.DIBUTTON_SPACESIM_FORWARD_LINK();
    }
    public static  int DIBUTTON_SPACESIM_BACKWARD_LINK() {
        return dinput_h_constants_0.DIBUTTON_SPACESIM_BACKWARD_LINK();
    }
    public static  int DIBUTTON_SPACESIM_FASTER_LINK() {
        return dinput_h_constants_0.DIBUTTON_SPACESIM_FASTER_LINK();
    }
    public static  int DIBUTTON_SPACESIM_SLOWER_LINK() {
        return dinput_h_constants_0.DIBUTTON_SPACESIM_SLOWER_LINK();
    }
    public static  int DIBUTTON_SPACESIM_TURN_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_SPACESIM_TURN_LEFT_LINK();
    }
    public static  int DIBUTTON_SPACESIM_TURN_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_SPACESIM_TURN_RIGHT_LINK();
    }
    public static  int DIBUTTON_SPACESIM_GLANCE_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_SPACESIM_GLANCE_LEFT_LINK();
    }
    public static  int DIBUTTON_SPACESIM_GLANCE_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_SPACESIM_GLANCE_RIGHT_LINK();
    }
    public static  int DIBUTTON_SPACESIM_GLANCE_UP_LINK() {
        return dinput_h_constants_0.DIBUTTON_SPACESIM_GLANCE_UP_LINK();
    }
    public static  int DIBUTTON_SPACESIM_GLANCE_DOWN_LINK() {
        return dinput_h_constants_0.DIBUTTON_SPACESIM_GLANCE_DOWN_LINK();
    }
    public static  int DIBUTTON_SPACESIM_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_SPACESIM_DEVICE();
    }
    public static  int DIBUTTON_SPACESIM_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_SPACESIM_PAUSE();
    }
    public static  int DIVIRTUAL_FIGHTING_HAND2HAND() {
        return dinput_h_constants_0.DIVIRTUAL_FIGHTING_HAND2HAND();
    }
    public static  int DIAXIS_FIGHTINGH_LATERAL() {
        return dinput_h_constants_0.DIAXIS_FIGHTINGH_LATERAL();
    }
    public static  int DIAXIS_FIGHTINGH_MOVE() {
        return dinput_h_constants_0.DIAXIS_FIGHTINGH_MOVE();
    }
    public static  int DIBUTTON_FIGHTINGH_PUNCH() {
        return dinput_h_constants_0.DIBUTTON_FIGHTINGH_PUNCH();
    }
    public static  int DIBUTTON_FIGHTINGH_KICK() {
        return dinput_h_constants_0.DIBUTTON_FIGHTINGH_KICK();
    }
    public static  int DIBUTTON_FIGHTINGH_BLOCK() {
        return dinput_h_constants_0.DIBUTTON_FIGHTINGH_BLOCK();
    }
    public static  int DIBUTTON_FIGHTINGH_CROUCH() {
        return dinput_h_constants_0.DIBUTTON_FIGHTINGH_CROUCH();
    }
    public static  int DIBUTTON_FIGHTINGH_JUMP() {
        return dinput_h_constants_0.DIBUTTON_FIGHTINGH_JUMP();
    }
    public static  int DIBUTTON_FIGHTINGH_SPECIAL1() {
        return dinput_h_constants_0.DIBUTTON_FIGHTINGH_SPECIAL1();
    }
    public static  int DIBUTTON_FIGHTINGH_SPECIAL2() {
        return dinput_h_constants_0.DIBUTTON_FIGHTINGH_SPECIAL2();
    }
    public static  int DIBUTTON_FIGHTINGH_MENU() {
        return dinput_h_constants_0.DIBUTTON_FIGHTINGH_MENU();
    }
    public static  int DIBUTTON_FIGHTINGH_SELECT() {
        return dinput_h_constants_0.DIBUTTON_FIGHTINGH_SELECT();
    }
    public static  int DIHATSWITCH_FIGHTINGH_SLIDE() {
        return dinput_h_constants_0.DIHATSWITCH_FIGHTINGH_SLIDE();
    }
    public static  int DIBUTTON_FIGHTINGH_DISPLAY() {
        return dinput_h_constants_0.DIBUTTON_FIGHTINGH_DISPLAY();
    }
    public static  int DIAXIS_FIGHTINGH_ROTATE() {
        return dinput_h_constants_0.DIAXIS_FIGHTINGH_ROTATE();
    }
    public static  int DIBUTTON_FIGHTINGH_DODGE() {
        return dinput_h_constants_0.DIBUTTON_FIGHTINGH_DODGE();
    }
    public static  int DIBUTTON_FIGHTINGH_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_FIGHTINGH_LEFT_LINK();
    }
    public static  int DIBUTTON_FIGHTINGH_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_FIGHTINGH_RIGHT_LINK();
    }
    public static  int DIBUTTON_FIGHTINGH_FORWARD_LINK() {
        return dinput_h_constants_0.DIBUTTON_FIGHTINGH_FORWARD_LINK();
    }
    public static  int DIBUTTON_FIGHTINGH_BACKWARD_LINK() {
        return dinput_h_constants_0.DIBUTTON_FIGHTINGH_BACKWARD_LINK();
    }
    public static  int DIBUTTON_FIGHTINGH_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_FIGHTINGH_DEVICE();
    }
    public static  int DIBUTTON_FIGHTINGH_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_FIGHTINGH_PAUSE();
    }
    public static  int DIVIRTUAL_FIGHTING_FPS() {
        return dinput_h_constants_0.DIVIRTUAL_FIGHTING_FPS();
    }
    public static  int DIAXIS_FPS_ROTATE() {
        return dinput_h_constants_0.DIAXIS_FPS_ROTATE();
    }
    public static  int DIAXIS_FPS_MOVE() {
        return dinput_h_constants_0.DIAXIS_FPS_MOVE();
    }
    public static  int DIBUTTON_FPS_FIRE() {
        return dinput_h_constants_0.DIBUTTON_FPS_FIRE();
    }
    public static  int DIBUTTON_FPS_WEAPONS() {
        return dinput_h_constants_0.DIBUTTON_FPS_WEAPONS();
    }
    public static  int DIBUTTON_FPS_APPLY() {
        return dinput_h_constants_0.DIBUTTON_FPS_APPLY();
    }
    public static  int DIBUTTON_FPS_SELECT() {
        return dinput_h_constants_0.DIBUTTON_FPS_SELECT();
    }
    public static  int DIBUTTON_FPS_CROUCH() {
        return dinput_h_constants_0.DIBUTTON_FPS_CROUCH();
    }
    public static  int DIBUTTON_FPS_JUMP() {
        return dinput_h_constants_0.DIBUTTON_FPS_JUMP();
    }
    public static  int DIAXIS_FPS_LOOKUPDOWN() {
        return dinput_h_constants_0.DIAXIS_FPS_LOOKUPDOWN();
    }
    public static  int DIBUTTON_FPS_STRAFE() {
        return dinput_h_constants_0.DIBUTTON_FPS_STRAFE();
    }
    public static  int DIBUTTON_FPS_MENU() {
        return dinput_h_constants_0.DIBUTTON_FPS_MENU();
    }
    public static  int DIHATSWITCH_FPS_GLANCE() {
        return dinput_h_constants_0.DIHATSWITCH_FPS_GLANCE();
    }
    public static  int DIBUTTON_FPS_DISPLAY() {
        return dinput_h_constants_0.DIBUTTON_FPS_DISPLAY();
    }
    public static  int DIAXIS_FPS_SIDESTEP() {
        return dinput_h_constants_0.DIAXIS_FPS_SIDESTEP();
    }
    public static  int DIBUTTON_FPS_DODGE() {
        return dinput_h_constants_0.DIBUTTON_FPS_DODGE();
    }
    public static  int DIBUTTON_FPS_GLANCEL() {
        return dinput_h_constants_0.DIBUTTON_FPS_GLANCEL();
    }
    public static  int DIBUTTON_FPS_GLANCER() {
        return dinput_h_constants_0.DIBUTTON_FPS_GLANCER();
    }
    public static  int DIBUTTON_FPS_FIRESECONDARY() {
        return dinput_h_constants_0.DIBUTTON_FPS_FIRESECONDARY();
    }
    public static  int DIBUTTON_FPS_ROTATE_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_FPS_ROTATE_LEFT_LINK();
    }
    public static  int DIBUTTON_FPS_ROTATE_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_FPS_ROTATE_RIGHT_LINK();
    }
    public static  int DIBUTTON_FPS_FORWARD_LINK() {
        return dinput_h_constants_0.DIBUTTON_FPS_FORWARD_LINK();
    }
    public static  int DIBUTTON_FPS_BACKWARD_LINK() {
        return dinput_h_constants_0.DIBUTTON_FPS_BACKWARD_LINK();
    }
    public static  int DIBUTTON_FPS_GLANCE_UP_LINK() {
        return dinput_h_constants_0.DIBUTTON_FPS_GLANCE_UP_LINK();
    }
    public static  int DIBUTTON_FPS_GLANCE_DOWN_LINK() {
        return dinput_h_constants_0.DIBUTTON_FPS_GLANCE_DOWN_LINK();
    }
    public static  int DIBUTTON_FPS_STEP_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_FPS_STEP_LEFT_LINK();
    }
    public static  int DIBUTTON_FPS_STEP_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_FPS_STEP_RIGHT_LINK();
    }
    public static  int DIBUTTON_FPS_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_FPS_DEVICE();
    }
    public static  int DIBUTTON_FPS_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_FPS_PAUSE();
    }
    public static  int DIVIRTUAL_FIGHTING_THIRDPERSON() {
        return dinput_h_constants_0.DIVIRTUAL_FIGHTING_THIRDPERSON();
    }
    public static  int DIAXIS_TPS_TURN() {
        return dinput_h_constants_0.DIAXIS_TPS_TURN();
    }
    public static  int DIAXIS_TPS_MOVE() {
        return dinput_h_constants_0.DIAXIS_TPS_MOVE();
    }
    public static  int DIBUTTON_TPS_RUN() {
        return dinput_h_constants_0.DIBUTTON_TPS_RUN();
    }
    public static  int DIBUTTON_TPS_ACTION() {
        return dinput_h_constants_0.DIBUTTON_TPS_ACTION();
    }
    public static  int DIBUTTON_TPS_SELECT() {
        return dinput_h_constants_0.DIBUTTON_TPS_SELECT();
    }
    public static  int DIBUTTON_TPS_USE() {
        return dinput_h_constants_0.DIBUTTON_TPS_USE();
    }
    public static  int DIBUTTON_TPS_JUMP() {
        return dinput_h_constants_0.DIBUTTON_TPS_JUMP();
    }
    public static  int DIBUTTON_TPS_MENU() {
        return dinput_h_constants_0.DIBUTTON_TPS_MENU();
    }
    public static  int DIHATSWITCH_TPS_GLANCE() {
        return dinput_h_constants_0.DIHATSWITCH_TPS_GLANCE();
    }
    public static  int DIBUTTON_TPS_VIEW() {
        return dinput_h_constants_0.DIBUTTON_TPS_VIEW();
    }
    public static  int DIBUTTON_TPS_STEPLEFT() {
        return dinput_h_constants_0.DIBUTTON_TPS_STEPLEFT();
    }
    public static  int DIBUTTON_TPS_STEPRIGHT() {
        return dinput_h_constants_0.DIBUTTON_TPS_STEPRIGHT();
    }
    public static  int DIAXIS_TPS_STEP() {
        return dinput_h_constants_0.DIAXIS_TPS_STEP();
    }
    public static  int DIBUTTON_TPS_DODGE() {
        return dinput_h_constants_0.DIBUTTON_TPS_DODGE();
    }
    public static  int DIBUTTON_TPS_INVENTORY() {
        return dinput_h_constants_0.DIBUTTON_TPS_INVENTORY();
    }
    public static  int DIBUTTON_TPS_TURN_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_TPS_TURN_LEFT_LINK();
    }
    public static  int DIBUTTON_TPS_TURN_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_TPS_TURN_RIGHT_LINK();
    }
    public static  int DIBUTTON_TPS_FORWARD_LINK() {
        return dinput_h_constants_0.DIBUTTON_TPS_FORWARD_LINK();
    }
    public static  int DIBUTTON_TPS_BACKWARD_LINK() {
        return dinput_h_constants_0.DIBUTTON_TPS_BACKWARD_LINK();
    }
    public static  int DIBUTTON_TPS_GLANCE_UP_LINK() {
        return dinput_h_constants_0.DIBUTTON_TPS_GLANCE_UP_LINK();
    }
    public static  int DIBUTTON_TPS_GLANCE_DOWN_LINK() {
        return dinput_h_constants_0.DIBUTTON_TPS_GLANCE_DOWN_LINK();
    }
    public static  int DIBUTTON_TPS_GLANCE_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_TPS_GLANCE_LEFT_LINK();
    }
    public static  int DIBUTTON_TPS_GLANCE_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_TPS_GLANCE_RIGHT_LINK();
    }
    public static  int DIBUTTON_TPS_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_TPS_DEVICE();
    }
    public static  int DIBUTTON_TPS_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_TPS_PAUSE();
    }
    public static  int DIVIRTUAL_STRATEGY_ROLEPLAYING() {
        return dinput_h_constants_0.DIVIRTUAL_STRATEGY_ROLEPLAYING();
    }
    public static  int DIAXIS_STRATEGYR_LATERAL() {
        return dinput_h_constants_0.DIAXIS_STRATEGYR_LATERAL();
    }
    public static  int DIAXIS_STRATEGYR_MOVE() {
        return dinput_h_constants_0.DIAXIS_STRATEGYR_MOVE();
    }
    public static  int DIBUTTON_STRATEGYR_GET() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYR_GET();
    }
    public static  int DIBUTTON_STRATEGYR_APPLY() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYR_APPLY();
    }
    public static  int DIBUTTON_STRATEGYR_SELECT() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYR_SELECT();
    }
    public static  int DIBUTTON_STRATEGYR_ATTACK() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYR_ATTACK();
    }
    public static  int DIBUTTON_STRATEGYR_CAST() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYR_CAST();
    }
    public static  int DIBUTTON_STRATEGYR_CROUCH() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYR_CROUCH();
    }
    public static  int DIBUTTON_STRATEGYR_JUMP() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYR_JUMP();
    }
    public static  int DIBUTTON_STRATEGYR_MENU() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYR_MENU();
    }
    public static  int DIHATSWITCH_STRATEGYR_GLANCE() {
        return dinput_h_constants_0.DIHATSWITCH_STRATEGYR_GLANCE();
    }
    public static  int DIBUTTON_STRATEGYR_MAP() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYR_MAP();
    }
    public static  int DIBUTTON_STRATEGYR_DISPLAY() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYR_DISPLAY();
    }
    public static  int DIAXIS_STRATEGYR_ROTATE() {
        return dinput_h_constants_0.DIAXIS_STRATEGYR_ROTATE();
    }
    public static  int DIBUTTON_STRATEGYR_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYR_LEFT_LINK();
    }
    public static  int DIBUTTON_STRATEGYR_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYR_RIGHT_LINK();
    }
    public static  int DIBUTTON_STRATEGYR_FORWARD_LINK() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYR_FORWARD_LINK();
    }
    public static  int DIBUTTON_STRATEGYR_BACK_LINK() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYR_BACK_LINK();
    }
    public static  int DIBUTTON_STRATEGYR_ROTATE_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYR_ROTATE_LEFT_LINK();
    }
    public static  int DIBUTTON_STRATEGYR_ROTATE_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYR_ROTATE_RIGHT_LINK();
    }
    public static  int DIBUTTON_STRATEGYR_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYR_DEVICE();
    }
    public static  int DIBUTTON_STRATEGYR_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYR_PAUSE();
    }
    public static  int DIVIRTUAL_STRATEGY_TURN() {
        return dinput_h_constants_0.DIVIRTUAL_STRATEGY_TURN();
    }
    public static  int DIAXIS_STRATEGYT_LATERAL() {
        return dinput_h_constants_0.DIAXIS_STRATEGYT_LATERAL();
    }
    public static  int DIAXIS_STRATEGYT_MOVE() {
        return dinput_h_constants_0.DIAXIS_STRATEGYT_MOVE();
    }
    public static  int DIBUTTON_STRATEGYT_SELECT() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYT_SELECT();
    }
    public static  int DIBUTTON_STRATEGYT_INSTRUCT() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYT_INSTRUCT();
    }
    public static  int DIBUTTON_STRATEGYT_APPLY() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYT_APPLY();
    }
    public static  int DIBUTTON_STRATEGYT_TEAM() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYT_TEAM();
    }
    public static  int DIBUTTON_STRATEGYT_TURN() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYT_TURN();
    }
    public static  int DIBUTTON_STRATEGYT_MENU() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYT_MENU();
    }
    public static  int DIBUTTON_STRATEGYT_ZOOM() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYT_ZOOM();
    }
    public static  int DIBUTTON_STRATEGYT_MAP() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYT_MAP();
    }
    public static  int DIBUTTON_STRATEGYT_DISPLAY() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYT_DISPLAY();
    }
    public static  int DIBUTTON_STRATEGYT_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYT_LEFT_LINK();
    }
    public static  int DIBUTTON_STRATEGYT_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYT_RIGHT_LINK();
    }
    public static  int DIBUTTON_STRATEGYT_FORWARD_LINK() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYT_FORWARD_LINK();
    }
    public static  int DIBUTTON_STRATEGYT_BACK_LINK() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYT_BACK_LINK();
    }
    public static  int DIBUTTON_STRATEGYT_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYT_DEVICE();
    }
    public static  int DIBUTTON_STRATEGYT_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_STRATEGYT_PAUSE();
    }
    public static  int DIVIRTUAL_SPORTS_HUNTING() {
        return dinput_h_constants_0.DIVIRTUAL_SPORTS_HUNTING();
    }
    public static  int DIAXIS_HUNTING_LATERAL() {
        return dinput_h_constants_0.DIAXIS_HUNTING_LATERAL();
    }
    public static  int DIAXIS_HUNTING_MOVE() {
        return dinput_h_constants_0.DIAXIS_HUNTING_MOVE();
    }
    public static  int DIBUTTON_HUNTING_FIRE() {
        return dinput_h_constants_0.DIBUTTON_HUNTING_FIRE();
    }
    public static  int DIBUTTON_HUNTING_AIM() {
        return dinput_h_constants_0.DIBUTTON_HUNTING_AIM();
    }
    public static  int DIBUTTON_HUNTING_WEAPON() {
        return dinput_h_constants_0.DIBUTTON_HUNTING_WEAPON();
    }
    public static  int DIBUTTON_HUNTING_BINOCULAR() {
        return dinput_h_constants_0.DIBUTTON_HUNTING_BINOCULAR();
    }
    public static  int DIBUTTON_HUNTING_CALL() {
        return dinput_h_constants_0.DIBUTTON_HUNTING_CALL();
    }
    public static  int DIBUTTON_HUNTING_MAP() {
        return dinput_h_constants_0.DIBUTTON_HUNTING_MAP();
    }
    public static  int DIBUTTON_HUNTING_SPECIAL() {
        return dinput_h_constants_0.DIBUTTON_HUNTING_SPECIAL();
    }
    public static  int DIBUTTON_HUNTING_MENU() {
        return dinput_h_constants_0.DIBUTTON_HUNTING_MENU();
    }
    public static  int DIHATSWITCH_HUNTING_GLANCE() {
        return dinput_h_constants_0.DIHATSWITCH_HUNTING_GLANCE();
    }
    public static  int DIBUTTON_HUNTING_DISPLAY() {
        return dinput_h_constants_0.DIBUTTON_HUNTING_DISPLAY();
    }
    public static  int DIAXIS_HUNTING_ROTATE() {
        return dinput_h_constants_0.DIAXIS_HUNTING_ROTATE();
    }
    public static  int DIBUTTON_HUNTING_CROUCH() {
        return dinput_h_constants_0.DIBUTTON_HUNTING_CROUCH();
    }
    public static  int DIBUTTON_HUNTING_JUMP() {
        return dinput_h_constants_0.DIBUTTON_HUNTING_JUMP();
    }
    public static  int DIBUTTON_HUNTING_FIRESECONDARY() {
        return dinput_h_constants_0.DIBUTTON_HUNTING_FIRESECONDARY();
    }
    public static  int DIBUTTON_HUNTING_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_HUNTING_LEFT_LINK();
    }
    public static  int DIBUTTON_HUNTING_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_HUNTING_RIGHT_LINK();
    }
    public static  int DIBUTTON_HUNTING_FORWARD_LINK() {
        return dinput_h_constants_0.DIBUTTON_HUNTING_FORWARD_LINK();
    }
    public static  int DIBUTTON_HUNTING_BACK_LINK() {
        return dinput_h_constants_0.DIBUTTON_HUNTING_BACK_LINK();
    }
    public static  int DIBUTTON_HUNTING_ROTATE_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_HUNTING_ROTATE_LEFT_LINK();
    }
    public static  int DIBUTTON_HUNTING_ROTATE_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_HUNTING_ROTATE_RIGHT_LINK();
    }
    public static  int DIBUTTON_HUNTING_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_HUNTING_DEVICE();
    }
    public static  int DIBUTTON_HUNTING_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_HUNTING_PAUSE();
    }
    public static  int DIVIRTUAL_SPORTS_FISHING() {
        return dinput_h_constants_0.DIVIRTUAL_SPORTS_FISHING();
    }
    public static  int DIAXIS_FISHING_LATERAL() {
        return dinput_h_constants_0.DIAXIS_FISHING_LATERAL();
    }
    public static  int DIAXIS_FISHING_MOVE() {
        return dinput_h_constants_0.DIAXIS_FISHING_MOVE();
    }
    public static  int DIBUTTON_FISHING_CAST() {
        return dinput_h_constants_0.DIBUTTON_FISHING_CAST();
    }
    public static  int DIBUTTON_FISHING_TYPE() {
        return dinput_h_constants_0.DIBUTTON_FISHING_TYPE();
    }
    public static  int DIBUTTON_FISHING_BINOCULAR() {
        return dinput_h_constants_0.DIBUTTON_FISHING_BINOCULAR();
    }
    public static  int DIBUTTON_FISHING_BAIT() {
        return dinput_h_constants_0.DIBUTTON_FISHING_BAIT();
    }
    public static  int DIBUTTON_FISHING_MAP() {
        return dinput_h_constants_0.DIBUTTON_FISHING_MAP();
    }
    public static  int DIBUTTON_FISHING_MENU() {
        return dinput_h_constants_0.DIBUTTON_FISHING_MENU();
    }
    public static  int DIHATSWITCH_FISHING_GLANCE() {
        return dinput_h_constants_0.DIHATSWITCH_FISHING_GLANCE();
    }
    public static  int DIBUTTON_FISHING_DISPLAY() {
        return dinput_h_constants_0.DIBUTTON_FISHING_DISPLAY();
    }
    public static  int DIAXIS_FISHING_ROTATE() {
        return dinput_h_constants_0.DIAXIS_FISHING_ROTATE();
    }
    public static  int DIBUTTON_FISHING_CROUCH() {
        return dinput_h_constants_0.DIBUTTON_FISHING_CROUCH();
    }
    public static  int DIBUTTON_FISHING_JUMP() {
        return dinput_h_constants_0.DIBUTTON_FISHING_JUMP();
    }
    public static  int DIBUTTON_FISHING_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_FISHING_LEFT_LINK();
    }
    public static  int DIBUTTON_FISHING_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_FISHING_RIGHT_LINK();
    }
    public static  int DIBUTTON_FISHING_FORWARD_LINK() {
        return dinput_h_constants_0.DIBUTTON_FISHING_FORWARD_LINK();
    }
    public static  int DIBUTTON_FISHING_BACK_LINK() {
        return dinput_h_constants_0.DIBUTTON_FISHING_BACK_LINK();
    }
    public static  int DIBUTTON_FISHING_ROTATE_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_FISHING_ROTATE_LEFT_LINK();
    }
    public static  int DIBUTTON_FISHING_ROTATE_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_FISHING_ROTATE_RIGHT_LINK();
    }
    public static  int DIBUTTON_FISHING_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_FISHING_DEVICE();
    }
    public static  int DIBUTTON_FISHING_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_FISHING_PAUSE();
    }
    public static  int DIVIRTUAL_SPORTS_BASEBALL_BAT() {
        return dinput_h_constants_0.DIVIRTUAL_SPORTS_BASEBALL_BAT();
    }
    public static  int DIAXIS_BASEBALLB_LATERAL() {
        return dinput_h_constants_0.DIAXIS_BASEBALLB_LATERAL();
    }
    public static  int DIAXIS_BASEBALLB_MOVE() {
        return dinput_h_constants_0.DIAXIS_BASEBALLB_MOVE();
    }
    public static  int DIBUTTON_BASEBALLB_SELECT() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLB_SELECT();
    }
    public static  int DIBUTTON_BASEBALLB_NORMAL() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLB_NORMAL();
    }
    public static  int DIBUTTON_BASEBALLB_POWER() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLB_POWER();
    }
    public static  int DIBUTTON_BASEBALLB_BUNT() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLB_BUNT();
    }
    public static  int DIBUTTON_BASEBALLB_STEAL() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLB_STEAL();
    }
    public static  int DIBUTTON_BASEBALLB_BURST() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLB_BURST();
    }
    public static  int DIBUTTON_BASEBALLB_SLIDE() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLB_SLIDE();
    }
    public static  int DIBUTTON_BASEBALLB_CONTACT() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLB_CONTACT();
    }
    public static  int DIBUTTON_BASEBALLB_MENU() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLB_MENU();
    }
    public static  int DIBUTTON_BASEBALLB_NOSTEAL() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLB_NOSTEAL();
    }
    public static  int DIBUTTON_BASEBALLB_BOX() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLB_BOX();
    }
    public static  int DIBUTTON_BASEBALLB_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLB_LEFT_LINK();
    }
    public static  int DIBUTTON_BASEBALLB_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLB_RIGHT_LINK();
    }
    public static  int DIBUTTON_BASEBALLB_FORWARD_LINK() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLB_FORWARD_LINK();
    }
    public static  int DIBUTTON_BASEBALLB_BACK_LINK() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLB_BACK_LINK();
    }
    public static  int DIBUTTON_BASEBALLB_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLB_DEVICE();
    }
    public static  int DIBUTTON_BASEBALLB_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLB_PAUSE();
    }
    public static  int DIVIRTUAL_SPORTS_BASEBALL_PITCH() {
        return dinput_h_constants_0.DIVIRTUAL_SPORTS_BASEBALL_PITCH();
    }
    public static  int DIAXIS_BASEBALLP_LATERAL() {
        return dinput_h_constants_0.DIAXIS_BASEBALLP_LATERAL();
    }
    public static  int DIAXIS_BASEBALLP_MOVE() {
        return dinput_h_constants_0.DIAXIS_BASEBALLP_MOVE();
    }
    public static  int DIBUTTON_BASEBALLP_SELECT() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLP_SELECT();
    }
    public static  int DIBUTTON_BASEBALLP_PITCH() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLP_PITCH();
    }
    public static  int DIBUTTON_BASEBALLP_BASE() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLP_BASE();
    }
    public static  int DIBUTTON_BASEBALLP_THROW() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLP_THROW();
    }
    public static  int DIBUTTON_BASEBALLP_FAKE() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLP_FAKE();
    }
    public static  int DIBUTTON_BASEBALLP_MENU() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLP_MENU();
    }
    public static  int DIBUTTON_BASEBALLP_WALK() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLP_WALK();
    }
    public static  int DIBUTTON_BASEBALLP_LOOK() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLP_LOOK();
    }
    public static  int DIBUTTON_BASEBALLP_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLP_LEFT_LINK();
    }
    public static  int DIBUTTON_BASEBALLP_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLP_RIGHT_LINK();
    }
    public static  int DIBUTTON_BASEBALLP_FORWARD_LINK() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLP_FORWARD_LINK();
    }
    public static  int DIBUTTON_BASEBALLP_BACK_LINK() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLP_BACK_LINK();
    }
    public static  int DIBUTTON_BASEBALLP_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLP_DEVICE();
    }
    public static  int DIBUTTON_BASEBALLP_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLP_PAUSE();
    }
    public static  int DIVIRTUAL_SPORTS_BASEBALL_FIELD() {
        return dinput_h_constants_0.DIVIRTUAL_SPORTS_BASEBALL_FIELD();
    }
    public static  int DIAXIS_BASEBALLF_LATERAL() {
        return dinput_h_constants_0.DIAXIS_BASEBALLF_LATERAL();
    }
    public static  int DIAXIS_BASEBALLF_MOVE() {
        return dinput_h_constants_0.DIAXIS_BASEBALLF_MOVE();
    }
    public static  int DIBUTTON_BASEBALLF_NEAREST() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLF_NEAREST();
    }
    public static  int DIBUTTON_BASEBALLF_THROW1() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLF_THROW1();
    }
    public static  int DIBUTTON_BASEBALLF_THROW2() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLF_THROW2();
    }
    public static  int DIBUTTON_BASEBALLF_BURST() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLF_BURST();
    }
    public static  int DIBUTTON_BASEBALLF_JUMP() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLF_JUMP();
    }
    public static  int DIBUTTON_BASEBALLF_DIVE() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLF_DIVE();
    }
    public static  int DIBUTTON_BASEBALLF_MENU() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLF_MENU();
    }
    public static  int DIBUTTON_BASEBALLF_SHIFTIN() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLF_SHIFTIN();
    }
    public static  int DIBUTTON_BASEBALLF_SHIFTOUT() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLF_SHIFTOUT();
    }
    public static  int DIBUTTON_BASEBALLF_AIM_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLF_AIM_LEFT_LINK();
    }
    public static  int DIBUTTON_BASEBALLF_AIM_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLF_AIM_RIGHT_LINK();
    }
    public static  int DIBUTTON_BASEBALLF_FORWARD_LINK() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLF_FORWARD_LINK();
    }
    public static  int DIBUTTON_BASEBALLF_BACK_LINK() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLF_BACK_LINK();
    }
    public static  int DIBUTTON_BASEBALLF_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLF_DEVICE();
    }
    public static  int DIBUTTON_BASEBALLF_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_BASEBALLF_PAUSE();
    }
    public static  int DIVIRTUAL_SPORTS_BASKETBALL_OFFENSE() {
        return dinput_h_constants_0.DIVIRTUAL_SPORTS_BASKETBALL_OFFENSE();
    }
    public static  int DIAXIS_BBALLO_LATERAL() {
        return dinput_h_constants_0.DIAXIS_BBALLO_LATERAL();
    }
    public static  int DIAXIS_BBALLO_MOVE() {
        return dinput_h_constants_0.DIAXIS_BBALLO_MOVE();
    }
    public static  int DIBUTTON_BBALLO_SHOOT() {
        return dinput_h_constants_0.DIBUTTON_BBALLO_SHOOT();
    }
    public static  int DIBUTTON_BBALLO_DUNK() {
        return dinput_h_constants_0.DIBUTTON_BBALLO_DUNK();
    }
    public static  int DIBUTTON_BBALLO_PASS() {
        return dinput_h_constants_0.DIBUTTON_BBALLO_PASS();
    }
    public static  int DIBUTTON_BBALLO_FAKE() {
        return dinput_h_constants_0.DIBUTTON_BBALLO_FAKE();
    }
    public static  int DIBUTTON_BBALLO_SPECIAL() {
        return dinput_h_constants_0.DIBUTTON_BBALLO_SPECIAL();
    }
    public static  int DIBUTTON_BBALLO_PLAYER() {
        return dinput_h_constants_0.DIBUTTON_BBALLO_PLAYER();
    }
    public static  int DIBUTTON_BBALLO_BURST() {
        return dinput_h_constants_0.DIBUTTON_BBALLO_BURST();
    }
    public static  int DIBUTTON_BBALLO_CALL() {
        return dinput_h_constants_0.DIBUTTON_BBALLO_CALL();
    }
    public static  int DIBUTTON_BBALLO_MENU() {
        return dinput_h_constants_0.DIBUTTON_BBALLO_MENU();
    }
    public static  int DIHATSWITCH_BBALLO_GLANCE() {
        return dinput_h_constants_0.DIHATSWITCH_BBALLO_GLANCE();
    }
    public static  int DIBUTTON_BBALLO_SCREEN() {
        return dinput_h_constants_0.DIBUTTON_BBALLO_SCREEN();
    }
    public static  int DIBUTTON_BBALLO_PLAY() {
        return dinput_h_constants_0.DIBUTTON_BBALLO_PLAY();
    }
    public static  int DIBUTTON_BBALLO_JAB() {
        return dinput_h_constants_0.DIBUTTON_BBALLO_JAB();
    }
    public static  int DIBUTTON_BBALLO_POST() {
        return dinput_h_constants_0.DIBUTTON_BBALLO_POST();
    }
    public static  int DIBUTTON_BBALLO_TIMEOUT() {
        return dinput_h_constants_0.DIBUTTON_BBALLO_TIMEOUT();
    }
    public static  int DIBUTTON_BBALLO_SUBSTITUTE() {
        return dinput_h_constants_0.DIBUTTON_BBALLO_SUBSTITUTE();
    }
    public static  int DIBUTTON_BBALLO_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_BBALLO_LEFT_LINK();
    }
    public static  int DIBUTTON_BBALLO_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_BBALLO_RIGHT_LINK();
    }
    public static  int DIBUTTON_BBALLO_FORWARD_LINK() {
        return dinput_h_constants_0.DIBUTTON_BBALLO_FORWARD_LINK();
    }
    public static  int DIBUTTON_BBALLO_BACK_LINK() {
        return dinput_h_constants_0.DIBUTTON_BBALLO_BACK_LINK();
    }
    public static  int DIBUTTON_BBALLO_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_BBALLO_DEVICE();
    }
    public static  int DIBUTTON_BBALLO_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_BBALLO_PAUSE();
    }
    public static  int DIVIRTUAL_SPORTS_BASKETBALL_DEFENSE() {
        return dinput_h_constants_0.DIVIRTUAL_SPORTS_BASKETBALL_DEFENSE();
    }
    public static  int DIAXIS_BBALLD_LATERAL() {
        return dinput_h_constants_0.DIAXIS_BBALLD_LATERAL();
    }
    public static  int DIAXIS_BBALLD_MOVE() {
        return dinput_h_constants_0.DIAXIS_BBALLD_MOVE();
    }
    public static  int DIBUTTON_BBALLD_JUMP() {
        return dinput_h_constants_0.DIBUTTON_BBALLD_JUMP();
    }
    public static  int DIBUTTON_BBALLD_STEAL() {
        return dinput_h_constants_0.DIBUTTON_BBALLD_STEAL();
    }
    public static  int DIBUTTON_BBALLD_FAKE() {
        return dinput_h_constants_0.DIBUTTON_BBALLD_FAKE();
    }
    public static  int DIBUTTON_BBALLD_SPECIAL() {
        return dinput_h_constants_0.DIBUTTON_BBALLD_SPECIAL();
    }
    public static  int DIBUTTON_BBALLD_PLAYER() {
        return dinput_h_constants_0.DIBUTTON_BBALLD_PLAYER();
    }
    public static  int DIBUTTON_BBALLD_BURST() {
        return dinput_h_constants_0.DIBUTTON_BBALLD_BURST();
    }
    public static  int DIBUTTON_BBALLD_PLAY() {
        return dinput_h_constants_0.DIBUTTON_BBALLD_PLAY();
    }
    public static  int DIBUTTON_BBALLD_MENU() {
        return dinput_h_constants_0.DIBUTTON_BBALLD_MENU();
    }
    public static  int DIHATSWITCH_BBALLD_GLANCE() {
        return dinput_h_constants_0.DIHATSWITCH_BBALLD_GLANCE();
    }
    public static  int DIBUTTON_BBALLD_TIMEOUT() {
        return dinput_h_constants_0.DIBUTTON_BBALLD_TIMEOUT();
    }
    public static  int DIBUTTON_BBALLD_SUBSTITUTE() {
        return dinput_h_constants_0.DIBUTTON_BBALLD_SUBSTITUTE();
    }
    public static  int DIBUTTON_BBALLD_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_BBALLD_LEFT_LINK();
    }
    public static  int DIBUTTON_BBALLD_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_BBALLD_RIGHT_LINK();
    }
    public static  int DIBUTTON_BBALLD_FORWARD_LINK() {
        return dinput_h_constants_0.DIBUTTON_BBALLD_FORWARD_LINK();
    }
    public static  int DIBUTTON_BBALLD_BACK_LINK() {
        return dinput_h_constants_0.DIBUTTON_BBALLD_BACK_LINK();
    }
    public static  int DIBUTTON_BBALLD_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_BBALLD_DEVICE();
    }
    public static  int DIBUTTON_BBALLD_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_BBALLD_PAUSE();
    }
    public static  int DIVIRTUAL_SPORTS_FOOTBALL_FIELD() {
        return dinput_h_constants_0.DIVIRTUAL_SPORTS_FOOTBALL_FIELD();
    }
    public static  int DIBUTTON_FOOTBALLP_PLAY() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLP_PLAY();
    }
    public static  int DIBUTTON_FOOTBALLP_SELECT() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLP_SELECT();
    }
    public static  int DIBUTTON_FOOTBALLP_HELP() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLP_HELP();
    }
    public static  int DIBUTTON_FOOTBALLP_MENU() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLP_MENU();
    }
    public static  int DIBUTTON_FOOTBALLP_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLP_DEVICE();
    }
    public static  int DIBUTTON_FOOTBALLP_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLP_PAUSE();
    }
    public static  int DIVIRTUAL_SPORTS_FOOTBALL_QBCK() {
        return dinput_h_constants_0.DIVIRTUAL_SPORTS_FOOTBALL_QBCK();
    }
    public static  int DIAXIS_FOOTBALLQ_LATERAL() {
        return dinput_h_constants_0.DIAXIS_FOOTBALLQ_LATERAL();
    }
    public static  int DIAXIS_FOOTBALLQ_MOVE() {
        return dinput_h_constants_0.DIAXIS_FOOTBALLQ_MOVE();
    }
    public static  int DIBUTTON_FOOTBALLQ_SELECT() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLQ_SELECT();
    }
    public static  int DIBUTTON_FOOTBALLQ_SNAP() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLQ_SNAP();
    }
    public static  int DIBUTTON_FOOTBALLQ_JUMP() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLQ_JUMP();
    }
    public static  int DIBUTTON_FOOTBALLQ_SLIDE() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLQ_SLIDE();
    }
    public static  int DIBUTTON_FOOTBALLQ_PASS() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLQ_PASS();
    }
    public static  int DIBUTTON_FOOTBALLQ_FAKE() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLQ_FAKE();
    }
    public static  int DIBUTTON_FOOTBALLQ_MENU() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLQ_MENU();
    }
    public static  int DIBUTTON_FOOTBALLQ_FAKESNAP() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLQ_FAKESNAP();
    }
    public static  int DIBUTTON_FOOTBALLQ_MOTION() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLQ_MOTION();
    }
    public static  int DIBUTTON_FOOTBALLQ_AUDIBLE() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLQ_AUDIBLE();
    }
    public static  int DIBUTTON_FOOTBALLQ_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLQ_LEFT_LINK();
    }
    public static  int DIBUTTON_FOOTBALLQ_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLQ_RIGHT_LINK();
    }
    public static  int DIBUTTON_FOOTBALLQ_FORWARD_LINK() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLQ_FORWARD_LINK();
    }
    public static  int DIBUTTON_FOOTBALLQ_BACK_LINK() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLQ_BACK_LINK();
    }
    public static  int DIBUTTON_FOOTBALLQ_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLQ_DEVICE();
    }
    public static  int DIBUTTON_FOOTBALLQ_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLQ_PAUSE();
    }
    public static  int DIVIRTUAL_SPORTS_FOOTBALL_OFFENSE() {
        return dinput_h_constants_0.DIVIRTUAL_SPORTS_FOOTBALL_OFFENSE();
    }
    public static  int DIAXIS_FOOTBALLO_LATERAL() {
        return dinput_h_constants_0.DIAXIS_FOOTBALLO_LATERAL();
    }
    public static  int DIAXIS_FOOTBALLO_MOVE() {
        return dinput_h_constants_0.DIAXIS_FOOTBALLO_MOVE();
    }
    public static  int DIBUTTON_FOOTBALLO_JUMP() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLO_JUMP();
    }
    public static  int DIBUTTON_FOOTBALLO_LEFTARM() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLO_LEFTARM();
    }
    public static  int DIBUTTON_FOOTBALLO_RIGHTARM() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLO_RIGHTARM();
    }
    public static  int DIBUTTON_FOOTBALLO_THROW() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLO_THROW();
    }
    public static  int DIBUTTON_FOOTBALLO_SPIN() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLO_SPIN();
    }
    public static  int DIBUTTON_FOOTBALLO_MENU() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLO_MENU();
    }
    public static  int DIBUTTON_FOOTBALLO_JUKE() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLO_JUKE();
    }
    public static  int DIBUTTON_FOOTBALLO_SHOULDER() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLO_SHOULDER();
    }
    public static  int DIBUTTON_FOOTBALLO_TURBO() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLO_TURBO();
    }
    public static  int DIBUTTON_FOOTBALLO_DIVE() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLO_DIVE();
    }
    public static  int DIBUTTON_FOOTBALLO_ZOOM() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLO_ZOOM();
    }
    public static  int DIBUTTON_FOOTBALLO_SUBSTITUTE() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLO_SUBSTITUTE();
    }
    public static  int DIBUTTON_FOOTBALLO_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLO_LEFT_LINK();
    }
    public static  int DIBUTTON_FOOTBALLO_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLO_RIGHT_LINK();
    }
    public static  int DIBUTTON_FOOTBALLO_FORWARD_LINK() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLO_FORWARD_LINK();
    }
    public static  int DIBUTTON_FOOTBALLO_BACK_LINK() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLO_BACK_LINK();
    }
    public static  int DIBUTTON_FOOTBALLO_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLO_DEVICE();
    }
    public static  int DIBUTTON_FOOTBALLO_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLO_PAUSE();
    }
    public static  int DIVIRTUAL_SPORTS_FOOTBALL_DEFENSE() {
        return dinput_h_constants_0.DIVIRTUAL_SPORTS_FOOTBALL_DEFENSE();
    }
    public static  int DIAXIS_FOOTBALLD_LATERAL() {
        return dinput_h_constants_0.DIAXIS_FOOTBALLD_LATERAL();
    }
    public static  int DIAXIS_FOOTBALLD_MOVE() {
        return dinput_h_constants_0.DIAXIS_FOOTBALLD_MOVE();
    }
    public static  int DIBUTTON_FOOTBALLD_PLAY() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLD_PLAY();
    }
    public static  int DIBUTTON_FOOTBALLD_SELECT() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLD_SELECT();
    }
    public static  int DIBUTTON_FOOTBALLD_JUMP() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLD_JUMP();
    }
    public static  int DIBUTTON_FOOTBALLD_TACKLE() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLD_TACKLE();
    }
    public static  int DIBUTTON_FOOTBALLD_FAKE() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLD_FAKE();
    }
    public static  int DIBUTTON_FOOTBALLD_SUPERTACKLE() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLD_SUPERTACKLE();
    }
    public static  int DIBUTTON_FOOTBALLD_MENU() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLD_MENU();
    }
    public static  int DIBUTTON_FOOTBALLD_SPIN() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLD_SPIN();
    }
    public static  int DIBUTTON_FOOTBALLD_SWIM() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLD_SWIM();
    }
    public static  int DIBUTTON_FOOTBALLD_BULLRUSH() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLD_BULLRUSH();
    }
    public static  int DIBUTTON_FOOTBALLD_RIP() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLD_RIP();
    }
    public static  int DIBUTTON_FOOTBALLD_AUDIBLE() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLD_AUDIBLE();
    }
    public static  int DIBUTTON_FOOTBALLD_ZOOM() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLD_ZOOM();
    }
    public static  int DIBUTTON_FOOTBALLD_SUBSTITUTE() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLD_SUBSTITUTE();
    }
    public static  int DIBUTTON_FOOTBALLD_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLD_LEFT_LINK();
    }
    public static  int DIBUTTON_FOOTBALLD_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLD_RIGHT_LINK();
    }
    public static  int DIBUTTON_FOOTBALLD_FORWARD_LINK() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLD_FORWARD_LINK();
    }
    public static  int DIBUTTON_FOOTBALLD_BACK_LINK() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLD_BACK_LINK();
    }
    public static  int DIBUTTON_FOOTBALLD_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLD_DEVICE();
    }
    public static  int DIBUTTON_FOOTBALLD_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_FOOTBALLD_PAUSE();
    }
    public static  int DIVIRTUAL_SPORTS_GOLF() {
        return dinput_h_constants_0.DIVIRTUAL_SPORTS_GOLF();
    }
    public static  int DIAXIS_GOLF_LATERAL() {
        return dinput_h_constants_0.DIAXIS_GOLF_LATERAL();
    }
    public static  int DIAXIS_GOLF_MOVE() {
        return dinput_h_constants_0.DIAXIS_GOLF_MOVE();
    }
    public static  int DIBUTTON_GOLF_SWING() {
        return dinput_h_constants_0.DIBUTTON_GOLF_SWING();
    }
    public static  int DIBUTTON_GOLF_SELECT() {
        return dinput_h_constants_0.DIBUTTON_GOLF_SELECT();
    }
    public static  int DIBUTTON_GOLF_UP() {
        return dinput_h_constants_0.DIBUTTON_GOLF_UP();
    }
    public static  int DIBUTTON_GOLF_DOWN() {
        return dinput_h_constants_0.DIBUTTON_GOLF_DOWN();
    }
    public static  int DIBUTTON_GOLF_TERRAIN() {
        return dinput_h_constants_0.DIBUTTON_GOLF_TERRAIN();
    }
    public static  int DIBUTTON_GOLF_FLYBY() {
        return dinput_h_constants_0.DIBUTTON_GOLF_FLYBY();
    }
    public static  int DIBUTTON_GOLF_MENU() {
        return dinput_h_constants_0.DIBUTTON_GOLF_MENU();
    }
    public static  int DIHATSWITCH_GOLF_SCROLL() {
        return dinput_h_constants_0.DIHATSWITCH_GOLF_SCROLL();
    }
    public static  int DIBUTTON_GOLF_ZOOM() {
        return dinput_h_constants_0.DIBUTTON_GOLF_ZOOM();
    }
    public static  int DIBUTTON_GOLF_TIMEOUT() {
        return dinput_h_constants_0.DIBUTTON_GOLF_TIMEOUT();
    }
    public static  int DIBUTTON_GOLF_SUBSTITUTE() {
        return dinput_h_constants_0.DIBUTTON_GOLF_SUBSTITUTE();
    }
    public static  int DIBUTTON_GOLF_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_GOLF_LEFT_LINK();
    }
    public static  int DIBUTTON_GOLF_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_GOLF_RIGHT_LINK();
    }
    public static  int DIBUTTON_GOLF_FORWARD_LINK() {
        return dinput_h_constants_0.DIBUTTON_GOLF_FORWARD_LINK();
    }
    public static  int DIBUTTON_GOLF_BACK_LINK() {
        return dinput_h_constants_0.DIBUTTON_GOLF_BACK_LINK();
    }
    public static  int DIBUTTON_GOLF_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_GOLF_DEVICE();
    }
    public static  int DIBUTTON_GOLF_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_GOLF_PAUSE();
    }
    public static  int DIVIRTUAL_SPORTS_HOCKEY_OFFENSE() {
        return dinput_h_constants_0.DIVIRTUAL_SPORTS_HOCKEY_OFFENSE();
    }
    public static  int DIAXIS_HOCKEYO_LATERAL() {
        return dinput_h_constants_0.DIAXIS_HOCKEYO_LATERAL();
    }
    public static  int DIAXIS_HOCKEYO_MOVE() {
        return dinput_h_constants_0.DIAXIS_HOCKEYO_MOVE();
    }
    public static  int DIBUTTON_HOCKEYO_SHOOT() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYO_SHOOT();
    }
    public static  int DIBUTTON_HOCKEYO_PASS() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYO_PASS();
    }
    public static  int DIBUTTON_HOCKEYO_BURST() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYO_BURST();
    }
    public static  int DIBUTTON_HOCKEYO_SPECIAL() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYO_SPECIAL();
    }
    public static  int DIBUTTON_HOCKEYO_FAKE() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYO_FAKE();
    }
    public static  int DIBUTTON_HOCKEYO_MENU() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYO_MENU();
    }
    public static  int DIHATSWITCH_HOCKEYO_SCROLL() {
        return dinput_h_constants_0.DIHATSWITCH_HOCKEYO_SCROLL();
    }
    public static  int DIBUTTON_HOCKEYO_ZOOM() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYO_ZOOM();
    }
    public static  int DIBUTTON_HOCKEYO_STRATEGY() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYO_STRATEGY();
    }
    public static  int DIBUTTON_HOCKEYO_TIMEOUT() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYO_TIMEOUT();
    }
    public static  int DIBUTTON_HOCKEYO_SUBSTITUTE() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYO_SUBSTITUTE();
    }
    public static  int DIBUTTON_HOCKEYO_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYO_LEFT_LINK();
    }
    public static  int DIBUTTON_HOCKEYO_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYO_RIGHT_LINK();
    }
    public static  int DIBUTTON_HOCKEYO_FORWARD_LINK() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYO_FORWARD_LINK();
    }
    public static  int DIBUTTON_HOCKEYO_BACK_LINK() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYO_BACK_LINK();
    }
    public static  int DIBUTTON_HOCKEYO_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYO_DEVICE();
    }
    public static  int DIBUTTON_HOCKEYO_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYO_PAUSE();
    }
    public static  int DIVIRTUAL_SPORTS_HOCKEY_DEFENSE() {
        return dinput_h_constants_0.DIVIRTUAL_SPORTS_HOCKEY_DEFENSE();
    }
    public static  int DIAXIS_HOCKEYD_LATERAL() {
        return dinput_h_constants_0.DIAXIS_HOCKEYD_LATERAL();
    }
    public static  int DIAXIS_HOCKEYD_MOVE() {
        return dinput_h_constants_0.DIAXIS_HOCKEYD_MOVE();
    }
    public static  int DIBUTTON_HOCKEYD_PLAYER() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYD_PLAYER();
    }
    public static  int DIBUTTON_HOCKEYD_STEAL() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYD_STEAL();
    }
    public static  int DIBUTTON_HOCKEYD_BURST() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYD_BURST();
    }
    public static  int DIBUTTON_HOCKEYD_BLOCK() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYD_BLOCK();
    }
    public static  int DIBUTTON_HOCKEYD_FAKE() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYD_FAKE();
    }
    public static  int DIBUTTON_HOCKEYD_MENU() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYD_MENU();
    }
    public static  int DIHATSWITCH_HOCKEYD_SCROLL() {
        return dinput_h_constants_0.DIHATSWITCH_HOCKEYD_SCROLL();
    }
    public static  int DIBUTTON_HOCKEYD_ZOOM() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYD_ZOOM();
    }
    public static  int DIBUTTON_HOCKEYD_STRATEGY() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYD_STRATEGY();
    }
    public static  int DIBUTTON_HOCKEYD_TIMEOUT() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYD_TIMEOUT();
    }
    public static  int DIBUTTON_HOCKEYD_SUBSTITUTE() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYD_SUBSTITUTE();
    }
    public static  int DIBUTTON_HOCKEYD_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYD_LEFT_LINK();
    }
    public static  int DIBUTTON_HOCKEYD_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYD_RIGHT_LINK();
    }
    public static  int DIBUTTON_HOCKEYD_FORWARD_LINK() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYD_FORWARD_LINK();
    }
    public static  int DIBUTTON_HOCKEYD_BACK_LINK() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYD_BACK_LINK();
    }
    public static  int DIBUTTON_HOCKEYD_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYD_DEVICE();
    }
    public static  int DIBUTTON_HOCKEYD_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYD_PAUSE();
    }
    public static  int DIVIRTUAL_SPORTS_HOCKEY_GOALIE() {
        return dinput_h_constants_0.DIVIRTUAL_SPORTS_HOCKEY_GOALIE();
    }
    public static  int DIAXIS_HOCKEYG_LATERAL() {
        return dinput_h_constants_0.DIAXIS_HOCKEYG_LATERAL();
    }
    public static  int DIAXIS_HOCKEYG_MOVE() {
        return dinput_h_constants_0.DIAXIS_HOCKEYG_MOVE();
    }
    public static  int DIBUTTON_HOCKEYG_PASS() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYG_PASS();
    }
    public static  int DIBUTTON_HOCKEYG_POKE() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYG_POKE();
    }
    public static  int DIBUTTON_HOCKEYG_STEAL() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYG_STEAL();
    }
    public static  int DIBUTTON_HOCKEYG_BLOCK() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYG_BLOCK();
    }
    public static  int DIBUTTON_HOCKEYG_MENU() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYG_MENU();
    }
    public static  int DIHATSWITCH_HOCKEYG_SCROLL() {
        return dinput_h_constants_0.DIHATSWITCH_HOCKEYG_SCROLL();
    }
    public static  int DIBUTTON_HOCKEYG_ZOOM() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYG_ZOOM();
    }
    public static  int DIBUTTON_HOCKEYG_STRATEGY() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYG_STRATEGY();
    }
    public static  int DIBUTTON_HOCKEYG_TIMEOUT() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYG_TIMEOUT();
    }
    public static  int DIBUTTON_HOCKEYG_SUBSTITUTE() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYG_SUBSTITUTE();
    }
    public static  int DIBUTTON_HOCKEYG_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYG_LEFT_LINK();
    }
    public static  int DIBUTTON_HOCKEYG_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYG_RIGHT_LINK();
    }
    public static  int DIBUTTON_HOCKEYG_FORWARD_LINK() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYG_FORWARD_LINK();
    }
    public static  int DIBUTTON_HOCKEYG_BACK_LINK() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYG_BACK_LINK();
    }
    public static  int DIBUTTON_HOCKEYG_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYG_DEVICE();
    }
    public static  int DIBUTTON_HOCKEYG_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_HOCKEYG_PAUSE();
    }
    public static  int DIVIRTUAL_SPORTS_BIKING_MOUNTAIN() {
        return dinput_h_constants_0.DIVIRTUAL_SPORTS_BIKING_MOUNTAIN();
    }
    public static  int DIAXIS_BIKINGM_TURN() {
        return dinput_h_constants_0.DIAXIS_BIKINGM_TURN();
    }
    public static  int DIAXIS_BIKINGM_PEDAL() {
        return dinput_h_constants_0.DIAXIS_BIKINGM_PEDAL();
    }
    public static  int DIBUTTON_BIKINGM_JUMP() {
        return dinput_h_constants_0.DIBUTTON_BIKINGM_JUMP();
    }
    public static  int DIBUTTON_BIKINGM_CAMERA() {
        return dinput_h_constants_0.DIBUTTON_BIKINGM_CAMERA();
    }
    public static  int DIBUTTON_BIKINGM_SPECIAL1() {
        return dinput_h_constants_0.DIBUTTON_BIKINGM_SPECIAL1();
    }
    public static  int DIBUTTON_BIKINGM_SELECT() {
        return dinput_h_constants_0.DIBUTTON_BIKINGM_SELECT();
    }
    public static  int DIBUTTON_BIKINGM_SPECIAL2() {
        return dinput_h_constants_0.DIBUTTON_BIKINGM_SPECIAL2();
    }
    public static  int DIBUTTON_BIKINGM_MENU() {
        return dinput_h_constants_0.DIBUTTON_BIKINGM_MENU();
    }
    public static  int DIHATSWITCH_BIKINGM_SCROLL() {
        return dinput_h_constants_0.DIHATSWITCH_BIKINGM_SCROLL();
    }
    public static  int DIBUTTON_BIKINGM_ZOOM() {
        return dinput_h_constants_0.DIBUTTON_BIKINGM_ZOOM();
    }
    public static  int DIAXIS_BIKINGM_BRAKE() {
        return dinput_h_constants_0.DIAXIS_BIKINGM_BRAKE();
    }
    public static  int DIBUTTON_BIKINGM_LEFT_LINK() {
        return dinput_h_constants_0.DIBUTTON_BIKINGM_LEFT_LINK();
    }
    public static  int DIBUTTON_BIKINGM_RIGHT_LINK() {
        return dinput_h_constants_0.DIBUTTON_BIKINGM_RIGHT_LINK();
    }
    public static  int DIBUTTON_BIKINGM_FASTER_LINK() {
        return dinput_h_constants_0.DIBUTTON_BIKINGM_FASTER_LINK();
    }
    public static  int DIBUTTON_BIKINGM_SLOWER_LINK() {
        return dinput_h_constants_0.DIBUTTON_BIKINGM_SLOWER_LINK();
    }
    public static  int DIBUTTON_BIKINGM_BRAKE_BUTTON_LINK() {
        return dinput_h_constants_0.DIBUTTON_BIKINGM_BRAKE_BUTTON_LINK();
    }
    public static  int DIBUTTON_BIKINGM_DEVICE() {
        return dinput_h_constants_0.DIBUTTON_BIKINGM_DEVICE();
    }
    public static  int DIBUTTON_BIKINGM_PAUSE() {
        return dinput_h_constants_0.DIBUTTON_BIKINGM_PAUSE();
    }
    public static  int DIVIRTUAL_SPORTS_SKIING() {
        return dinput_h_constants_0.DIVIRTUAL_SPORTS_SKIING();
    }
    public static  int DIAXIS_SKIING_TURN() {
        return dinput_h_constants_0.DIAXIS_SKIING_TURN();
    }
    public static  int DIAXIS_SKIING_SPEED() {
        return dinput_h_constants_0.DIAXIS_SKIING_SPEED();
    }
    public static  int DIBUTTON_SKIING_JUMP() {
        return dinput_h_constants_0.DIBUTTON_SKIING_JUMP();
    }
    public static  int DIBUTTON_SKIING_CROUCH() {
        return dinput_h_constants_0.DIBUTTON_SKIING_CROUCH();
    }
    public static  int DIBUTTON_SKIING_CAMERA() {
        return dinput_h_constants_0.DIBUTTON_SKIING_CAMERA();
    }
    public static class DICONSTANTFORCE {

        /* package-private */ DICONSTANTFORCE() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_1.DICONSTANTFORCE$struct$LAYOUT();
        }
        public static VarHandle lMagnitude$VH() {
            return dinput_h_constants_1.DICONSTANTFORCE$lMagnitude$VH();
        }
        public static  int lMagnitude$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DICONSTANTFORCE$lMagnitude$VH().get(seg);
        }
        public static  int lMagnitude$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DICONSTANTFORCE$lMagnitude$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lMagnitude$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DICONSTANTFORCE$lMagnitude$VH().set(seg, x);
        }
        public static void lMagnitude$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DICONSTANTFORCE$lMagnitude$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIRAMPFORCE {

        /* package-private */ DIRAMPFORCE() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_1.DIRAMPFORCE$struct$LAYOUT();
        }
        public static VarHandle lStart$VH() {
            return dinput_h_constants_1.DIRAMPFORCE$lStart$VH();
        }
        public static  int lStart$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIRAMPFORCE$lStart$VH().get(seg);
        }
        public static  int lStart$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIRAMPFORCE$lStart$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lStart$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIRAMPFORCE$lStart$VH().set(seg, x);
        }
        public static void lStart$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIRAMPFORCE$lStart$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lEnd$VH() {
            return dinput_h_constants_1.DIRAMPFORCE$lEnd$VH();
        }
        public static  int lEnd$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIRAMPFORCE$lEnd$VH().get(seg);
        }
        public static  int lEnd$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIRAMPFORCE$lEnd$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lEnd$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIRAMPFORCE$lEnd$VH().set(seg, x);
        }
        public static void lEnd$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIRAMPFORCE$lEnd$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIPERIODIC {

        /* package-private */ DIPERIODIC() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_1.DIPERIODIC$struct$LAYOUT();
        }
        public static VarHandle dwMagnitude$VH() {
            return dinput_h_constants_1.DIPERIODIC$dwMagnitude$VH();
        }
        public static  int dwMagnitude$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIPERIODIC$dwMagnitude$VH().get(seg);
        }
        public static  int dwMagnitude$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIPERIODIC$dwMagnitude$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwMagnitude$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIPERIODIC$dwMagnitude$VH().set(seg, x);
        }
        public static void dwMagnitude$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIPERIODIC$dwMagnitude$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lOffset$VH() {
            return dinput_h_constants_1.DIPERIODIC$lOffset$VH();
        }
        public static  int lOffset$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIPERIODIC$lOffset$VH().get(seg);
        }
        public static  int lOffset$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIPERIODIC$lOffset$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lOffset$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIPERIODIC$lOffset$VH().set(seg, x);
        }
        public static void lOffset$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIPERIODIC$lOffset$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwPhase$VH() {
            return dinput_h_constants_1.DIPERIODIC$dwPhase$VH();
        }
        public static  int dwPhase$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIPERIODIC$dwPhase$VH().get(seg);
        }
        public static  int dwPhase$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIPERIODIC$dwPhase$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwPhase$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIPERIODIC$dwPhase$VH().set(seg, x);
        }
        public static void dwPhase$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIPERIODIC$dwPhase$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwPeriod$VH() {
            return dinput_h_constants_1.DIPERIODIC$dwPeriod$VH();
        }
        public static  int dwPeriod$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIPERIODIC$dwPeriod$VH().get(seg);
        }
        public static  int dwPeriod$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIPERIODIC$dwPeriod$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwPeriod$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIPERIODIC$dwPeriod$VH().set(seg, x);
        }
        public static void dwPeriod$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIPERIODIC$dwPeriod$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DICONDITION {

        /* package-private */ DICONDITION() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_1.DICONDITION$struct$LAYOUT();
        }
        public static VarHandle lOffset$VH() {
            return dinput_h_constants_1.DICONDITION$lOffset$VH();
        }
        public static  int lOffset$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DICONDITION$lOffset$VH().get(seg);
        }
        public static  int lOffset$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DICONDITION$lOffset$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lOffset$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DICONDITION$lOffset$VH().set(seg, x);
        }
        public static void lOffset$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DICONDITION$lOffset$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lPositiveCoefficient$VH() {
            return dinput_h_constants_1.DICONDITION$lPositiveCoefficient$VH();
        }
        public static  int lPositiveCoefficient$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DICONDITION$lPositiveCoefficient$VH().get(seg);
        }
        public static  int lPositiveCoefficient$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DICONDITION$lPositiveCoefficient$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lPositiveCoefficient$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DICONDITION$lPositiveCoefficient$VH().set(seg, x);
        }
        public static void lPositiveCoefficient$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DICONDITION$lPositiveCoefficient$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lNegativeCoefficient$VH() {
            return dinput_h_constants_1.DICONDITION$lNegativeCoefficient$VH();
        }
        public static  int lNegativeCoefficient$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DICONDITION$lNegativeCoefficient$VH().get(seg);
        }
        public static  int lNegativeCoefficient$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DICONDITION$lNegativeCoefficient$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lNegativeCoefficient$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DICONDITION$lNegativeCoefficient$VH().set(seg, x);
        }
        public static void lNegativeCoefficient$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DICONDITION$lNegativeCoefficient$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwPositiveSaturation$VH() {
            return dinput_h_constants_1.DICONDITION$dwPositiveSaturation$VH();
        }
        public static  int dwPositiveSaturation$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DICONDITION$dwPositiveSaturation$VH().get(seg);
        }
        public static  int dwPositiveSaturation$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DICONDITION$dwPositiveSaturation$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwPositiveSaturation$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DICONDITION$dwPositiveSaturation$VH().set(seg, x);
        }
        public static void dwPositiveSaturation$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DICONDITION$dwPositiveSaturation$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwNegativeSaturation$VH() {
            return dinput_h_constants_1.DICONDITION$dwNegativeSaturation$VH();
        }
        public static  int dwNegativeSaturation$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DICONDITION$dwNegativeSaturation$VH().get(seg);
        }
        public static  int dwNegativeSaturation$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DICONDITION$dwNegativeSaturation$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwNegativeSaturation$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DICONDITION$dwNegativeSaturation$VH().set(seg, x);
        }
        public static void dwNegativeSaturation$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DICONDITION$dwNegativeSaturation$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lDeadBand$VH() {
            return dinput_h_constants_1.DICONDITION$lDeadBand$VH();
        }
        public static  int lDeadBand$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DICONDITION$lDeadBand$VH().get(seg);
        }
        public static  int lDeadBand$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DICONDITION$lDeadBand$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lDeadBand$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DICONDITION$lDeadBand$VH().set(seg, x);
        }
        public static void lDeadBand$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DICONDITION$lDeadBand$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DICUSTOMFORCE {

        /* package-private */ DICUSTOMFORCE() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_1.DICUSTOMFORCE$struct$LAYOUT();
        }
        public static VarHandle cChannels$VH() {
            return dinput_h_constants_1.DICUSTOMFORCE$cChannels$VH();
        }
        public static  int cChannels$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DICUSTOMFORCE$cChannels$VH().get(seg);
        }
        public static  int cChannels$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DICUSTOMFORCE$cChannels$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void cChannels$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DICUSTOMFORCE$cChannels$VH().set(seg, x);
        }
        public static void cChannels$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DICUSTOMFORCE$cChannels$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwSamplePeriod$VH() {
            return dinput_h_constants_1.DICUSTOMFORCE$dwSamplePeriod$VH();
        }
        public static  int dwSamplePeriod$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DICUSTOMFORCE$dwSamplePeriod$VH().get(seg);
        }
        public static  int dwSamplePeriod$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DICUSTOMFORCE$dwSamplePeriod$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSamplePeriod$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DICUSTOMFORCE$dwSamplePeriod$VH().set(seg, x);
        }
        public static void dwSamplePeriod$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DICUSTOMFORCE$dwSamplePeriod$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle cSamples$VH() {
            return dinput_h_constants_1.DICUSTOMFORCE$cSamples$VH();
        }
        public static  int cSamples$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DICUSTOMFORCE$cSamples$VH().get(seg);
        }
        public static  int cSamples$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DICUSTOMFORCE$cSamples$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void cSamples$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DICUSTOMFORCE$cSamples$VH().set(seg, x);
        }
        public static void cSamples$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DICUSTOMFORCE$cSamples$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle rglForceData$VH() {
            return dinput_h_constants_1.DICUSTOMFORCE$rglForceData$VH();
        }
        public static  MemoryAddress rglForceData$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.DICUSTOMFORCE$rglForceData$VH().get(seg);
        }
        public static  MemoryAddress rglForceData$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.DICUSTOMFORCE$rglForceData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void rglForceData$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.DICUSTOMFORCE$rglForceData$VH().set(seg, x);
        }
        public static void rglForceData$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.DICUSTOMFORCE$rglForceData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIENVELOPE {

        /* package-private */ DIENVELOPE() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_1.DIENVELOPE$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_1.DIENVELOPE$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIENVELOPE$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIENVELOPE$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIENVELOPE$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIENVELOPE$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwAttackLevel$VH() {
            return dinput_h_constants_1.DIENVELOPE$dwAttackLevel$VH();
        }
        public static  int dwAttackLevel$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIENVELOPE$dwAttackLevel$VH().get(seg);
        }
        public static  int dwAttackLevel$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIENVELOPE$dwAttackLevel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwAttackLevel$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIENVELOPE$dwAttackLevel$VH().set(seg, x);
        }
        public static void dwAttackLevel$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIENVELOPE$dwAttackLevel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwAttackTime$VH() {
            return dinput_h_constants_1.DIENVELOPE$dwAttackTime$VH();
        }
        public static  int dwAttackTime$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIENVELOPE$dwAttackTime$VH().get(seg);
        }
        public static  int dwAttackTime$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIENVELOPE$dwAttackTime$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwAttackTime$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIENVELOPE$dwAttackTime$VH().set(seg, x);
        }
        public static void dwAttackTime$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIENVELOPE$dwAttackTime$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwFadeLevel$VH() {
            return dinput_h_constants_1.DIENVELOPE$dwFadeLevel$VH();
        }
        public static  int dwFadeLevel$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIENVELOPE$dwFadeLevel$VH().get(seg);
        }
        public static  int dwFadeLevel$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIENVELOPE$dwFadeLevel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwFadeLevel$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIENVELOPE$dwFadeLevel$VH().set(seg, x);
        }
        public static void dwFadeLevel$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIENVELOPE$dwFadeLevel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwFadeTime$VH() {
            return dinput_h_constants_1.DIENVELOPE$dwFadeTime$VH();
        }
        public static  int dwFadeTime$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIENVELOPE$dwFadeTime$VH().get(seg);
        }
        public static  int dwFadeTime$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIENVELOPE$dwFadeTime$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwFadeTime$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIENVELOPE$dwFadeTime$VH().set(seg, x);
        }
        public static void dwFadeTime$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIENVELOPE$dwFadeTime$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIEFFECT_DX5 {

        /* package-private */ DIEFFECT_DX5() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_1.DIEFFECT_DX5$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_1.DIEFFECT_DX5$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIEFFECT_DX5$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIEFFECT_DX5$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIEFFECT_DX5$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIEFFECT_DX5$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwFlags$VH() {
            return dinput_h_constants_1.DIEFFECT_DX5$dwFlags$VH();
        }
        public static  int dwFlags$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIEFFECT_DX5$dwFlags$VH().get(seg);
        }
        public static  int dwFlags$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIEFFECT_DX5$dwFlags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwFlags$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIEFFECT_DX5$dwFlags$VH().set(seg, x);
        }
        public static void dwFlags$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIEFFECT_DX5$dwFlags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwDuration$VH() {
            return dinput_h_constants_1.DIEFFECT_DX5$dwDuration$VH();
        }
        public static  int dwDuration$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIEFFECT_DX5$dwDuration$VH().get(seg);
        }
        public static  int dwDuration$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIEFFECT_DX5$dwDuration$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwDuration$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIEFFECT_DX5$dwDuration$VH().set(seg, x);
        }
        public static void dwDuration$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIEFFECT_DX5$dwDuration$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwSamplePeriod$VH() {
            return dinput_h_constants_1.DIEFFECT_DX5$dwSamplePeriod$VH();
        }
        public static  int dwSamplePeriod$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIEFFECT_DX5$dwSamplePeriod$VH().get(seg);
        }
        public static  int dwSamplePeriod$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIEFFECT_DX5$dwSamplePeriod$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSamplePeriod$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIEFFECT_DX5$dwSamplePeriod$VH().set(seg, x);
        }
        public static void dwSamplePeriod$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIEFFECT_DX5$dwSamplePeriod$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwGain$VH() {
            return dinput_h_constants_1.DIEFFECT_DX5$dwGain$VH();
        }
        public static  int dwGain$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIEFFECT_DX5$dwGain$VH().get(seg);
        }
        public static  int dwGain$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIEFFECT_DX5$dwGain$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwGain$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIEFFECT_DX5$dwGain$VH().set(seg, x);
        }
        public static void dwGain$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIEFFECT_DX5$dwGain$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwTriggerButton$VH() {
            return dinput_h_constants_1.DIEFFECT_DX5$dwTriggerButton$VH();
        }
        public static  int dwTriggerButton$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIEFFECT_DX5$dwTriggerButton$VH().get(seg);
        }
        public static  int dwTriggerButton$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIEFFECT_DX5$dwTriggerButton$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwTriggerButton$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIEFFECT_DX5$dwTriggerButton$VH().set(seg, x);
        }
        public static void dwTriggerButton$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIEFFECT_DX5$dwTriggerButton$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwTriggerRepeatInterval$VH() {
            return dinput_h_constants_1.DIEFFECT_DX5$dwTriggerRepeatInterval$VH();
        }
        public static  int dwTriggerRepeatInterval$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIEFFECT_DX5$dwTriggerRepeatInterval$VH().get(seg);
        }
        public static  int dwTriggerRepeatInterval$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIEFFECT_DX5$dwTriggerRepeatInterval$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwTriggerRepeatInterval$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIEFFECT_DX5$dwTriggerRepeatInterval$VH().set(seg, x);
        }
        public static void dwTriggerRepeatInterval$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIEFFECT_DX5$dwTriggerRepeatInterval$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle cAxes$VH() {
            return dinput_h_constants_1.DIEFFECT_DX5$cAxes$VH();
        }
        public static  int cAxes$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIEFFECT_DX5$cAxes$VH().get(seg);
        }
        public static  int cAxes$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIEFFECT_DX5$cAxes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void cAxes$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIEFFECT_DX5$cAxes$VH().set(seg, x);
        }
        public static void cAxes$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIEFFECT_DX5$cAxes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle rgdwAxes$VH() {
            return dinput_h_constants_1.DIEFFECT_DX5$rgdwAxes$VH();
        }
        public static  MemoryAddress rgdwAxes$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.DIEFFECT_DX5$rgdwAxes$VH().get(seg);
        }
        public static  MemoryAddress rgdwAxes$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.DIEFFECT_DX5$rgdwAxes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void rgdwAxes$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.DIEFFECT_DX5$rgdwAxes$VH().set(seg, x);
        }
        public static void rgdwAxes$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.DIEFFECT_DX5$rgdwAxes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle rglDirection$VH() {
            return dinput_h_constants_1.DIEFFECT_DX5$rglDirection$VH();
        }
        public static  MemoryAddress rglDirection$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.DIEFFECT_DX5$rglDirection$VH().get(seg);
        }
        public static  MemoryAddress rglDirection$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.DIEFFECT_DX5$rglDirection$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void rglDirection$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.DIEFFECT_DX5$rglDirection$VH().set(seg, x);
        }
        public static void rglDirection$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.DIEFFECT_DX5$rglDirection$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lpEnvelope$VH() {
            return dinput_h_constants_1.DIEFFECT_DX5$lpEnvelope$VH();
        }
        public static  MemoryAddress lpEnvelope$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.DIEFFECT_DX5$lpEnvelope$VH().get(seg);
        }
        public static  MemoryAddress lpEnvelope$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.DIEFFECT_DX5$lpEnvelope$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpEnvelope$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.DIEFFECT_DX5$lpEnvelope$VH().set(seg, x);
        }
        public static void lpEnvelope$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.DIEFFECT_DX5$lpEnvelope$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle cbTypeSpecificParams$VH() {
            return dinput_h_constants_1.DIEFFECT_DX5$cbTypeSpecificParams$VH();
        }
        public static  int cbTypeSpecificParams$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIEFFECT_DX5$cbTypeSpecificParams$VH().get(seg);
        }
        public static  int cbTypeSpecificParams$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIEFFECT_DX5$cbTypeSpecificParams$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void cbTypeSpecificParams$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIEFFECT_DX5$cbTypeSpecificParams$VH().set(seg, x);
        }
        public static void cbTypeSpecificParams$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIEFFECT_DX5$cbTypeSpecificParams$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lpvTypeSpecificParams$VH() {
            return dinput_h_constants_1.DIEFFECT_DX5$lpvTypeSpecificParams$VH();
        }
        public static  MemoryAddress lpvTypeSpecificParams$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.DIEFFECT_DX5$lpvTypeSpecificParams$VH().get(seg);
        }
        public static  MemoryAddress lpvTypeSpecificParams$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.DIEFFECT_DX5$lpvTypeSpecificParams$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpvTypeSpecificParams$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.DIEFFECT_DX5$lpvTypeSpecificParams$VH().set(seg, x);
        }
        public static void lpvTypeSpecificParams$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.DIEFFECT_DX5$lpvTypeSpecificParams$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIEFFECT {

        /* package-private */ DIEFFECT() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_1.DIEFFECT$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_1.DIEFFECT$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIEFFECT$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIEFFECT$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIEFFECT$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIEFFECT$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwFlags$VH() {
            return dinput_h_constants_1.DIEFFECT$dwFlags$VH();
        }
        public static  int dwFlags$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIEFFECT$dwFlags$VH().get(seg);
        }
        public static  int dwFlags$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIEFFECT$dwFlags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwFlags$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIEFFECT$dwFlags$VH().set(seg, x);
        }
        public static void dwFlags$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIEFFECT$dwFlags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwDuration$VH() {
            return dinput_h_constants_1.DIEFFECT$dwDuration$VH();
        }
        public static  int dwDuration$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIEFFECT$dwDuration$VH().get(seg);
        }
        public static  int dwDuration$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIEFFECT$dwDuration$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwDuration$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIEFFECT$dwDuration$VH().set(seg, x);
        }
        public static void dwDuration$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIEFFECT$dwDuration$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwSamplePeriod$VH() {
            return dinput_h_constants_1.DIEFFECT$dwSamplePeriod$VH();
        }
        public static  int dwSamplePeriod$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIEFFECT$dwSamplePeriod$VH().get(seg);
        }
        public static  int dwSamplePeriod$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIEFFECT$dwSamplePeriod$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSamplePeriod$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIEFFECT$dwSamplePeriod$VH().set(seg, x);
        }
        public static void dwSamplePeriod$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIEFFECT$dwSamplePeriod$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwGain$VH() {
            return dinput_h_constants_1.DIEFFECT$dwGain$VH();
        }
        public static  int dwGain$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIEFFECT$dwGain$VH().get(seg);
        }
        public static  int dwGain$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIEFFECT$dwGain$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwGain$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIEFFECT$dwGain$VH().set(seg, x);
        }
        public static void dwGain$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIEFFECT$dwGain$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwTriggerButton$VH() {
            return dinput_h_constants_1.DIEFFECT$dwTriggerButton$VH();
        }
        public static  int dwTriggerButton$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIEFFECT$dwTriggerButton$VH().get(seg);
        }
        public static  int dwTriggerButton$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIEFFECT$dwTriggerButton$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwTriggerButton$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIEFFECT$dwTriggerButton$VH().set(seg, x);
        }
        public static void dwTriggerButton$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIEFFECT$dwTriggerButton$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwTriggerRepeatInterval$VH() {
            return dinput_h_constants_1.DIEFFECT$dwTriggerRepeatInterval$VH();
        }
        public static  int dwTriggerRepeatInterval$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIEFFECT$dwTriggerRepeatInterval$VH().get(seg);
        }
        public static  int dwTriggerRepeatInterval$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIEFFECT$dwTriggerRepeatInterval$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwTriggerRepeatInterval$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIEFFECT$dwTriggerRepeatInterval$VH().set(seg, x);
        }
        public static void dwTriggerRepeatInterval$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIEFFECT$dwTriggerRepeatInterval$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle cAxes$VH() {
            return dinput_h_constants_1.DIEFFECT$cAxes$VH();
        }
        public static  int cAxes$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIEFFECT$cAxes$VH().get(seg);
        }
        public static  int cAxes$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIEFFECT$cAxes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void cAxes$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIEFFECT$cAxes$VH().set(seg, x);
        }
        public static void cAxes$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIEFFECT$cAxes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle rgdwAxes$VH() {
            return dinput_h_constants_1.DIEFFECT$rgdwAxes$VH();
        }
        public static  MemoryAddress rgdwAxes$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.DIEFFECT$rgdwAxes$VH().get(seg);
        }
        public static  MemoryAddress rgdwAxes$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.DIEFFECT$rgdwAxes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void rgdwAxes$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.DIEFFECT$rgdwAxes$VH().set(seg, x);
        }
        public static void rgdwAxes$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.DIEFFECT$rgdwAxes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle rglDirection$VH() {
            return dinput_h_constants_1.DIEFFECT$rglDirection$VH();
        }
        public static  MemoryAddress rglDirection$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.DIEFFECT$rglDirection$VH().get(seg);
        }
        public static  MemoryAddress rglDirection$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.DIEFFECT$rglDirection$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void rglDirection$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.DIEFFECT$rglDirection$VH().set(seg, x);
        }
        public static void rglDirection$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.DIEFFECT$rglDirection$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lpEnvelope$VH() {
            return dinput_h_constants_1.DIEFFECT$lpEnvelope$VH();
        }
        public static  MemoryAddress lpEnvelope$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.DIEFFECT$lpEnvelope$VH().get(seg);
        }
        public static  MemoryAddress lpEnvelope$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.DIEFFECT$lpEnvelope$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpEnvelope$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.DIEFFECT$lpEnvelope$VH().set(seg, x);
        }
        public static void lpEnvelope$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.DIEFFECT$lpEnvelope$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle cbTypeSpecificParams$VH() {
            return dinput_h_constants_1.DIEFFECT$cbTypeSpecificParams$VH();
        }
        public static  int cbTypeSpecificParams$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIEFFECT$cbTypeSpecificParams$VH().get(seg);
        }
        public static  int cbTypeSpecificParams$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIEFFECT$cbTypeSpecificParams$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void cbTypeSpecificParams$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIEFFECT$cbTypeSpecificParams$VH().set(seg, x);
        }
        public static void cbTypeSpecificParams$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIEFFECT$cbTypeSpecificParams$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lpvTypeSpecificParams$VH() {
            return dinput_h_constants_1.DIEFFECT$lpvTypeSpecificParams$VH();
        }
        public static  MemoryAddress lpvTypeSpecificParams$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.DIEFFECT$lpvTypeSpecificParams$VH().get(seg);
        }
        public static  MemoryAddress lpvTypeSpecificParams$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.DIEFFECT$lpvTypeSpecificParams$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpvTypeSpecificParams$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.DIEFFECT$lpvTypeSpecificParams$VH().set(seg, x);
        }
        public static void lpvTypeSpecificParams$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.DIEFFECT$lpvTypeSpecificParams$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwStartDelay$VH() {
            return dinput_h_constants_1.DIEFFECT$dwStartDelay$VH();
        }
        public static  int dwStartDelay$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIEFFECT$dwStartDelay$VH().get(seg);
        }
        public static  int dwStartDelay$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIEFFECT$dwStartDelay$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwStartDelay$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIEFFECT$dwStartDelay$VH().set(seg, x);
        }
        public static void dwStartDelay$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIEFFECT$dwStartDelay$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIEFFECT_DX6 extends DIEFFECT {

        /* package-private */ DIEFFECT_DX6() {}
    }

    public static class DIFILEEFFECT {

        /* package-private */ DIFILEEFFECT() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_1.DIFILEEFFECT$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_1.DIFILEEFFECT$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIFILEEFFECT$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIFILEEFFECT$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIFILEEFFECT$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIFILEEFFECT$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment GuidEffect$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(4, 16));
        }
        public static VarHandle lpDiEffect$VH() {
            return dinput_h_constants_1.DIFILEEFFECT$lpDiEffect$VH();
        }
        public static  MemoryAddress lpDiEffect$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.DIFILEEFFECT$lpDiEffect$VH().get(seg);
        }
        public static  MemoryAddress lpDiEffect$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.DIFILEEFFECT$lpDiEffect$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpDiEffect$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.DIFILEEFFECT$lpDiEffect$VH().set(seg, x);
        }
        public static void lpDiEffect$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.DIFILEEFFECT$lpDiEffect$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment szFriendlyName$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(32, 260));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static interface LPDIENUMEFFECTSINFILECALLBACK {

        int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
        public static  MemorySegment allocate(LPDIENUMEFFECTSINFILECALLBACK fi) {
            return RuntimeHelper.upcallStub(LPDIENUMEFFECTSINFILECALLBACK.class, fi, dinput_h_constants_1.LPDIENUMEFFECTSINFILECALLBACK$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
        }
        public static  MemorySegment allocate(LPDIENUMEFFECTSINFILECALLBACK fi, NativeScope scope) {
            return allocate(fi).handoff(scope);
        }
    }

    public static class DIEFFESCAPE {

        /* package-private */ DIEFFESCAPE() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_1.DIEFFESCAPE$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_1.DIEFFESCAPE$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIEFFESCAPE$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIEFFESCAPE$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIEFFESCAPE$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIEFFESCAPE$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwCommand$VH() {
            return dinput_h_constants_1.DIEFFESCAPE$dwCommand$VH();
        }
        public static  int dwCommand$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIEFFESCAPE$dwCommand$VH().get(seg);
        }
        public static  int dwCommand$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIEFFESCAPE$dwCommand$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwCommand$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIEFFESCAPE$dwCommand$VH().set(seg, x);
        }
        public static void dwCommand$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIEFFESCAPE$dwCommand$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lpvInBuffer$VH() {
            return dinput_h_constants_1.DIEFFESCAPE$lpvInBuffer$VH();
        }
        public static  MemoryAddress lpvInBuffer$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.DIEFFESCAPE$lpvInBuffer$VH().get(seg);
        }
        public static  MemoryAddress lpvInBuffer$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.DIEFFESCAPE$lpvInBuffer$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpvInBuffer$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.DIEFFESCAPE$lpvInBuffer$VH().set(seg, x);
        }
        public static void lpvInBuffer$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.DIEFFESCAPE$lpvInBuffer$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle cbInBuffer$VH() {
            return dinput_h_constants_1.DIEFFESCAPE$cbInBuffer$VH();
        }
        public static  int cbInBuffer$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIEFFESCAPE$cbInBuffer$VH().get(seg);
        }
        public static  int cbInBuffer$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIEFFESCAPE$cbInBuffer$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void cbInBuffer$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIEFFESCAPE$cbInBuffer$VH().set(seg, x);
        }
        public static void cbInBuffer$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIEFFESCAPE$cbInBuffer$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lpvOutBuffer$VH() {
            return dinput_h_constants_1.DIEFFESCAPE$lpvOutBuffer$VH();
        }
        public static  MemoryAddress lpvOutBuffer$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.DIEFFESCAPE$lpvOutBuffer$VH().get(seg);
        }
        public static  MemoryAddress lpvOutBuffer$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.DIEFFESCAPE$lpvOutBuffer$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpvOutBuffer$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.DIEFFESCAPE$lpvOutBuffer$VH().set(seg, x);
        }
        public static void lpvOutBuffer$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.DIEFFESCAPE$lpvOutBuffer$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle cbOutBuffer$VH() {
            return dinput_h_constants_1.DIEFFESCAPE$cbOutBuffer$VH();
        }
        public static  int cbOutBuffer$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIEFFESCAPE$cbOutBuffer$VH().get(seg);
        }
        public static  int cbOutBuffer$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIEFFESCAPE$cbOutBuffer$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void cbOutBuffer$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIEFFESCAPE$cbOutBuffer$VH().set(seg, x);
        }
        public static void cbOutBuffer$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIEFFESCAPE$cbOutBuffer$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInputEffect {

        /* package-private */ IDirectInputEffect() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_1.IDirectInputEffect$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dinput_h_constants_1.IDirectInputEffect$lpVtbl$VH();
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffect$lpVtbl$VH().get(seg);
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffect$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffect$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffect$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInputEffectVtbl {

        /* package-private */ IDirectInputEffectVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_1.IDirectInputEffectVtbl$struct$LAYOUT();
        }
        public static interface QueryInterface {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(QueryInterface fi) {
                return RuntimeHelper.upcallStub(QueryInterface.class, fi, dinput_h_constants_1.QueryInterface$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(QueryInterface fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle QueryInterface$VH() {
            return dinput_h_constants_1.IDirectInputEffectVtbl$QueryInterface$VH();
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$QueryInterface$VH().get(seg);
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface AddRef {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(AddRef fi) {
                return RuntimeHelper.upcallStub(AddRef.class, fi, dinput_h_constants_1.AddRef$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(AddRef fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle AddRef$VH() {
            return dinput_h_constants_1.IDirectInputEffectVtbl$AddRef$VH();
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$AddRef$VH().get(seg);
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Release {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Release fi) {
                return RuntimeHelper.upcallStub(Release.class, fi, dinput_h_constants_1.Release$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Release fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Release$VH() {
            return dinput_h_constants_1.IDirectInputEffectVtbl$Release$VH();
        }
        public static  MemoryAddress Release$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$Release$VH().get(seg);
        }
        public static  MemoryAddress Release$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Initialize {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2, jdk.incubator.foreign.MemoryAddress x3);
            public static  MemorySegment allocate(Initialize fi) {
                return RuntimeHelper.upcallStub(Initialize.class, fi, dinput_h_constants_1.Initialize$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Initialize fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Initialize$VH() {
            return dinput_h_constants_1.IDirectInputEffectVtbl$Initialize$VH();
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$Initialize$VH().get(seg);
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$Initialize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Initialize$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$Initialize$VH().set(seg, x);
        }
        public static void Initialize$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$Initialize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetEffectGuid {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetEffectGuid fi) {
                return RuntimeHelper.upcallStub(GetEffectGuid.class, fi, dinput_h_constants_1.GetEffectGuid$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetEffectGuid fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetEffectGuid$VH() {
            return dinput_h_constants_1.IDirectInputEffectVtbl$GetEffectGuid$VH();
        }
        public static  MemoryAddress GetEffectGuid$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$GetEffectGuid$VH().get(seg);
        }
        public static  MemoryAddress GetEffectGuid$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$GetEffectGuid$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetEffectGuid$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$GetEffectGuid$VH().set(seg, x);
        }
        public static void GetEffectGuid$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$GetEffectGuid$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetParameters {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(GetParameters fi) {
                return RuntimeHelper.upcallStub(GetParameters.class, fi, dinput_h_constants_1.GetParameters$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(GetParameters fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetParameters$VH() {
            return dinput_h_constants_1.IDirectInputEffectVtbl$GetParameters$VH();
        }
        public static  MemoryAddress GetParameters$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$GetParameters$VH().get(seg);
        }
        public static  MemoryAddress GetParameters$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$GetParameters$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetParameters$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$GetParameters$VH().set(seg, x);
        }
        public static void GetParameters$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$GetParameters$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetParameters {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(SetParameters fi) {
                return RuntimeHelper.upcallStub(SetParameters.class, fi, dinput_h_constants_1.SetParameters$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(SetParameters fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetParameters$VH() {
            return dinput_h_constants_1.IDirectInputEffectVtbl$SetParameters$VH();
        }
        public static  MemoryAddress SetParameters$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$SetParameters$VH().get(seg);
        }
        public static  MemoryAddress SetParameters$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$SetParameters$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetParameters$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$SetParameters$VH().set(seg, x);
        }
        public static void SetParameters$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$SetParameters$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Start {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, int x2);
            public static  MemorySegment allocate(Start fi) {
                return RuntimeHelper.upcallStub(Start.class, fi, dinput_h_constants_1.Start$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;II)I");
            }
            public static  MemorySegment allocate(Start fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Start$VH() {
            return dinput_h_constants_1.IDirectInputEffectVtbl$Start$VH();
        }
        public static  MemoryAddress Start$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$Start$VH().get(seg);
        }
        public static  MemoryAddress Start$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$Start$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Start$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$Start$VH().set(seg, x);
        }
        public static void Start$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$Start$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Stop {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Stop fi) {
                return RuntimeHelper.upcallStub(Stop.class, fi, dinput_h_constants_1.Stop$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Stop fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Stop$VH() {
            return dinput_h_constants_1.IDirectInputEffectVtbl$Stop$VH();
        }
        public static  MemoryAddress Stop$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$Stop$VH().get(seg);
        }
        public static  MemoryAddress Stop$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$Stop$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Stop$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$Stop$VH().set(seg, x);
        }
        public static void Stop$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$Stop$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetEffectStatus {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetEffectStatus fi) {
                return RuntimeHelper.upcallStub(GetEffectStatus.class, fi, dinput_h_constants_1.GetEffectStatus$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetEffectStatus fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetEffectStatus$VH() {
            return dinput_h_constants_1.IDirectInputEffectVtbl$GetEffectStatus$VH();
        }
        public static  MemoryAddress GetEffectStatus$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$GetEffectStatus$VH().get(seg);
        }
        public static  MemoryAddress GetEffectStatus$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$GetEffectStatus$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetEffectStatus$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$GetEffectStatus$VH().set(seg, x);
        }
        public static void GetEffectStatus$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$GetEffectStatus$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Download {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Download fi) {
                return RuntimeHelper.upcallStub(Download.class, fi, dinput_h_constants_1.Download$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Download fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Download$VH() {
            return dinput_h_constants_1.IDirectInputEffectVtbl$Download$VH();
        }
        public static  MemoryAddress Download$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$Download$VH().get(seg);
        }
        public static  MemoryAddress Download$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$Download$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Download$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$Download$VH().set(seg, x);
        }
        public static void Download$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$Download$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Unload {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Unload fi) {
                return RuntimeHelper.upcallStub(Unload.class, fi, dinput_h_constants_1.Unload$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Unload fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Unload$VH() {
            return dinput_h_constants_1.IDirectInputEffectVtbl$Unload$VH();
        }
        public static  MemoryAddress Unload$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$Unload$VH().get(seg);
        }
        public static  MemoryAddress Unload$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$Unload$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Unload$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$Unload$VH().set(seg, x);
        }
        public static void Unload$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$Unload$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Escape {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(Escape fi) {
                return RuntimeHelper.upcallStub(Escape.class, fi, dinput_h_constants_1.Escape$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Escape fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Escape$VH() {
            return dinput_h_constants_1.IDirectInputEffectVtbl$Escape$VH();
        }
        public static  MemoryAddress Escape$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$Escape$VH().get(seg);
        }
        public static  MemoryAddress Escape$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1.IDirectInputEffectVtbl$Escape$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Escape$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$Escape$VH().set(seg, x);
        }
        public static void Escape$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1.IDirectInputEffectVtbl$Escape$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIDEVCAPS_DX3 {

        /* package-private */ DIDEVCAPS_DX3() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_1.DIDEVCAPS_DX3$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_1.DIDEVCAPS_DX3$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIDEVCAPS_DX3$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIDEVCAPS_DX3$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIDEVCAPS_DX3$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIDEVCAPS_DX3$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwFlags$VH() {
            return dinput_h_constants_1.DIDEVCAPS_DX3$dwFlags$VH();
        }
        public static  int dwFlags$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIDEVCAPS_DX3$dwFlags$VH().get(seg);
        }
        public static  int dwFlags$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIDEVCAPS_DX3$dwFlags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwFlags$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIDEVCAPS_DX3$dwFlags$VH().set(seg, x);
        }
        public static void dwFlags$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIDEVCAPS_DX3$dwFlags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwDevType$VH() {
            return dinput_h_constants_1.DIDEVCAPS_DX3$dwDevType$VH();
        }
        public static  int dwDevType$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIDEVCAPS_DX3$dwDevType$VH().get(seg);
        }
        public static  int dwDevType$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIDEVCAPS_DX3$dwDevType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwDevType$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIDEVCAPS_DX3$dwDevType$VH().set(seg, x);
        }
        public static void dwDevType$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIDEVCAPS_DX3$dwDevType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwAxes$VH() {
            return dinput_h_constants_1.DIDEVCAPS_DX3$dwAxes$VH();
        }
        public static  int dwAxes$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIDEVCAPS_DX3$dwAxes$VH().get(seg);
        }
        public static  int dwAxes$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIDEVCAPS_DX3$dwAxes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwAxes$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIDEVCAPS_DX3$dwAxes$VH().set(seg, x);
        }
        public static void dwAxes$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIDEVCAPS_DX3$dwAxes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwButtons$VH() {
            return dinput_h_constants_1.DIDEVCAPS_DX3$dwButtons$VH();
        }
        public static  int dwButtons$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIDEVCAPS_DX3$dwButtons$VH().get(seg);
        }
        public static  int dwButtons$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIDEVCAPS_DX3$dwButtons$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwButtons$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIDEVCAPS_DX3$dwButtons$VH().set(seg, x);
        }
        public static void dwButtons$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIDEVCAPS_DX3$dwButtons$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwPOVs$VH() {
            return dinput_h_constants_1.DIDEVCAPS_DX3$dwPOVs$VH();
        }
        public static  int dwPOVs$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIDEVCAPS_DX3$dwPOVs$VH().get(seg);
        }
        public static  int dwPOVs$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIDEVCAPS_DX3$dwPOVs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwPOVs$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIDEVCAPS_DX3$dwPOVs$VH().set(seg, x);
        }
        public static void dwPOVs$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIDEVCAPS_DX3$dwPOVs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIDEVCAPS {

        /* package-private */ DIDEVCAPS() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_1.DIDEVCAPS$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_1.DIDEVCAPS$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIDEVCAPS$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIDEVCAPS$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIDEVCAPS$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIDEVCAPS$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwFlags$VH() {
            return dinput_h_constants_1.DIDEVCAPS$dwFlags$VH();
        }
        public static  int dwFlags$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIDEVCAPS$dwFlags$VH().get(seg);
        }
        public static  int dwFlags$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIDEVCAPS$dwFlags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwFlags$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIDEVCAPS$dwFlags$VH().set(seg, x);
        }
        public static void dwFlags$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIDEVCAPS$dwFlags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwDevType$VH() {
            return dinput_h_constants_1.DIDEVCAPS$dwDevType$VH();
        }
        public static  int dwDevType$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIDEVCAPS$dwDevType$VH().get(seg);
        }
        public static  int dwDevType$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIDEVCAPS$dwDevType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwDevType$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIDEVCAPS$dwDevType$VH().set(seg, x);
        }
        public static void dwDevType$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIDEVCAPS$dwDevType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwAxes$VH() {
            return dinput_h_constants_1.DIDEVCAPS$dwAxes$VH();
        }
        public static  int dwAxes$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIDEVCAPS$dwAxes$VH().get(seg);
        }
        public static  int dwAxes$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIDEVCAPS$dwAxes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwAxes$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIDEVCAPS$dwAxes$VH().set(seg, x);
        }
        public static void dwAxes$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIDEVCAPS$dwAxes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwButtons$VH() {
            return dinput_h_constants_1.DIDEVCAPS$dwButtons$VH();
        }
        public static  int dwButtons$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIDEVCAPS$dwButtons$VH().get(seg);
        }
        public static  int dwButtons$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIDEVCAPS$dwButtons$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwButtons$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIDEVCAPS$dwButtons$VH().set(seg, x);
        }
        public static void dwButtons$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIDEVCAPS$dwButtons$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwPOVs$VH() {
            return dinput_h_constants_1.DIDEVCAPS$dwPOVs$VH();
        }
        public static  int dwPOVs$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIDEVCAPS$dwPOVs$VH().get(seg);
        }
        public static  int dwPOVs$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIDEVCAPS$dwPOVs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwPOVs$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIDEVCAPS$dwPOVs$VH().set(seg, x);
        }
        public static void dwPOVs$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIDEVCAPS$dwPOVs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwFFSamplePeriod$VH() {
            return dinput_h_constants_1.DIDEVCAPS$dwFFSamplePeriod$VH();
        }
        public static  int dwFFSamplePeriod$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIDEVCAPS$dwFFSamplePeriod$VH().get(seg);
        }
        public static  int dwFFSamplePeriod$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIDEVCAPS$dwFFSamplePeriod$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwFFSamplePeriod$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIDEVCAPS$dwFFSamplePeriod$VH().set(seg, x);
        }
        public static void dwFFSamplePeriod$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIDEVCAPS$dwFFSamplePeriod$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwFFMinTimeResolution$VH() {
            return dinput_h_constants_1.DIDEVCAPS$dwFFMinTimeResolution$VH();
        }
        public static  int dwFFMinTimeResolution$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIDEVCAPS$dwFFMinTimeResolution$VH().get(seg);
        }
        public static  int dwFFMinTimeResolution$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIDEVCAPS$dwFFMinTimeResolution$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwFFMinTimeResolution$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIDEVCAPS$dwFFMinTimeResolution$VH().set(seg, x);
        }
        public static void dwFFMinTimeResolution$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIDEVCAPS$dwFFMinTimeResolution$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwFirmwareRevision$VH() {
            return dinput_h_constants_1.DIDEVCAPS$dwFirmwareRevision$VH();
        }
        public static  int dwFirmwareRevision$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIDEVCAPS$dwFirmwareRevision$VH().get(seg);
        }
        public static  int dwFirmwareRevision$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIDEVCAPS$dwFirmwareRevision$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwFirmwareRevision$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIDEVCAPS$dwFirmwareRevision$VH().set(seg, x);
        }
        public static void dwFirmwareRevision$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIDEVCAPS$dwFirmwareRevision$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwHardwareRevision$VH() {
            return dinput_h_constants_1.DIDEVCAPS$dwHardwareRevision$VH();
        }
        public static  int dwHardwareRevision$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIDEVCAPS$dwHardwareRevision$VH().get(seg);
        }
        public static  int dwHardwareRevision$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIDEVCAPS$dwHardwareRevision$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwHardwareRevision$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIDEVCAPS$dwHardwareRevision$VH().set(seg, x);
        }
        public static void dwHardwareRevision$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIDEVCAPS$dwHardwareRevision$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwFFDriverVersion$VH() {
            return dinput_h_constants_1.DIDEVCAPS$dwFFDriverVersion$VH();
        }
        public static  int dwFFDriverVersion$get(MemorySegment seg) {
            return (int)dinput_h_constants_1.DIDEVCAPS$dwFFDriverVersion$VH().get(seg);
        }
        public static  int dwFFDriverVersion$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1.DIDEVCAPS$dwFFDriverVersion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwFFDriverVersion$set( MemorySegment seg, int x) {
            dinput_h_constants_1.DIDEVCAPS$dwFFDriverVersion$VH().set(seg, x);
        }
        public static void dwFFDriverVersion$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1.DIDEVCAPS$dwFFDriverVersion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class _DIOBJECTDATAFORMAT {

        /* package-private */ _DIOBJECTDATAFORMAT() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_1._DIOBJECTDATAFORMAT$struct$LAYOUT();
        }
        public static VarHandle pguid$VH() {
            return dinput_h_constants_1._DIOBJECTDATAFORMAT$pguid$VH();
        }
        public static  MemoryAddress pguid$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1._DIOBJECTDATAFORMAT$pguid$VH().get(seg);
        }
        public static  MemoryAddress pguid$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1._DIOBJECTDATAFORMAT$pguid$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pguid$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1._DIOBJECTDATAFORMAT$pguid$VH().set(seg, x);
        }
        public static void pguid$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1._DIOBJECTDATAFORMAT$pguid$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwOfs$VH() {
            return dinput_h_constants_1._DIOBJECTDATAFORMAT$dwOfs$VH();
        }
        public static  int dwOfs$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIOBJECTDATAFORMAT$dwOfs$VH().get(seg);
        }
        public static  int dwOfs$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIOBJECTDATAFORMAT$dwOfs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwOfs$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIOBJECTDATAFORMAT$dwOfs$VH().set(seg, x);
        }
        public static void dwOfs$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIOBJECTDATAFORMAT$dwOfs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwType$VH() {
            return dinput_h_constants_1._DIOBJECTDATAFORMAT$dwType$VH();
        }
        public static  int dwType$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIOBJECTDATAFORMAT$dwType$VH().get(seg);
        }
        public static  int dwType$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIOBJECTDATAFORMAT$dwType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwType$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIOBJECTDATAFORMAT$dwType$VH().set(seg, x);
        }
        public static void dwType$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIOBJECTDATAFORMAT$dwType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwFlags$VH() {
            return dinput_h_constants_1._DIOBJECTDATAFORMAT$dwFlags$VH();
        }
        public static  int dwFlags$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIOBJECTDATAFORMAT$dwFlags$VH().get(seg);
        }
        public static  int dwFlags$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIOBJECTDATAFORMAT$dwFlags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwFlags$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIOBJECTDATAFORMAT$dwFlags$VH().set(seg, x);
        }
        public static void dwFlags$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIOBJECTDATAFORMAT$dwFlags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIOBJECTDATAFORMAT extends _DIOBJECTDATAFORMAT {

        /* package-private */ DIOBJECTDATAFORMAT() {}
    }

    public static class _DIDATAFORMAT {

        /* package-private */ _DIDATAFORMAT() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_1._DIDATAFORMAT$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_1._DIDATAFORMAT$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIDATAFORMAT$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIDATAFORMAT$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIDATAFORMAT$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIDATAFORMAT$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwObjSize$VH() {
            return dinput_h_constants_1._DIDATAFORMAT$dwObjSize$VH();
        }
        public static  int dwObjSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIDATAFORMAT$dwObjSize$VH().get(seg);
        }
        public static  int dwObjSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIDATAFORMAT$dwObjSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwObjSize$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIDATAFORMAT$dwObjSize$VH().set(seg, x);
        }
        public static void dwObjSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIDATAFORMAT$dwObjSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwFlags$VH() {
            return dinput_h_constants_1._DIDATAFORMAT$dwFlags$VH();
        }
        public static  int dwFlags$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIDATAFORMAT$dwFlags$VH().get(seg);
        }
        public static  int dwFlags$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIDATAFORMAT$dwFlags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwFlags$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIDATAFORMAT$dwFlags$VH().set(seg, x);
        }
        public static void dwFlags$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIDATAFORMAT$dwFlags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwDataSize$VH() {
            return dinput_h_constants_1._DIDATAFORMAT$dwDataSize$VH();
        }
        public static  int dwDataSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIDATAFORMAT$dwDataSize$VH().get(seg);
        }
        public static  int dwDataSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIDATAFORMAT$dwDataSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwDataSize$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIDATAFORMAT$dwDataSize$VH().set(seg, x);
        }
        public static void dwDataSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIDATAFORMAT$dwDataSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwNumObjs$VH() {
            return dinput_h_constants_1._DIDATAFORMAT$dwNumObjs$VH();
        }
        public static  int dwNumObjs$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIDATAFORMAT$dwNumObjs$VH().get(seg);
        }
        public static  int dwNumObjs$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIDATAFORMAT$dwNumObjs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwNumObjs$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIDATAFORMAT$dwNumObjs$VH().set(seg, x);
        }
        public static void dwNumObjs$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIDATAFORMAT$dwNumObjs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle rgodf$VH() {
            return dinput_h_constants_1._DIDATAFORMAT$rgodf$VH();
        }
        public static  MemoryAddress rgodf$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1._DIDATAFORMAT$rgodf$VH().get(seg);
        }
        public static  MemoryAddress rgodf$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1._DIDATAFORMAT$rgodf$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void rgodf$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1._DIDATAFORMAT$rgodf$VH().set(seg, x);
        }
        public static void rgodf$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1._DIDATAFORMAT$rgodf$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIDATAFORMAT extends _DIDATAFORMAT {

        /* package-private */ DIDATAFORMAT() {}
    }

    public static class _DIACTIONA {

        /* package-private */ _DIACTIONA() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_1._DIACTIONA$struct$LAYOUT();
        }
        public static VarHandle uAppData$VH() {
            return dinput_h_constants_1._DIACTIONA$uAppData$VH();
        }
        public static  long uAppData$get(MemorySegment seg) {
            return (long)dinput_h_constants_1._DIACTIONA$uAppData$VH().get(seg);
        }
        public static  long uAppData$get(MemorySegment seg, long index) {
            return (long)dinput_h_constants_1._DIACTIONA$uAppData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void uAppData$set( MemorySegment seg, long x) {
            dinput_h_constants_1._DIACTIONA$uAppData$VH().set(seg, x);
        }
        public static void uAppData$set(MemorySegment seg, long index, long x) {
            dinput_h_constants_1._DIACTIONA$uAppData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwSemantic$VH() {
            return dinput_h_constants_1._DIACTIONA$dwSemantic$VH();
        }
        public static  int dwSemantic$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONA$dwSemantic$VH().get(seg);
        }
        public static  int dwSemantic$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONA$dwSemantic$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSemantic$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONA$dwSemantic$VH().set(seg, x);
        }
        public static void dwSemantic$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONA$dwSemantic$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwFlags$VH() {
            return dinput_h_constants_1._DIACTIONA$dwFlags$VH();
        }
        public static  int dwFlags$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONA$dwFlags$VH().get(seg);
        }
        public static  int dwFlags$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONA$dwFlags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwFlags$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONA$dwFlags$VH().set(seg, x);
        }
        public static void dwFlags$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONA$dwFlags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lptszActionName$VH() {
            return dinput_h_constants_1._DIACTIONA$lptszActionName$VH();
        }
        public static  MemoryAddress lptszActionName$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1._DIACTIONA$lptszActionName$VH().get(seg);
        }
        public static  MemoryAddress lptszActionName$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1._DIACTIONA$lptszActionName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lptszActionName$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1._DIACTIONA$lptszActionName$VH().set(seg, x);
        }
        public static void lptszActionName$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1._DIACTIONA$lptszActionName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle uResIdString$VH() {
            return dinput_h_constants_1._DIACTIONA$uResIdString$VH();
        }
        public static  int uResIdString$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONA$uResIdString$VH().get(seg);
        }
        public static  int uResIdString$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONA$uResIdString$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void uResIdString$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONA$uResIdString$VH().set(seg, x);
        }
        public static void uResIdString$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONA$uResIdString$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment guidInstance$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(24, 16));
        }
        public static VarHandle dwObjID$VH() {
            return dinput_h_constants_1._DIACTIONA$dwObjID$VH();
        }
        public static  int dwObjID$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONA$dwObjID$VH().get(seg);
        }
        public static  int dwObjID$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONA$dwObjID$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwObjID$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONA$dwObjID$VH().set(seg, x);
        }
        public static void dwObjID$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONA$dwObjID$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwHow$VH() {
            return dinput_h_constants_1._DIACTIONA$dwHow$VH();
        }
        public static  int dwHow$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONA$dwHow$VH().get(seg);
        }
        public static  int dwHow$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONA$dwHow$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwHow$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONA$dwHow$VH().set(seg, x);
        }
        public static void dwHow$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONA$dwHow$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIACTIONA extends _DIACTIONA {

        /* package-private */ DIACTIONA() {}
    }

    public static class _DIACTIONW {

        /* package-private */ _DIACTIONW() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_1._DIACTIONW$struct$LAYOUT();
        }
        public static VarHandle uAppData$VH() {
            return dinput_h_constants_1._DIACTIONW$uAppData$VH();
        }
        public static  long uAppData$get(MemorySegment seg) {
            return (long)dinput_h_constants_1._DIACTIONW$uAppData$VH().get(seg);
        }
        public static  long uAppData$get(MemorySegment seg, long index) {
            return (long)dinput_h_constants_1._DIACTIONW$uAppData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void uAppData$set( MemorySegment seg, long x) {
            dinput_h_constants_1._DIACTIONW$uAppData$VH().set(seg, x);
        }
        public static void uAppData$set(MemorySegment seg, long index, long x) {
            dinput_h_constants_1._DIACTIONW$uAppData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwSemantic$VH() {
            return dinput_h_constants_1._DIACTIONW$dwSemantic$VH();
        }
        public static  int dwSemantic$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONW$dwSemantic$VH().get(seg);
        }
        public static  int dwSemantic$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONW$dwSemantic$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSemantic$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONW$dwSemantic$VH().set(seg, x);
        }
        public static void dwSemantic$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONW$dwSemantic$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwFlags$VH() {
            return dinput_h_constants_1._DIACTIONW$dwFlags$VH();
        }
        public static  int dwFlags$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONW$dwFlags$VH().get(seg);
        }
        public static  int dwFlags$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONW$dwFlags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwFlags$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONW$dwFlags$VH().set(seg, x);
        }
        public static void dwFlags$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONW$dwFlags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lptszActionName$VH() {
            return dinput_h_constants_1._DIACTIONW$lptszActionName$VH();
        }
        public static  MemoryAddress lptszActionName$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1._DIACTIONW$lptszActionName$VH().get(seg);
        }
        public static  MemoryAddress lptszActionName$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1._DIACTIONW$lptszActionName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lptszActionName$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1._DIACTIONW$lptszActionName$VH().set(seg, x);
        }
        public static void lptszActionName$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1._DIACTIONW$lptszActionName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle uResIdString$VH() {
            return dinput_h_constants_1._DIACTIONW$uResIdString$VH();
        }
        public static  int uResIdString$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONW$uResIdString$VH().get(seg);
        }
        public static  int uResIdString$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONW$uResIdString$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void uResIdString$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONW$uResIdString$VH().set(seg, x);
        }
        public static void uResIdString$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONW$uResIdString$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment guidInstance$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(24, 16));
        }
        public static VarHandle dwObjID$VH() {
            return dinput_h_constants_1._DIACTIONW$dwObjID$VH();
        }
        public static  int dwObjID$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONW$dwObjID$VH().get(seg);
        }
        public static  int dwObjID$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONW$dwObjID$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwObjID$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONW$dwObjID$VH().set(seg, x);
        }
        public static void dwObjID$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONW$dwObjID$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwHow$VH() {
            return dinput_h_constants_1._DIACTIONW$dwHow$VH();
        }
        public static  int dwHow$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONW$dwHow$VH().get(seg);
        }
        public static  int dwHow$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONW$dwHow$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwHow$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONW$dwHow$VH().set(seg, x);
        }
        public static void dwHow$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONW$dwHow$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIACTIONW extends _DIACTIONW {

        /* package-private */ DIACTIONW() {}
    }

    public static class DIACTION extends _DIACTIONA {

        /* package-private */ DIACTION() {}
    }

    public static class DIACTION$0 extends _DIACTIONA {

        /* package-private */ DIACTION$0() {}
    }

    public static class _DIACTIONFORMATA {

        /* package-private */ _DIACTIONFORMATA() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_1._DIACTIONFORMATA$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_1._DIACTIONFORMATA$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONFORMATA$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONFORMATA$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONFORMATA$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONFORMATA$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwActionSize$VH() {
            return dinput_h_constants_1._DIACTIONFORMATA$dwActionSize$VH();
        }
        public static  int dwActionSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONFORMATA$dwActionSize$VH().get(seg);
        }
        public static  int dwActionSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONFORMATA$dwActionSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwActionSize$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONFORMATA$dwActionSize$VH().set(seg, x);
        }
        public static void dwActionSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONFORMATA$dwActionSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwDataSize$VH() {
            return dinput_h_constants_1._DIACTIONFORMATA$dwDataSize$VH();
        }
        public static  int dwDataSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONFORMATA$dwDataSize$VH().get(seg);
        }
        public static  int dwDataSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONFORMATA$dwDataSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwDataSize$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONFORMATA$dwDataSize$VH().set(seg, x);
        }
        public static void dwDataSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONFORMATA$dwDataSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwNumActions$VH() {
            return dinput_h_constants_1._DIACTIONFORMATA$dwNumActions$VH();
        }
        public static  int dwNumActions$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONFORMATA$dwNumActions$VH().get(seg);
        }
        public static  int dwNumActions$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONFORMATA$dwNumActions$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwNumActions$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONFORMATA$dwNumActions$VH().set(seg, x);
        }
        public static void dwNumActions$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONFORMATA$dwNumActions$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle rgoAction$VH() {
            return dinput_h_constants_1._DIACTIONFORMATA$rgoAction$VH();
        }
        public static  MemoryAddress rgoAction$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1._DIACTIONFORMATA$rgoAction$VH().get(seg);
        }
        public static  MemoryAddress rgoAction$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1._DIACTIONFORMATA$rgoAction$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void rgoAction$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1._DIACTIONFORMATA$rgoAction$VH().set(seg, x);
        }
        public static void rgoAction$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1._DIACTIONFORMATA$rgoAction$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment guidActionMap$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(24, 16));
        }
        public static VarHandle dwGenre$VH() {
            return dinput_h_constants_1._DIACTIONFORMATA$dwGenre$VH();
        }
        public static  int dwGenre$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONFORMATA$dwGenre$VH().get(seg);
        }
        public static  int dwGenre$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONFORMATA$dwGenre$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwGenre$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONFORMATA$dwGenre$VH().set(seg, x);
        }
        public static void dwGenre$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONFORMATA$dwGenre$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwBufferSize$VH() {
            return dinput_h_constants_1._DIACTIONFORMATA$dwBufferSize$VH();
        }
        public static  int dwBufferSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONFORMATA$dwBufferSize$VH().get(seg);
        }
        public static  int dwBufferSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONFORMATA$dwBufferSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwBufferSize$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONFORMATA$dwBufferSize$VH().set(seg, x);
        }
        public static void dwBufferSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONFORMATA$dwBufferSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lAxisMin$VH() {
            return dinput_h_constants_1._DIACTIONFORMATA$lAxisMin$VH();
        }
        public static  int lAxisMin$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONFORMATA$lAxisMin$VH().get(seg);
        }
        public static  int lAxisMin$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONFORMATA$lAxisMin$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lAxisMin$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONFORMATA$lAxisMin$VH().set(seg, x);
        }
        public static void lAxisMin$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONFORMATA$lAxisMin$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lAxisMax$VH() {
            return dinput_h_constants_1._DIACTIONFORMATA$lAxisMax$VH();
        }
        public static  int lAxisMax$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONFORMATA$lAxisMax$VH().get(seg);
        }
        public static  int lAxisMax$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONFORMATA$lAxisMax$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lAxisMax$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONFORMATA$lAxisMax$VH().set(seg, x);
        }
        public static void lAxisMax$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONFORMATA$lAxisMax$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle hInstString$VH() {
            return dinput_h_constants_1._DIACTIONFORMATA$hInstString$VH();
        }
        public static  MemoryAddress hInstString$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1._DIACTIONFORMATA$hInstString$VH().get(seg);
        }
        public static  MemoryAddress hInstString$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1._DIACTIONFORMATA$hInstString$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void hInstString$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1._DIACTIONFORMATA$hInstString$VH().set(seg, x);
        }
        public static void hInstString$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1._DIACTIONFORMATA$hInstString$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment ftTimeStamp$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(64, 8));
        }
        public static VarHandle dwCRC$VH() {
            return dinput_h_constants_1._DIACTIONFORMATA$dwCRC$VH();
        }
        public static  int dwCRC$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONFORMATA$dwCRC$VH().get(seg);
        }
        public static  int dwCRC$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONFORMATA$dwCRC$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwCRC$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONFORMATA$dwCRC$VH().set(seg, x);
        }
        public static void dwCRC$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONFORMATA$dwCRC$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment tszActionMap$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(76, 260));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIACTIONFORMATA extends _DIACTIONFORMATA {

        /* package-private */ DIACTIONFORMATA() {}
    }

    public static class _DIACTIONFORMATW {

        /* package-private */ _DIACTIONFORMATW() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_1._DIACTIONFORMATW$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_1._DIACTIONFORMATW$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONFORMATW$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONFORMATW$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONFORMATW$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONFORMATW$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwActionSize$VH() {
            return dinput_h_constants_1._DIACTIONFORMATW$dwActionSize$VH();
        }
        public static  int dwActionSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONFORMATW$dwActionSize$VH().get(seg);
        }
        public static  int dwActionSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONFORMATW$dwActionSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwActionSize$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONFORMATW$dwActionSize$VH().set(seg, x);
        }
        public static void dwActionSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONFORMATW$dwActionSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwDataSize$VH() {
            return dinput_h_constants_1._DIACTIONFORMATW$dwDataSize$VH();
        }
        public static  int dwDataSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONFORMATW$dwDataSize$VH().get(seg);
        }
        public static  int dwDataSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONFORMATW$dwDataSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwDataSize$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONFORMATW$dwDataSize$VH().set(seg, x);
        }
        public static void dwDataSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONFORMATW$dwDataSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwNumActions$VH() {
            return dinput_h_constants_1._DIACTIONFORMATW$dwNumActions$VH();
        }
        public static  int dwNumActions$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONFORMATW$dwNumActions$VH().get(seg);
        }
        public static  int dwNumActions$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONFORMATW$dwNumActions$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwNumActions$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONFORMATW$dwNumActions$VH().set(seg, x);
        }
        public static void dwNumActions$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONFORMATW$dwNumActions$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle rgoAction$VH() {
            return dinput_h_constants_1._DIACTIONFORMATW$rgoAction$VH();
        }
        public static  MemoryAddress rgoAction$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1._DIACTIONFORMATW$rgoAction$VH().get(seg);
        }
        public static  MemoryAddress rgoAction$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_1._DIACTIONFORMATW$rgoAction$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void rgoAction$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_1._DIACTIONFORMATW$rgoAction$VH().set(seg, x);
        }
        public static void rgoAction$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_1._DIACTIONFORMATW$rgoAction$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment guidActionMap$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(24, 16));
        }
        public static VarHandle dwGenre$VH() {
            return dinput_h_constants_1._DIACTIONFORMATW$dwGenre$VH();
        }
        public static  int dwGenre$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONFORMATW$dwGenre$VH().get(seg);
        }
        public static  int dwGenre$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONFORMATW$dwGenre$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwGenre$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONFORMATW$dwGenre$VH().set(seg, x);
        }
        public static void dwGenre$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONFORMATW$dwGenre$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwBufferSize$VH() {
            return dinput_h_constants_1._DIACTIONFORMATW$dwBufferSize$VH();
        }
        public static  int dwBufferSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONFORMATW$dwBufferSize$VH().get(seg);
        }
        public static  int dwBufferSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONFORMATW$dwBufferSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwBufferSize$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONFORMATW$dwBufferSize$VH().set(seg, x);
        }
        public static void dwBufferSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONFORMATW$dwBufferSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lAxisMin$VH() {
            return dinput_h_constants_1._DIACTIONFORMATW$lAxisMin$VH();
        }
        public static  int lAxisMin$get(MemorySegment seg) {
            return (int)dinput_h_constants_1._DIACTIONFORMATW$lAxisMin$VH().get(seg);
        }
        public static  int lAxisMin$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_1._DIACTIONFORMATW$lAxisMin$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lAxisMin$set( MemorySegment seg, int x) {
            dinput_h_constants_1._DIACTIONFORMATW$lAxisMin$VH().set(seg, x);
        }
        public static void lAxisMin$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_1._DIACTIONFORMATW$lAxisMin$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lAxisMax$VH() {
            return dinput_h_constants_2._DIACTIONFORMATW$lAxisMax$VH();
        }
        public static  int lAxisMax$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIACTIONFORMATW$lAxisMax$VH().get(seg);
        }
        public static  int lAxisMax$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIACTIONFORMATW$lAxisMax$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lAxisMax$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIACTIONFORMATW$lAxisMax$VH().set(seg, x);
        }
        public static void lAxisMax$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIACTIONFORMATW$lAxisMax$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle hInstString$VH() {
            return dinput_h_constants_2._DIACTIONFORMATW$hInstString$VH();
        }
        public static  MemoryAddress hInstString$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2._DIACTIONFORMATW$hInstString$VH().get(seg);
        }
        public static  MemoryAddress hInstString$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2._DIACTIONFORMATW$hInstString$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void hInstString$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2._DIACTIONFORMATW$hInstString$VH().set(seg, x);
        }
        public static void hInstString$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2._DIACTIONFORMATW$hInstString$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment ftTimeStamp$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(64, 8));
        }
        public static VarHandle dwCRC$VH() {
            return dinput_h_constants_2._DIACTIONFORMATW$dwCRC$VH();
        }
        public static  int dwCRC$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIACTIONFORMATW$dwCRC$VH().get(seg);
        }
        public static  int dwCRC$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIACTIONFORMATW$dwCRC$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwCRC$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIACTIONFORMATW$dwCRC$VH().set(seg, x);
        }
        public static void dwCRC$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIACTIONFORMATW$dwCRC$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment tszActionMap$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(76, 520));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIACTIONFORMATW extends _DIACTIONFORMATW {

        /* package-private */ DIACTIONFORMATW() {}
    }

    public static class DIACTIONFORMAT extends _DIACTIONFORMATA {

        /* package-private */ DIACTIONFORMAT() {}
    }

    public static class DIACTIONFORMAT$1 extends _DIACTIONFORMATA {

        /* package-private */ DIACTIONFORMAT$1() {}
    }

    public static class _DICOLORSET {

        /* package-private */ _DICOLORSET() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2._DICOLORSET$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_2._DICOLORSET$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DICOLORSET$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DICOLORSET$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DICOLORSET$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DICOLORSET$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle cTextFore$VH() {
            return dinput_h_constants_2._DICOLORSET$cTextFore$VH();
        }
        public static  int cTextFore$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DICOLORSET$cTextFore$VH().get(seg);
        }
        public static  int cTextFore$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DICOLORSET$cTextFore$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void cTextFore$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DICOLORSET$cTextFore$VH().set(seg, x);
        }
        public static void cTextFore$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DICOLORSET$cTextFore$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle cTextHighlight$VH() {
            return dinput_h_constants_2._DICOLORSET$cTextHighlight$VH();
        }
        public static  int cTextHighlight$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DICOLORSET$cTextHighlight$VH().get(seg);
        }
        public static  int cTextHighlight$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DICOLORSET$cTextHighlight$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void cTextHighlight$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DICOLORSET$cTextHighlight$VH().set(seg, x);
        }
        public static void cTextHighlight$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DICOLORSET$cTextHighlight$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle cCalloutLine$VH() {
            return dinput_h_constants_2._DICOLORSET$cCalloutLine$VH();
        }
        public static  int cCalloutLine$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DICOLORSET$cCalloutLine$VH().get(seg);
        }
        public static  int cCalloutLine$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DICOLORSET$cCalloutLine$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void cCalloutLine$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DICOLORSET$cCalloutLine$VH().set(seg, x);
        }
        public static void cCalloutLine$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DICOLORSET$cCalloutLine$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle cCalloutHighlight$VH() {
            return dinput_h_constants_2._DICOLORSET$cCalloutHighlight$VH();
        }
        public static  int cCalloutHighlight$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DICOLORSET$cCalloutHighlight$VH().get(seg);
        }
        public static  int cCalloutHighlight$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DICOLORSET$cCalloutHighlight$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void cCalloutHighlight$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DICOLORSET$cCalloutHighlight$VH().set(seg, x);
        }
        public static void cCalloutHighlight$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DICOLORSET$cCalloutHighlight$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle cBorder$VH() {
            return dinput_h_constants_2._DICOLORSET$cBorder$VH();
        }
        public static  int cBorder$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DICOLORSET$cBorder$VH().get(seg);
        }
        public static  int cBorder$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DICOLORSET$cBorder$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void cBorder$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DICOLORSET$cBorder$VH().set(seg, x);
        }
        public static void cBorder$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DICOLORSET$cBorder$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle cControlFill$VH() {
            return dinput_h_constants_2._DICOLORSET$cControlFill$VH();
        }
        public static  int cControlFill$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DICOLORSET$cControlFill$VH().get(seg);
        }
        public static  int cControlFill$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DICOLORSET$cControlFill$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void cControlFill$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DICOLORSET$cControlFill$VH().set(seg, x);
        }
        public static void cControlFill$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DICOLORSET$cControlFill$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle cHighlightFill$VH() {
            return dinput_h_constants_2._DICOLORSET$cHighlightFill$VH();
        }
        public static  int cHighlightFill$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DICOLORSET$cHighlightFill$VH().get(seg);
        }
        public static  int cHighlightFill$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DICOLORSET$cHighlightFill$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void cHighlightFill$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DICOLORSET$cHighlightFill$VH().set(seg, x);
        }
        public static void cHighlightFill$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DICOLORSET$cHighlightFill$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle cAreaFill$VH() {
            return dinput_h_constants_2._DICOLORSET$cAreaFill$VH();
        }
        public static  int cAreaFill$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DICOLORSET$cAreaFill$VH().get(seg);
        }
        public static  int cAreaFill$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DICOLORSET$cAreaFill$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void cAreaFill$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DICOLORSET$cAreaFill$VH().set(seg, x);
        }
        public static void cAreaFill$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DICOLORSET$cAreaFill$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DICOLORSET extends _DICOLORSET {

        /* package-private */ DICOLORSET() {}
    }

    public static class _DICONFIGUREDEVICESPARAMSA {

        /* package-private */ _DICONFIGUREDEVICESPARAMSA() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwcUsers$VH() {
            return dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$dwcUsers$VH();
        }
        public static  int dwcUsers$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$dwcUsers$VH().get(seg);
        }
        public static  int dwcUsers$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$dwcUsers$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwcUsers$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$dwcUsers$VH().set(seg, x);
        }
        public static void dwcUsers$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$dwcUsers$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lptszUserNames$VH() {
            return dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$lptszUserNames$VH();
        }
        public static  MemoryAddress lptszUserNames$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$lptszUserNames$VH().get(seg);
        }
        public static  MemoryAddress lptszUserNames$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$lptszUserNames$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lptszUserNames$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$lptszUserNames$VH().set(seg, x);
        }
        public static void lptszUserNames$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$lptszUserNames$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwcFormats$VH() {
            return dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$dwcFormats$VH();
        }
        public static  int dwcFormats$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$dwcFormats$VH().get(seg);
        }
        public static  int dwcFormats$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$dwcFormats$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwcFormats$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$dwcFormats$VH().set(seg, x);
        }
        public static void dwcFormats$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$dwcFormats$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lprgFormats$VH() {
            return dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$lprgFormats$VH();
        }
        public static  MemoryAddress lprgFormats$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$lprgFormats$VH().get(seg);
        }
        public static  MemoryAddress lprgFormats$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$lprgFormats$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lprgFormats$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$lprgFormats$VH().set(seg, x);
        }
        public static void lprgFormats$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$lprgFormats$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle hwnd$VH() {
            return dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$hwnd$VH();
        }
        public static  MemoryAddress hwnd$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$hwnd$VH().get(seg);
        }
        public static  MemoryAddress hwnd$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$hwnd$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void hwnd$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$hwnd$VH().set(seg, x);
        }
        public static void hwnd$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$hwnd$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment dics$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(40, 36));
        }
        public static VarHandle lpUnkDDSTarget$VH() {
            return dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$lpUnkDDSTarget$VH();
        }
        public static  MemoryAddress lpUnkDDSTarget$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$lpUnkDDSTarget$VH().get(seg);
        }
        public static  MemoryAddress lpUnkDDSTarget$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$lpUnkDDSTarget$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpUnkDDSTarget$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$lpUnkDDSTarget$VH().set(seg, x);
        }
        public static void lpUnkDDSTarget$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSA$lpUnkDDSTarget$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DICONFIGUREDEVICESPARAMSA extends _DICONFIGUREDEVICESPARAMSA {

        /* package-private */ DICONFIGUREDEVICESPARAMSA() {}
    }

    public static class _DICONFIGUREDEVICESPARAMSW {

        /* package-private */ _DICONFIGUREDEVICESPARAMSW() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwcUsers$VH() {
            return dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$dwcUsers$VH();
        }
        public static  int dwcUsers$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$dwcUsers$VH().get(seg);
        }
        public static  int dwcUsers$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$dwcUsers$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwcUsers$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$dwcUsers$VH().set(seg, x);
        }
        public static void dwcUsers$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$dwcUsers$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lptszUserNames$VH() {
            return dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$lptszUserNames$VH();
        }
        public static  MemoryAddress lptszUserNames$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$lptszUserNames$VH().get(seg);
        }
        public static  MemoryAddress lptszUserNames$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$lptszUserNames$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lptszUserNames$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$lptszUserNames$VH().set(seg, x);
        }
        public static void lptszUserNames$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$lptszUserNames$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwcFormats$VH() {
            return dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$dwcFormats$VH();
        }
        public static  int dwcFormats$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$dwcFormats$VH().get(seg);
        }
        public static  int dwcFormats$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$dwcFormats$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwcFormats$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$dwcFormats$VH().set(seg, x);
        }
        public static void dwcFormats$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$dwcFormats$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lprgFormats$VH() {
            return dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$lprgFormats$VH();
        }
        public static  MemoryAddress lprgFormats$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$lprgFormats$VH().get(seg);
        }
        public static  MemoryAddress lprgFormats$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$lprgFormats$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lprgFormats$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$lprgFormats$VH().set(seg, x);
        }
        public static void lprgFormats$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$lprgFormats$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle hwnd$VH() {
            return dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$hwnd$VH();
        }
        public static  MemoryAddress hwnd$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$hwnd$VH().get(seg);
        }
        public static  MemoryAddress hwnd$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$hwnd$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void hwnd$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$hwnd$VH().set(seg, x);
        }
        public static void hwnd$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$hwnd$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment dics$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(40, 36));
        }
        public static VarHandle lpUnkDDSTarget$VH() {
            return dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$lpUnkDDSTarget$VH();
        }
        public static  MemoryAddress lpUnkDDSTarget$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$lpUnkDDSTarget$VH().get(seg);
        }
        public static  MemoryAddress lpUnkDDSTarget$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$lpUnkDDSTarget$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpUnkDDSTarget$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$lpUnkDDSTarget$VH().set(seg, x);
        }
        public static void lpUnkDDSTarget$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2._DICONFIGUREDEVICESPARAMSW$lpUnkDDSTarget$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DICONFIGUREDEVICESPARAMSW extends _DICONFIGUREDEVICESPARAMSW {

        /* package-private */ DICONFIGUREDEVICESPARAMSW() {}
    }

    public static class DICONFIGUREDEVICESPARAMS extends _DICONFIGUREDEVICESPARAMSA {

        /* package-private */ DICONFIGUREDEVICESPARAMS() {}
    }

    public static class DICONFIGUREDEVICESPARAMS$2 extends _DICONFIGUREDEVICESPARAMSA {

        /* package-private */ DICONFIGUREDEVICESPARAMS$2() {}
    }

    public static class _DIDEVICEIMAGEINFOA {

        /* package-private */ _DIDEVICEIMAGEINFOA() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOA$struct$LAYOUT();
        }
        public static MemorySegment tszImagePath$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 260));
        }
        public static VarHandle dwFlags$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOA$dwFlags$VH();
        }
        public static  int dwFlags$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOA$dwFlags$VH().get(seg);
        }
        public static  int dwFlags$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOA$dwFlags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwFlags$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOA$dwFlags$VH().set(seg, x);
        }
        public static void dwFlags$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOA$dwFlags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwViewID$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOA$dwViewID$VH();
        }
        public static  int dwViewID$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOA$dwViewID$VH().get(seg);
        }
        public static  int dwViewID$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOA$dwViewID$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwViewID$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOA$dwViewID$VH().set(seg, x);
        }
        public static void dwViewID$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOA$dwViewID$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment rcOverlay$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(268, 16));
        }
        public static VarHandle dwObjID$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOA$dwObjID$VH();
        }
        public static  int dwObjID$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOA$dwObjID$VH().get(seg);
        }
        public static  int dwObjID$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOA$dwObjID$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwObjID$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOA$dwObjID$VH().set(seg, x);
        }
        public static void dwObjID$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOA$dwObjID$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwcValidPts$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOA$dwcValidPts$VH();
        }
        public static  int dwcValidPts$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOA$dwcValidPts$VH().get(seg);
        }
        public static  int dwcValidPts$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOA$dwcValidPts$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwcValidPts$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOA$dwcValidPts$VH().set(seg, x);
        }
        public static void dwcValidPts$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOA$dwcValidPts$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment rgptCalloutLine$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(292, 40));
        }
        public static MemorySegment rcCalloutRect$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(332, 16));
        }
        public static VarHandle dwTextAlign$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOA$dwTextAlign$VH();
        }
        public static  int dwTextAlign$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOA$dwTextAlign$VH().get(seg);
        }
        public static  int dwTextAlign$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOA$dwTextAlign$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwTextAlign$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOA$dwTextAlign$VH().set(seg, x);
        }
        public static void dwTextAlign$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOA$dwTextAlign$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIDEVICEIMAGEINFOA extends _DIDEVICEIMAGEINFOA {

        /* package-private */ DIDEVICEIMAGEINFOA() {}
    }

    public static class _DIDEVICEIMAGEINFOW {

        /* package-private */ _DIDEVICEIMAGEINFOW() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOW$struct$LAYOUT();
        }
        public static MemorySegment tszImagePath$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 520));
        }
        public static VarHandle dwFlags$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOW$dwFlags$VH();
        }
        public static  int dwFlags$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOW$dwFlags$VH().get(seg);
        }
        public static  int dwFlags$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOW$dwFlags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwFlags$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOW$dwFlags$VH().set(seg, x);
        }
        public static void dwFlags$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOW$dwFlags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwViewID$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOW$dwViewID$VH();
        }
        public static  int dwViewID$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOW$dwViewID$VH().get(seg);
        }
        public static  int dwViewID$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOW$dwViewID$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwViewID$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOW$dwViewID$VH().set(seg, x);
        }
        public static void dwViewID$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOW$dwViewID$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment rcOverlay$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(528, 16));
        }
        public static VarHandle dwObjID$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOW$dwObjID$VH();
        }
        public static  int dwObjID$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOW$dwObjID$VH().get(seg);
        }
        public static  int dwObjID$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOW$dwObjID$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwObjID$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOW$dwObjID$VH().set(seg, x);
        }
        public static void dwObjID$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOW$dwObjID$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwcValidPts$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOW$dwcValidPts$VH();
        }
        public static  int dwcValidPts$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOW$dwcValidPts$VH().get(seg);
        }
        public static  int dwcValidPts$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOW$dwcValidPts$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwcValidPts$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOW$dwcValidPts$VH().set(seg, x);
        }
        public static void dwcValidPts$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOW$dwcValidPts$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment rgptCalloutLine$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(552, 40));
        }
        public static MemorySegment rcCalloutRect$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(592, 16));
        }
        public static VarHandle dwTextAlign$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOW$dwTextAlign$VH();
        }
        public static  int dwTextAlign$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOW$dwTextAlign$VH().get(seg);
        }
        public static  int dwTextAlign$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOW$dwTextAlign$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwTextAlign$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOW$dwTextAlign$VH().set(seg, x);
        }
        public static void dwTextAlign$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOW$dwTextAlign$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIDEVICEIMAGEINFOW extends _DIDEVICEIMAGEINFOW {

        /* package-private */ DIDEVICEIMAGEINFOW() {}
    }

    public static class DIDEVICEIMAGEINFO extends _DIDEVICEIMAGEINFOA {

        /* package-private */ DIDEVICEIMAGEINFO() {}
    }

    public static class DIDEVICEIMAGEINFO$3 extends _DIDEVICEIMAGEINFOA {

        /* package-private */ DIDEVICEIMAGEINFO$3() {}
    }

    public static class _DIDEVICEIMAGEINFOHEADERA {

        /* package-private */ _DIDEVICEIMAGEINFOHEADERA() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwSizeImageInfo$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwSizeImageInfo$VH();
        }
        public static  int dwSizeImageInfo$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwSizeImageInfo$VH().get(seg);
        }
        public static  int dwSizeImageInfo$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwSizeImageInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSizeImageInfo$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwSizeImageInfo$VH().set(seg, x);
        }
        public static void dwSizeImageInfo$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwSizeImageInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwcViews$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwcViews$VH();
        }
        public static  int dwcViews$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwcViews$VH().get(seg);
        }
        public static  int dwcViews$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwcViews$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwcViews$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwcViews$VH().set(seg, x);
        }
        public static void dwcViews$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwcViews$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwcButtons$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwcButtons$VH();
        }
        public static  int dwcButtons$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwcButtons$VH().get(seg);
        }
        public static  int dwcButtons$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwcButtons$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwcButtons$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwcButtons$VH().set(seg, x);
        }
        public static void dwcButtons$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwcButtons$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwcAxes$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwcAxes$VH();
        }
        public static  int dwcAxes$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwcAxes$VH().get(seg);
        }
        public static  int dwcAxes$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwcAxes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwcAxes$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwcAxes$VH().set(seg, x);
        }
        public static void dwcAxes$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwcAxes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwcPOVs$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwcPOVs$VH();
        }
        public static  int dwcPOVs$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwcPOVs$VH().get(seg);
        }
        public static  int dwcPOVs$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwcPOVs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwcPOVs$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwcPOVs$VH().set(seg, x);
        }
        public static void dwcPOVs$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwcPOVs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwBufferSize$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwBufferSize$VH();
        }
        public static  int dwBufferSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwBufferSize$VH().get(seg);
        }
        public static  int dwBufferSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwBufferSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwBufferSize$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwBufferSize$VH().set(seg, x);
        }
        public static void dwBufferSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwBufferSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwBufferUsed$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwBufferUsed$VH();
        }
        public static  int dwBufferUsed$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwBufferUsed$VH().get(seg);
        }
        public static  int dwBufferUsed$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwBufferUsed$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwBufferUsed$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwBufferUsed$VH().set(seg, x);
        }
        public static void dwBufferUsed$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$dwBufferUsed$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lprgImageInfoArray$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$lprgImageInfoArray$VH();
        }
        public static  MemoryAddress lprgImageInfoArray$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$lprgImageInfoArray$VH().get(seg);
        }
        public static  MemoryAddress lprgImageInfoArray$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$lprgImageInfoArray$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lprgImageInfoArray$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$lprgImageInfoArray$VH().set(seg, x);
        }
        public static void lprgImageInfoArray$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERA$lprgImageInfoArray$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIDEVICEIMAGEINFOHEADERA extends _DIDEVICEIMAGEINFOHEADERA {

        /* package-private */ DIDEVICEIMAGEINFOHEADERA() {}
    }

    public static class _DIDEVICEIMAGEINFOHEADERW {

        /* package-private */ _DIDEVICEIMAGEINFOHEADERW() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwSizeImageInfo$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwSizeImageInfo$VH();
        }
        public static  int dwSizeImageInfo$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwSizeImageInfo$VH().get(seg);
        }
        public static  int dwSizeImageInfo$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwSizeImageInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSizeImageInfo$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwSizeImageInfo$VH().set(seg, x);
        }
        public static void dwSizeImageInfo$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwSizeImageInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwcViews$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwcViews$VH();
        }
        public static  int dwcViews$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwcViews$VH().get(seg);
        }
        public static  int dwcViews$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwcViews$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwcViews$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwcViews$VH().set(seg, x);
        }
        public static void dwcViews$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwcViews$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwcButtons$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwcButtons$VH();
        }
        public static  int dwcButtons$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwcButtons$VH().get(seg);
        }
        public static  int dwcButtons$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwcButtons$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwcButtons$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwcButtons$VH().set(seg, x);
        }
        public static void dwcButtons$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwcButtons$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwcAxes$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwcAxes$VH();
        }
        public static  int dwcAxes$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwcAxes$VH().get(seg);
        }
        public static  int dwcAxes$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwcAxes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwcAxes$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwcAxes$VH().set(seg, x);
        }
        public static void dwcAxes$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwcAxes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwcPOVs$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwcPOVs$VH();
        }
        public static  int dwcPOVs$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwcPOVs$VH().get(seg);
        }
        public static  int dwcPOVs$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwcPOVs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwcPOVs$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwcPOVs$VH().set(seg, x);
        }
        public static void dwcPOVs$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwcPOVs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwBufferSize$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwBufferSize$VH();
        }
        public static  int dwBufferSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwBufferSize$VH().get(seg);
        }
        public static  int dwBufferSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwBufferSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwBufferSize$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwBufferSize$VH().set(seg, x);
        }
        public static void dwBufferSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwBufferSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwBufferUsed$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwBufferUsed$VH();
        }
        public static  int dwBufferUsed$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwBufferUsed$VH().get(seg);
        }
        public static  int dwBufferUsed$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwBufferUsed$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwBufferUsed$set( MemorySegment seg, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwBufferUsed$VH().set(seg, x);
        }
        public static void dwBufferUsed$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$dwBufferUsed$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lprgImageInfoArray$VH() {
            return dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$lprgImageInfoArray$VH();
        }
        public static  MemoryAddress lprgImageInfoArray$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$lprgImageInfoArray$VH().get(seg);
        }
        public static  MemoryAddress lprgImageInfoArray$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$lprgImageInfoArray$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lprgImageInfoArray$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$lprgImageInfoArray$VH().set(seg, x);
        }
        public static void lprgImageInfoArray$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2._DIDEVICEIMAGEINFOHEADERW$lprgImageInfoArray$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIDEVICEIMAGEINFOHEADERW extends _DIDEVICEIMAGEINFOHEADERW {

        /* package-private */ DIDEVICEIMAGEINFOHEADERW() {}
    }

    public static class DIDEVICEIMAGEINFOHEADER extends _DIDEVICEIMAGEINFOHEADERA {

        /* package-private */ DIDEVICEIMAGEINFOHEADER() {}
    }

    public static class DIDEVICEIMAGEINFOHEADER$4 extends _DIDEVICEIMAGEINFOHEADERA {

        /* package-private */ DIDEVICEIMAGEINFOHEADER$4() {}
    }

    public static class DIDEVICEOBJECTINSTANCE_DX3A {

        /* package-private */ DIDEVICEOBJECTINSTANCE_DX3A() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3A$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3A$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3A$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3A$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3A$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3A$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment guidType$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(4, 16));
        }
        public static VarHandle dwOfs$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3A$dwOfs$VH();
        }
        public static  int dwOfs$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3A$dwOfs$VH().get(seg);
        }
        public static  int dwOfs$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3A$dwOfs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwOfs$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3A$dwOfs$VH().set(seg, x);
        }
        public static void dwOfs$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3A$dwOfs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwType$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3A$dwType$VH();
        }
        public static  int dwType$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3A$dwType$VH().get(seg);
        }
        public static  int dwType$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3A$dwType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwType$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3A$dwType$VH().set(seg, x);
        }
        public static void dwType$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3A$dwType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwFlags$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3A$dwFlags$VH();
        }
        public static  int dwFlags$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3A$dwFlags$VH().get(seg);
        }
        public static  int dwFlags$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3A$dwFlags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwFlags$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3A$dwFlags$VH().set(seg, x);
        }
        public static void dwFlags$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3A$dwFlags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment tszName$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(32, 260));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIDEVICEOBJECTINSTANCE_DX3W {

        /* package-private */ DIDEVICEOBJECTINSTANCE_DX3W() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3W$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3W$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3W$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3W$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3W$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3W$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment guidType$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(4, 16));
        }
        public static VarHandle dwOfs$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3W$dwOfs$VH();
        }
        public static  int dwOfs$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3W$dwOfs$VH().get(seg);
        }
        public static  int dwOfs$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3W$dwOfs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwOfs$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3W$dwOfs$VH().set(seg, x);
        }
        public static void dwOfs$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3W$dwOfs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwType$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3W$dwType$VH();
        }
        public static  int dwType$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3W$dwType$VH().get(seg);
        }
        public static  int dwType$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3W$dwType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwType$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3W$dwType$VH().set(seg, x);
        }
        public static void dwType$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3W$dwType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwFlags$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3W$dwFlags$VH();
        }
        public static  int dwFlags$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3W$dwFlags$VH().get(seg);
        }
        public static  int dwFlags$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3W$dwFlags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwFlags$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3W$dwFlags$VH().set(seg, x);
        }
        public static void dwFlags$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCE_DX3W$dwFlags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment tszName$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(32, 520));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIDEVICEOBJECTINSTANCE_DX3 extends DIDEVICEOBJECTINSTANCE_DX3A {

        /* package-private */ DIDEVICEOBJECTINSTANCE_DX3() {}
    }

    public static class DIDEVICEOBJECTINSTANCEA {

        /* package-private */ DIDEVICEOBJECTINSTANCEA() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment guidType$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(4, 16));
        }
        public static VarHandle dwOfs$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwOfs$VH();
        }
        public static  int dwOfs$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwOfs$VH().get(seg);
        }
        public static  int dwOfs$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwOfs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwOfs$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwOfs$VH().set(seg, x);
        }
        public static void dwOfs$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwOfs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwType$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwType$VH();
        }
        public static  int dwType$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwType$VH().get(seg);
        }
        public static  int dwType$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwType$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwType$VH().set(seg, x);
        }
        public static void dwType$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwFlags$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwFlags$VH();
        }
        public static  int dwFlags$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwFlags$VH().get(seg);
        }
        public static  int dwFlags$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwFlags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwFlags$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwFlags$VH().set(seg, x);
        }
        public static void dwFlags$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwFlags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment tszName$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(32, 260));
        }
        public static VarHandle dwFFMaxForce$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwFFMaxForce$VH();
        }
        public static  int dwFFMaxForce$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwFFMaxForce$VH().get(seg);
        }
        public static  int dwFFMaxForce$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwFFMaxForce$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwFFMaxForce$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwFFMaxForce$VH().set(seg, x);
        }
        public static void dwFFMaxForce$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwFFMaxForce$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwFFForceResolution$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwFFForceResolution$VH();
        }
        public static  int dwFFForceResolution$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwFFForceResolution$VH().get(seg);
        }
        public static  int dwFFForceResolution$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwFFForceResolution$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwFFForceResolution$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwFFForceResolution$VH().set(seg, x);
        }
        public static void dwFFForceResolution$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwFFForceResolution$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle wCollectionNumber$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wCollectionNumber$VH();
        }
        public static  short wCollectionNumber$get(MemorySegment seg) {
            return (short)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wCollectionNumber$VH().get(seg);
        }
        public static  short wCollectionNumber$get(MemorySegment seg, long index) {
            return (short)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wCollectionNumber$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void wCollectionNumber$set( MemorySegment seg, short x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wCollectionNumber$VH().set(seg, x);
        }
        public static void wCollectionNumber$set(MemorySegment seg, long index, short x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wCollectionNumber$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle wDesignatorIndex$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wDesignatorIndex$VH();
        }
        public static  short wDesignatorIndex$get(MemorySegment seg) {
            return (short)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wDesignatorIndex$VH().get(seg);
        }
        public static  short wDesignatorIndex$get(MemorySegment seg, long index) {
            return (short)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wDesignatorIndex$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void wDesignatorIndex$set( MemorySegment seg, short x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wDesignatorIndex$VH().set(seg, x);
        }
        public static void wDesignatorIndex$set(MemorySegment seg, long index, short x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wDesignatorIndex$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle wUsagePage$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wUsagePage$VH();
        }
        public static  short wUsagePage$get(MemorySegment seg) {
            return (short)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wUsagePage$VH().get(seg);
        }
        public static  short wUsagePage$get(MemorySegment seg, long index) {
            return (short)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wUsagePage$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void wUsagePage$set( MemorySegment seg, short x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wUsagePage$VH().set(seg, x);
        }
        public static void wUsagePage$set(MemorySegment seg, long index, short x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wUsagePage$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle wUsage$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wUsage$VH();
        }
        public static  short wUsage$get(MemorySegment seg) {
            return (short)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wUsage$VH().get(seg);
        }
        public static  short wUsage$get(MemorySegment seg, long index) {
            return (short)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wUsage$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void wUsage$set( MemorySegment seg, short x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wUsage$VH().set(seg, x);
        }
        public static void wUsage$set(MemorySegment seg, long index, short x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wUsage$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwDimension$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwDimension$VH();
        }
        public static  int dwDimension$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwDimension$VH().get(seg);
        }
        public static  int dwDimension$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwDimension$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwDimension$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwDimension$VH().set(seg, x);
        }
        public static void dwDimension$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$dwDimension$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle wExponent$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wExponent$VH();
        }
        public static  short wExponent$get(MemorySegment seg) {
            return (short)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wExponent$VH().get(seg);
        }
        public static  short wExponent$get(MemorySegment seg, long index) {
            return (short)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wExponent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void wExponent$set( MemorySegment seg, short x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wExponent$VH().set(seg, x);
        }
        public static void wExponent$set(MemorySegment seg, long index, short x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wExponent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle wReportId$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wReportId$VH();
        }
        public static  short wReportId$get(MemorySegment seg) {
            return (short)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wReportId$VH().get(seg);
        }
        public static  short wReportId$get(MemorySegment seg, long index) {
            return (short)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wReportId$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void wReportId$set( MemorySegment seg, short x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wReportId$VH().set(seg, x);
        }
        public static void wReportId$set(MemorySegment seg, long index, short x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEA$wReportId$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIDEVICEOBJECTINSTANCEW {

        /* package-private */ DIDEVICEOBJECTINSTANCEW() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment guidType$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(4, 16));
        }
        public static VarHandle dwOfs$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwOfs$VH();
        }
        public static  int dwOfs$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwOfs$VH().get(seg);
        }
        public static  int dwOfs$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwOfs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwOfs$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwOfs$VH().set(seg, x);
        }
        public static void dwOfs$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwOfs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwType$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwType$VH();
        }
        public static  int dwType$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwType$VH().get(seg);
        }
        public static  int dwType$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwType$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwType$VH().set(seg, x);
        }
        public static void dwType$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwFlags$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwFlags$VH();
        }
        public static  int dwFlags$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwFlags$VH().get(seg);
        }
        public static  int dwFlags$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwFlags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwFlags$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwFlags$VH().set(seg, x);
        }
        public static void dwFlags$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwFlags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment tszName$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(32, 520));
        }
        public static VarHandle dwFFMaxForce$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwFFMaxForce$VH();
        }
        public static  int dwFFMaxForce$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwFFMaxForce$VH().get(seg);
        }
        public static  int dwFFMaxForce$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwFFMaxForce$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwFFMaxForce$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwFFMaxForce$VH().set(seg, x);
        }
        public static void dwFFMaxForce$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwFFMaxForce$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwFFForceResolution$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwFFForceResolution$VH();
        }
        public static  int dwFFForceResolution$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwFFForceResolution$VH().get(seg);
        }
        public static  int dwFFForceResolution$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwFFForceResolution$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwFFForceResolution$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwFFForceResolution$VH().set(seg, x);
        }
        public static void dwFFForceResolution$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwFFForceResolution$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle wCollectionNumber$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wCollectionNumber$VH();
        }
        public static  short wCollectionNumber$get(MemorySegment seg) {
            return (short)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wCollectionNumber$VH().get(seg);
        }
        public static  short wCollectionNumber$get(MemorySegment seg, long index) {
            return (short)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wCollectionNumber$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void wCollectionNumber$set( MemorySegment seg, short x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wCollectionNumber$VH().set(seg, x);
        }
        public static void wCollectionNumber$set(MemorySegment seg, long index, short x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wCollectionNumber$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle wDesignatorIndex$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wDesignatorIndex$VH();
        }
        public static  short wDesignatorIndex$get(MemorySegment seg) {
            return (short)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wDesignatorIndex$VH().get(seg);
        }
        public static  short wDesignatorIndex$get(MemorySegment seg, long index) {
            return (short)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wDesignatorIndex$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void wDesignatorIndex$set( MemorySegment seg, short x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wDesignatorIndex$VH().set(seg, x);
        }
        public static void wDesignatorIndex$set(MemorySegment seg, long index, short x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wDesignatorIndex$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle wUsagePage$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wUsagePage$VH();
        }
        public static  short wUsagePage$get(MemorySegment seg) {
            return (short)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wUsagePage$VH().get(seg);
        }
        public static  short wUsagePage$get(MemorySegment seg, long index) {
            return (short)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wUsagePage$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void wUsagePage$set( MemorySegment seg, short x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wUsagePage$VH().set(seg, x);
        }
        public static void wUsagePage$set(MemorySegment seg, long index, short x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wUsagePage$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle wUsage$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wUsage$VH();
        }
        public static  short wUsage$get(MemorySegment seg) {
            return (short)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wUsage$VH().get(seg);
        }
        public static  short wUsage$get(MemorySegment seg, long index) {
            return (short)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wUsage$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void wUsage$set( MemorySegment seg, short x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wUsage$VH().set(seg, x);
        }
        public static void wUsage$set(MemorySegment seg, long index, short x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wUsage$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwDimension$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwDimension$VH();
        }
        public static  int dwDimension$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwDimension$VH().get(seg);
        }
        public static  int dwDimension$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwDimension$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwDimension$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwDimension$VH().set(seg, x);
        }
        public static void dwDimension$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$dwDimension$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle wExponent$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wExponent$VH();
        }
        public static  short wExponent$get(MemorySegment seg) {
            return (short)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wExponent$VH().get(seg);
        }
        public static  short wExponent$get(MemorySegment seg, long index) {
            return (short)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wExponent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void wExponent$set( MemorySegment seg, short x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wExponent$VH().set(seg, x);
        }
        public static void wExponent$set(MemorySegment seg, long index, short x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wExponent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle wReportId$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wReportId$VH();
        }
        public static  short wReportId$get(MemorySegment seg) {
            return (short)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wReportId$VH().get(seg);
        }
        public static  short wReportId$get(MemorySegment seg, long index) {
            return (short)dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wReportId$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void wReportId$set( MemorySegment seg, short x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wReportId$VH().set(seg, x);
        }
        public static void wReportId$set(MemorySegment seg, long index, short x) {
            dinput_h_constants_2.DIDEVICEOBJECTINSTANCEW$wReportId$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIDEVICEOBJECTINSTANCE extends DIDEVICEOBJECTINSTANCEA {

        /* package-private */ DIDEVICEOBJECTINSTANCE() {}
    }

    public static interface LPDIENUMDEVICEOBJECTSCALLBACKA {

        int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
        public static  MemorySegment allocate(LPDIENUMDEVICEOBJECTSCALLBACKA fi) {
            return RuntimeHelper.upcallStub(LPDIENUMDEVICEOBJECTSCALLBACKA.class, fi, dinput_h_constants_2.LPDIENUMDEVICEOBJECTSCALLBACKA$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
        }
        public static  MemorySegment allocate(LPDIENUMDEVICEOBJECTSCALLBACKA fi, NativeScope scope) {
            return allocate(fi).handoff(scope);
        }
    }

    public static interface LPDIENUMDEVICEOBJECTSCALLBACKW {

        int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
        public static  MemorySegment allocate(LPDIENUMDEVICEOBJECTSCALLBACKW fi) {
            return RuntimeHelper.upcallStub(LPDIENUMDEVICEOBJECTSCALLBACKW.class, fi, dinput_h_constants_2.LPDIENUMDEVICEOBJECTSCALLBACKW$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
        }
        public static  MemorySegment allocate(LPDIENUMDEVICEOBJECTSCALLBACKW fi, NativeScope scope) {
            return allocate(fi).handoff(scope);
        }
    }

    public static class DIPROPHEADER {

        /* package-private */ DIPROPHEADER() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.DIPROPHEADER$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_2.DIPROPHEADER$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIPROPHEADER$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIPROPHEADER$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIPROPHEADER$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIPROPHEADER$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwHeaderSize$VH() {
            return dinput_h_constants_2.DIPROPHEADER$dwHeaderSize$VH();
        }
        public static  int dwHeaderSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIPROPHEADER$dwHeaderSize$VH().get(seg);
        }
        public static  int dwHeaderSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIPROPHEADER$dwHeaderSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwHeaderSize$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIPROPHEADER$dwHeaderSize$VH().set(seg, x);
        }
        public static void dwHeaderSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIPROPHEADER$dwHeaderSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwObj$VH() {
            return dinput_h_constants_2.DIPROPHEADER$dwObj$VH();
        }
        public static  int dwObj$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIPROPHEADER$dwObj$VH().get(seg);
        }
        public static  int dwObj$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIPROPHEADER$dwObj$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwObj$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIPROPHEADER$dwObj$VH().set(seg, x);
        }
        public static void dwObj$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIPROPHEADER$dwObj$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwHow$VH() {
            return dinput_h_constants_2.DIPROPHEADER$dwHow$VH();
        }
        public static  int dwHow$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIPROPHEADER$dwHow$VH().get(seg);
        }
        public static  int dwHow$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIPROPHEADER$dwHow$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwHow$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIPROPHEADER$dwHow$VH().set(seg, x);
        }
        public static void dwHow$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIPROPHEADER$dwHow$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIPROPDWORD {

        /* package-private */ DIPROPDWORD() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.DIPROPDWORD$struct$LAYOUT();
        }
        public static MemorySegment diph$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 16));
        }
        public static VarHandle dwData$VH() {
            return dinput_h_constants_2.DIPROPDWORD$dwData$VH();
        }
        public static  int dwData$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIPROPDWORD$dwData$VH().get(seg);
        }
        public static  int dwData$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIPROPDWORD$dwData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwData$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIPROPDWORD$dwData$VH().set(seg, x);
        }
        public static void dwData$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIPROPDWORD$dwData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIPROPPOINTER {

        /* package-private */ DIPROPPOINTER() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.DIPROPPOINTER$struct$LAYOUT();
        }
        public static MemorySegment diph$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 16));
        }
        public static VarHandle uData$VH() {
            return dinput_h_constants_2.DIPROPPOINTER$uData$VH();
        }
        public static  long uData$get(MemorySegment seg) {
            return (long)dinput_h_constants_2.DIPROPPOINTER$uData$VH().get(seg);
        }
        public static  long uData$get(MemorySegment seg, long index) {
            return (long)dinput_h_constants_2.DIPROPPOINTER$uData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void uData$set( MemorySegment seg, long x) {
            dinput_h_constants_2.DIPROPPOINTER$uData$VH().set(seg, x);
        }
        public static void uData$set(MemorySegment seg, long index, long x) {
            dinput_h_constants_2.DIPROPPOINTER$uData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIPROPRANGE {

        /* package-private */ DIPROPRANGE() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.DIPROPRANGE$struct$LAYOUT();
        }
        public static MemorySegment diph$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 16));
        }
        public static VarHandle lMin$VH() {
            return dinput_h_constants_2.DIPROPRANGE$lMin$VH();
        }
        public static  int lMin$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIPROPRANGE$lMin$VH().get(seg);
        }
        public static  int lMin$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIPROPRANGE$lMin$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lMin$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIPROPRANGE$lMin$VH().set(seg, x);
        }
        public static void lMin$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIPROPRANGE$lMin$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lMax$VH() {
            return dinput_h_constants_2.DIPROPRANGE$lMax$VH();
        }
        public static  int lMax$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIPROPRANGE$lMax$VH().get(seg);
        }
        public static  int lMax$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIPROPRANGE$lMax$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lMax$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIPROPRANGE$lMax$VH().set(seg, x);
        }
        public static void lMax$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIPROPRANGE$lMax$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIPROPCAL {

        /* package-private */ DIPROPCAL() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.DIPROPCAL$struct$LAYOUT();
        }
        public static MemorySegment diph$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 16));
        }
        public static VarHandle lMin$VH() {
            return dinput_h_constants_2.DIPROPCAL$lMin$VH();
        }
        public static  int lMin$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIPROPCAL$lMin$VH().get(seg);
        }
        public static  int lMin$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIPROPCAL$lMin$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lMin$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIPROPCAL$lMin$VH().set(seg, x);
        }
        public static void lMin$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIPROPCAL$lMin$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lCenter$VH() {
            return dinput_h_constants_2.DIPROPCAL$lCenter$VH();
        }
        public static  int lCenter$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIPROPCAL$lCenter$VH().get(seg);
        }
        public static  int lCenter$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIPROPCAL$lCenter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lCenter$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIPROPCAL$lCenter$VH().set(seg, x);
        }
        public static void lCenter$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIPROPCAL$lCenter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lMax$VH() {
            return dinput_h_constants_2.DIPROPCAL$lMax$VH();
        }
        public static  int lMax$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIPROPCAL$lMax$VH().get(seg);
        }
        public static  int lMax$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIPROPCAL$lMax$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lMax$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIPROPCAL$lMax$VH().set(seg, x);
        }
        public static void lMax$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIPROPCAL$lMax$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIPROPCALPOV {

        /* package-private */ DIPROPCALPOV() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.DIPROPCALPOV$struct$LAYOUT();
        }
        public static MemorySegment diph$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 16));
        }
        public static MemorySegment lMin$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(16, 20));
        }
        public static MemorySegment lMax$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(36, 20));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIPROPGUIDANDPATH {

        /* package-private */ DIPROPGUIDANDPATH() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.DIPROPGUIDANDPATH$struct$LAYOUT();
        }
        public static MemorySegment diph$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 16));
        }
        public static MemorySegment guidClass$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(16, 16));
        }
        public static MemorySegment wszPath$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(32, 520));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIPROPSTRING {

        /* package-private */ DIPROPSTRING() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.DIPROPSTRING$struct$LAYOUT();
        }
        public static MemorySegment diph$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 16));
        }
        public static MemorySegment wsz$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(16, 520));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class _CPOINT {

        /* package-private */ _CPOINT() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2._CPOINT$struct$LAYOUT();
        }
        public static VarHandle lP$VH() {
            return dinput_h_constants_2._CPOINT$lP$VH();
        }
        public static  int lP$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._CPOINT$lP$VH().get(seg);
        }
        public static  int lP$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._CPOINT$lP$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lP$set( MemorySegment seg, int x) {
            dinput_h_constants_2._CPOINT$lP$VH().set(seg, x);
        }
        public static void lP$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._CPOINT$lP$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwLog$VH() {
            return dinput_h_constants_2._CPOINT$dwLog$VH();
        }
        public static  int dwLog$get(MemorySegment seg) {
            return (int)dinput_h_constants_2._CPOINT$dwLog$VH().get(seg);
        }
        public static  int dwLog$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2._CPOINT$dwLog$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwLog$set( MemorySegment seg, int x) {
            dinput_h_constants_2._CPOINT$dwLog$VH().set(seg, x);
        }
        public static void dwLog$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2._CPOINT$dwLog$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class CPOINT extends _CPOINT {

        /* package-private */ CPOINT() {}
    }

    public static class DIPROPCPOINTS {

        /* package-private */ DIPROPCPOINTS() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.DIPROPCPOINTS$struct$LAYOUT();
        }
        public static MemorySegment diph$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 16));
        }
        public static VarHandle dwCPointsNum$VH() {
            return dinput_h_constants_2.DIPROPCPOINTS$dwCPointsNum$VH();
        }
        public static  int dwCPointsNum$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIPROPCPOINTS$dwCPointsNum$VH().get(seg);
        }
        public static  int dwCPointsNum$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIPROPCPOINTS$dwCPointsNum$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwCPointsNum$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIPROPCPOINTS$dwCPointsNum$VH().set(seg, x);
        }
        public static void dwCPointsNum$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIPROPCPOINTS$dwCPointsNum$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment cp$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(20, 64));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIDEVICEOBJECTDATA_DX3 {

        /* package-private */ DIDEVICEOBJECTDATA_DX3() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.DIDEVICEOBJECTDATA_DX3$struct$LAYOUT();
        }
        public static VarHandle dwOfs$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTDATA_DX3$dwOfs$VH();
        }
        public static  int dwOfs$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTDATA_DX3$dwOfs$VH().get(seg);
        }
        public static  int dwOfs$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTDATA_DX3$dwOfs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwOfs$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTDATA_DX3$dwOfs$VH().set(seg, x);
        }
        public static void dwOfs$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTDATA_DX3$dwOfs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwData$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTDATA_DX3$dwData$VH();
        }
        public static  int dwData$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTDATA_DX3$dwData$VH().get(seg);
        }
        public static  int dwData$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTDATA_DX3$dwData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwData$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTDATA_DX3$dwData$VH().set(seg, x);
        }
        public static void dwData$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTDATA_DX3$dwData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwTimeStamp$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTDATA_DX3$dwTimeStamp$VH();
        }
        public static  int dwTimeStamp$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTDATA_DX3$dwTimeStamp$VH().get(seg);
        }
        public static  int dwTimeStamp$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTDATA_DX3$dwTimeStamp$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwTimeStamp$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTDATA_DX3$dwTimeStamp$VH().set(seg, x);
        }
        public static void dwTimeStamp$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTDATA_DX3$dwTimeStamp$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwSequence$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTDATA_DX3$dwSequence$VH();
        }
        public static  int dwSequence$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTDATA_DX3$dwSequence$VH().get(seg);
        }
        public static  int dwSequence$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTDATA_DX3$dwSequence$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSequence$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTDATA_DX3$dwSequence$VH().set(seg, x);
        }
        public static void dwSequence$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTDATA_DX3$dwSequence$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIDEVICEOBJECTDATA {

        /* package-private */ DIDEVICEOBJECTDATA() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.DIDEVICEOBJECTDATA$struct$LAYOUT();
        }
        public static VarHandle dwOfs$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTDATA$dwOfs$VH();
        }
        public static  int dwOfs$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTDATA$dwOfs$VH().get(seg);
        }
        public static  int dwOfs$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTDATA$dwOfs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwOfs$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTDATA$dwOfs$VH().set(seg, x);
        }
        public static void dwOfs$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTDATA$dwOfs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwData$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTDATA$dwData$VH();
        }
        public static  int dwData$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTDATA$dwData$VH().get(seg);
        }
        public static  int dwData$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTDATA$dwData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwData$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTDATA$dwData$VH().set(seg, x);
        }
        public static void dwData$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTDATA$dwData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwTimeStamp$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTDATA$dwTimeStamp$VH();
        }
        public static  int dwTimeStamp$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTDATA$dwTimeStamp$VH().get(seg);
        }
        public static  int dwTimeStamp$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTDATA$dwTimeStamp$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwTimeStamp$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTDATA$dwTimeStamp$VH().set(seg, x);
        }
        public static void dwTimeStamp$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTDATA$dwTimeStamp$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwSequence$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTDATA$dwSequence$VH();
        }
        public static  int dwSequence$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTDATA$dwSequence$VH().get(seg);
        }
        public static  int dwSequence$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEOBJECTDATA$dwSequence$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSequence$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTDATA$dwSequence$VH().set(seg, x);
        }
        public static void dwSequence$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEOBJECTDATA$dwSequence$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle uAppData$VH() {
            return dinput_h_constants_2.DIDEVICEOBJECTDATA$uAppData$VH();
        }
        public static  long uAppData$get(MemorySegment seg) {
            return (long)dinput_h_constants_2.DIDEVICEOBJECTDATA$uAppData$VH().get(seg);
        }
        public static  long uAppData$get(MemorySegment seg, long index) {
            return (long)dinput_h_constants_2.DIDEVICEOBJECTDATA$uAppData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void uAppData$set( MemorySegment seg, long x) {
            dinput_h_constants_2.DIDEVICEOBJECTDATA$uAppData$VH().set(seg, x);
        }
        public static void uAppData$set(MemorySegment seg, long index, long x) {
            dinput_h_constants_2.DIDEVICEOBJECTDATA$uAppData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIDEVICEINSTANCE_DX3A {

        /* package-private */ DIDEVICEINSTANCE_DX3A() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.DIDEVICEINSTANCE_DX3A$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_2.DIDEVICEINSTANCE_DX3A$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEINSTANCE_DX3A$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEINSTANCE_DX3A$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEINSTANCE_DX3A$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEINSTANCE_DX3A$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment guidInstance$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(4, 16));
        }
        public static MemorySegment guidProduct$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(20, 16));
        }
        public static VarHandle dwDevType$VH() {
            return dinput_h_constants_2.DIDEVICEINSTANCE_DX3A$dwDevType$VH();
        }
        public static  int dwDevType$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEINSTANCE_DX3A$dwDevType$VH().get(seg);
        }
        public static  int dwDevType$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEINSTANCE_DX3A$dwDevType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwDevType$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEINSTANCE_DX3A$dwDevType$VH().set(seg, x);
        }
        public static void dwDevType$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEINSTANCE_DX3A$dwDevType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment tszInstanceName$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(40, 260));
        }
        public static MemorySegment tszProductName$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(300, 260));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIDEVICEINSTANCE_DX3W {

        /* package-private */ DIDEVICEINSTANCE_DX3W() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.DIDEVICEINSTANCE_DX3W$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_2.DIDEVICEINSTANCE_DX3W$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEINSTANCE_DX3W$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEINSTANCE_DX3W$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEINSTANCE_DX3W$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEINSTANCE_DX3W$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment guidInstance$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(4, 16));
        }
        public static MemorySegment guidProduct$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(20, 16));
        }
        public static VarHandle dwDevType$VH() {
            return dinput_h_constants_2.DIDEVICEINSTANCE_DX3W$dwDevType$VH();
        }
        public static  int dwDevType$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEINSTANCE_DX3W$dwDevType$VH().get(seg);
        }
        public static  int dwDevType$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEINSTANCE_DX3W$dwDevType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwDevType$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEINSTANCE_DX3W$dwDevType$VH().set(seg, x);
        }
        public static void dwDevType$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEINSTANCE_DX3W$dwDevType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment tszInstanceName$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(40, 520));
        }
        public static MemorySegment tszProductName$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(560, 520));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIDEVICEINSTANCE_DX3 extends DIDEVICEINSTANCE_DX3A {

        /* package-private */ DIDEVICEINSTANCE_DX3() {}
    }

    public static class DIDEVICEINSTANCEA {

        /* package-private */ DIDEVICEINSTANCEA() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.DIDEVICEINSTANCEA$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_2.DIDEVICEINSTANCEA$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEINSTANCEA$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEINSTANCEA$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEINSTANCEA$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEINSTANCEA$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment guidInstance$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(4, 16));
        }
        public static MemorySegment guidProduct$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(20, 16));
        }
        public static VarHandle dwDevType$VH() {
            return dinput_h_constants_2.DIDEVICEINSTANCEA$dwDevType$VH();
        }
        public static  int dwDevType$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEINSTANCEA$dwDevType$VH().get(seg);
        }
        public static  int dwDevType$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEINSTANCEA$dwDevType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwDevType$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEINSTANCEA$dwDevType$VH().set(seg, x);
        }
        public static void dwDevType$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEINSTANCEA$dwDevType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment tszInstanceName$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(40, 260));
        }
        public static MemorySegment tszProductName$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(300, 260));
        }
        public static MemorySegment guidFFDriver$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(560, 16));
        }
        public static VarHandle wUsagePage$VH() {
            return dinput_h_constants_2.DIDEVICEINSTANCEA$wUsagePage$VH();
        }
        public static  short wUsagePage$get(MemorySegment seg) {
            return (short)dinput_h_constants_2.DIDEVICEINSTANCEA$wUsagePage$VH().get(seg);
        }
        public static  short wUsagePage$get(MemorySegment seg, long index) {
            return (short)dinput_h_constants_2.DIDEVICEINSTANCEA$wUsagePage$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void wUsagePage$set( MemorySegment seg, short x) {
            dinput_h_constants_2.DIDEVICEINSTANCEA$wUsagePage$VH().set(seg, x);
        }
        public static void wUsagePage$set(MemorySegment seg, long index, short x) {
            dinput_h_constants_2.DIDEVICEINSTANCEA$wUsagePage$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle wUsage$VH() {
            return dinput_h_constants_2.DIDEVICEINSTANCEA$wUsage$VH();
        }
        public static  short wUsage$get(MemorySegment seg) {
            return (short)dinput_h_constants_2.DIDEVICEINSTANCEA$wUsage$VH().get(seg);
        }
        public static  short wUsage$get(MemorySegment seg, long index) {
            return (short)dinput_h_constants_2.DIDEVICEINSTANCEA$wUsage$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void wUsage$set( MemorySegment seg, short x) {
            dinput_h_constants_2.DIDEVICEINSTANCEA$wUsage$VH().set(seg, x);
        }
        public static void wUsage$set(MemorySegment seg, long index, short x) {
            dinput_h_constants_2.DIDEVICEINSTANCEA$wUsage$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIDEVICEINSTANCEW {

        /* package-private */ DIDEVICEINSTANCEW() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.DIDEVICEINSTANCEW$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_2.DIDEVICEINSTANCEW$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEINSTANCEW$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEINSTANCEW$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEINSTANCEW$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEINSTANCEW$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment guidInstance$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(4, 16));
        }
        public static MemorySegment guidProduct$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(20, 16));
        }
        public static VarHandle dwDevType$VH() {
            return dinput_h_constants_2.DIDEVICEINSTANCEW$dwDevType$VH();
        }
        public static  int dwDevType$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIDEVICEINSTANCEW$dwDevType$VH().get(seg);
        }
        public static  int dwDevType$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIDEVICEINSTANCEW$dwDevType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwDevType$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIDEVICEINSTANCEW$dwDevType$VH().set(seg, x);
        }
        public static void dwDevType$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIDEVICEINSTANCEW$dwDevType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment tszInstanceName$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(40, 520));
        }
        public static MemorySegment tszProductName$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(560, 520));
        }
        public static MemorySegment guidFFDriver$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(1080, 16));
        }
        public static VarHandle wUsagePage$VH() {
            return dinput_h_constants_2.DIDEVICEINSTANCEW$wUsagePage$VH();
        }
        public static  short wUsagePage$get(MemorySegment seg) {
            return (short)dinput_h_constants_2.DIDEVICEINSTANCEW$wUsagePage$VH().get(seg);
        }
        public static  short wUsagePage$get(MemorySegment seg, long index) {
            return (short)dinput_h_constants_2.DIDEVICEINSTANCEW$wUsagePage$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void wUsagePage$set( MemorySegment seg, short x) {
            dinput_h_constants_2.DIDEVICEINSTANCEW$wUsagePage$VH().set(seg, x);
        }
        public static void wUsagePage$set(MemorySegment seg, long index, short x) {
            dinput_h_constants_2.DIDEVICEINSTANCEW$wUsagePage$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle wUsage$VH() {
            return dinput_h_constants_2.DIDEVICEINSTANCEW$wUsage$VH();
        }
        public static  short wUsage$get(MemorySegment seg) {
            return (short)dinput_h_constants_2.DIDEVICEINSTANCEW$wUsage$VH().get(seg);
        }
        public static  short wUsage$get(MemorySegment seg, long index) {
            return (short)dinput_h_constants_2.DIDEVICEINSTANCEW$wUsage$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void wUsage$set( MemorySegment seg, short x) {
            dinput_h_constants_2.DIDEVICEINSTANCEW$wUsage$VH().set(seg, x);
        }
        public static void wUsage$set(MemorySegment seg, long index, short x) {
            dinput_h_constants_2.DIDEVICEINSTANCEW$wUsage$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIDEVICEINSTANCE extends DIDEVICEINSTANCEA {

        /* package-private */ DIDEVICEINSTANCE() {}
    }

    public static class DIDEVICEINSTANCE$5 extends DIDEVICEINSTANCEA {

        /* package-private */ DIDEVICEINSTANCE$5() {}
    }

    public static class IDirectInputDeviceW {

        /* package-private */ IDirectInputDeviceW() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.IDirectInputDeviceW$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dinput_h_constants_2.IDirectInputDeviceW$lpVtbl$VH();
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceW$lpVtbl$VH().get(seg);
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceW$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceW$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceW$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInputDeviceWVtbl {

        /* package-private */ IDirectInputDeviceWVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.IDirectInputDeviceWVtbl$struct$LAYOUT();
        }
        public static interface QueryInterface$6 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(QueryInterface$6 fi) {
                return RuntimeHelper.upcallStub(QueryInterface$6.class, fi, dinput_h_constants_2.QueryInterface$6$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(QueryInterface$6 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle QueryInterface$VH() {
            return dinput_h_constants_2.IDirectInputDeviceWVtbl$QueryInterface$VH();
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$QueryInterface$VH().get(seg);
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface AddRef$7 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(AddRef$7 fi) {
                return RuntimeHelper.upcallStub(AddRef$7.class, fi, dinput_h_constants_2.AddRef$7$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(AddRef$7 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle AddRef$VH() {
            return dinput_h_constants_2.IDirectInputDeviceWVtbl$AddRef$VH();
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$AddRef$VH().get(seg);
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Release$8 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Release$8 fi) {
                return RuntimeHelper.upcallStub(Release$8.class, fi, dinput_h_constants_2.Release$8$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Release$8 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Release$VH() {
            return dinput_h_constants_2.IDirectInputDeviceWVtbl$Release$VH();
        }
        public static  MemoryAddress Release$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$Release$VH().get(seg);
        }
        public static  MemoryAddress Release$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetCapabilities {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetCapabilities fi) {
                return RuntimeHelper.upcallStub(GetCapabilities.class, fi, dinput_h_constants_2.GetCapabilities$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetCapabilities fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetCapabilities$VH() {
            return dinput_h_constants_2.IDirectInputDeviceWVtbl$GetCapabilities$VH();
        }
        public static  MemoryAddress GetCapabilities$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$GetCapabilities$VH().get(seg);
        }
        public static  MemoryAddress GetCapabilities$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$GetCapabilities$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCapabilities$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$GetCapabilities$VH().set(seg, x);
        }
        public static void GetCapabilities$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$GetCapabilities$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumObjects {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3);
            public static  MemorySegment allocate(EnumObjects fi) {
                return RuntimeHelper.upcallStub(EnumObjects.class, fi, dinput_h_constants_2.EnumObjects$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumObjects fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumObjects$VH() {
            return dinput_h_constants_2.IDirectInputDeviceWVtbl$EnumObjects$VH();
        }
        public static  MemoryAddress EnumObjects$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$EnumObjects$VH().get(seg);
        }
        public static  MemoryAddress EnumObjects$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$EnumObjects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumObjects$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$EnumObjects$VH().set(seg, x);
        }
        public static void EnumObjects$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$EnumObjects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetProperty {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(GetProperty fi) {
                return RuntimeHelper.upcallStub(GetProperty.class, fi, dinput_h_constants_2.GetProperty$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetProperty fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetProperty$VH() {
            return dinput_h_constants_2.IDirectInputDeviceWVtbl$GetProperty$VH();
        }
        public static  MemoryAddress GetProperty$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$GetProperty$VH().get(seg);
        }
        public static  MemoryAddress GetProperty$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$GetProperty$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetProperty$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$GetProperty$VH().set(seg, x);
        }
        public static void GetProperty$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$GetProperty$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetProperty {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(SetProperty fi) {
                return RuntimeHelper.upcallStub(SetProperty.class, fi, dinput_h_constants_2.SetProperty$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(SetProperty fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetProperty$VH() {
            return dinput_h_constants_2.IDirectInputDeviceWVtbl$SetProperty$VH();
        }
        public static  MemoryAddress SetProperty$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$SetProperty$VH().get(seg);
        }
        public static  MemoryAddress SetProperty$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$SetProperty$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetProperty$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$SetProperty$VH().set(seg, x);
        }
        public static void SetProperty$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$SetProperty$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Acquire {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Acquire fi) {
                return RuntimeHelper.upcallStub(Acquire.class, fi, dinput_h_constants_2.Acquire$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Acquire fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Acquire$VH() {
            return dinput_h_constants_2.IDirectInputDeviceWVtbl$Acquire$VH();
        }
        public static  MemoryAddress Acquire$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$Acquire$VH().get(seg);
        }
        public static  MemoryAddress Acquire$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$Acquire$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Acquire$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$Acquire$VH().set(seg, x);
        }
        public static void Acquire$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$Acquire$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Unacquire {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Unacquire fi) {
                return RuntimeHelper.upcallStub(Unacquire.class, fi, dinput_h_constants_2.Unacquire$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Unacquire fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Unacquire$VH() {
            return dinput_h_constants_2.IDirectInputDeviceWVtbl$Unacquire$VH();
        }
        public static  MemoryAddress Unacquire$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$Unacquire$VH().get(seg);
        }
        public static  MemoryAddress Unacquire$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$Unacquire$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Unacquire$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$Unacquire$VH().set(seg, x);
        }
        public static void Unacquire$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$Unacquire$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceState {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(GetDeviceState fi) {
                return RuntimeHelper.upcallStub(GetDeviceState.class, fi, dinput_h_constants_2.GetDeviceState$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetDeviceState fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceState$VH() {
            return dinput_h_constants_2.IDirectInputDeviceWVtbl$GetDeviceState$VH();
        }
        public static  MemoryAddress GetDeviceState$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$GetDeviceState$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceState$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$GetDeviceState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceState$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$GetDeviceState$VH().set(seg, x);
        }
        public static void GetDeviceState$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$GetDeviceState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceData {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(GetDeviceData fi) {
                return RuntimeHelper.upcallStub(GetDeviceData.class, fi, dinput_h_constants_2.GetDeviceData$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(GetDeviceData fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceData$VH() {
            return dinput_h_constants_2.IDirectInputDeviceWVtbl$GetDeviceData$VH();
        }
        public static  MemoryAddress GetDeviceData$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$GetDeviceData$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceData$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$GetDeviceData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceData$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$GetDeviceData$VH().set(seg, x);
        }
        public static void GetDeviceData$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$GetDeviceData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetDataFormat {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(SetDataFormat fi) {
                return RuntimeHelper.upcallStub(SetDataFormat.class, fi, dinput_h_constants_2.SetDataFormat$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(SetDataFormat fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetDataFormat$VH() {
            return dinput_h_constants_2.IDirectInputDeviceWVtbl$SetDataFormat$VH();
        }
        public static  MemoryAddress SetDataFormat$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$SetDataFormat$VH().get(seg);
        }
        public static  MemoryAddress SetDataFormat$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$SetDataFormat$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetDataFormat$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$SetDataFormat$VH().set(seg, x);
        }
        public static void SetDataFormat$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$SetDataFormat$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetEventNotification {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(SetEventNotification fi) {
                return RuntimeHelper.upcallStub(SetEventNotification.class, fi, dinput_h_constants_2.SetEventNotification$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(SetEventNotification fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetEventNotification$VH() {
            return dinput_h_constants_2.IDirectInputDeviceWVtbl$SetEventNotification$VH();
        }
        public static  MemoryAddress SetEventNotification$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$SetEventNotification$VH().get(seg);
        }
        public static  MemoryAddress SetEventNotification$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$SetEventNotification$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetEventNotification$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$SetEventNotification$VH().set(seg, x);
        }
        public static void SetEventNotification$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$SetEventNotification$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetCooperativeLevel {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(SetCooperativeLevel fi) {
                return RuntimeHelper.upcallStub(SetCooperativeLevel.class, fi, dinput_h_constants_2.SetCooperativeLevel$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(SetCooperativeLevel fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetCooperativeLevel$VH() {
            return dinput_h_constants_2.IDirectInputDeviceWVtbl$SetCooperativeLevel$VH();
        }
        public static  MemoryAddress SetCooperativeLevel$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$SetCooperativeLevel$VH().get(seg);
        }
        public static  MemoryAddress SetCooperativeLevel$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$SetCooperativeLevel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetCooperativeLevel$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$SetCooperativeLevel$VH().set(seg, x);
        }
        public static void SetCooperativeLevel$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$SetCooperativeLevel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetObjectInfo {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2, int x3);
            public static  MemorySegment allocate(GetObjectInfo fi) {
                return RuntimeHelper.upcallStub(GetObjectInfo.class, fi, dinput_h_constants_2.GetObjectInfo$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I");
            }
            public static  MemorySegment allocate(GetObjectInfo fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetObjectInfo$VH() {
            return dinput_h_constants_2.IDirectInputDeviceWVtbl$GetObjectInfo$VH();
        }
        public static  MemoryAddress GetObjectInfo$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$GetObjectInfo$VH().get(seg);
        }
        public static  MemoryAddress GetObjectInfo$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$GetObjectInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetObjectInfo$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$GetObjectInfo$VH().set(seg, x);
        }
        public static void GetObjectInfo$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$GetObjectInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceInfo {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetDeviceInfo fi) {
                return RuntimeHelper.upcallStub(GetDeviceInfo.class, fi, dinput_h_constants_2.GetDeviceInfo$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetDeviceInfo fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceInfo$VH() {
            return dinput_h_constants_2.IDirectInputDeviceWVtbl$GetDeviceInfo$VH();
        }
        public static  MemoryAddress GetDeviceInfo$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$GetDeviceInfo$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceInfo$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$GetDeviceInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceInfo$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$GetDeviceInfo$VH().set(seg, x);
        }
        public static void GetDeviceInfo$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$GetDeviceInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }

        public static interface RunControlPanel {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(RunControlPanel fi) {
                return RuntimeHelper.upcallStub(RunControlPanel.class, fi, dinput_h_constants_2.RunControlPanel$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(RunControlPanel fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle RunControlPanel$VH() {
            return dinput_h_constants_2.IDirectInputDeviceWVtbl$RunControlPanel$VH();
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$RunControlPanel$VH().get(seg);
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$RunControlPanel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RunControlPanel$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$RunControlPanel$VH().set(seg, x);
        }
        public static void RunControlPanel$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$RunControlPanel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Initialize$9 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2, jdk.incubator.foreign.MemoryAddress x3);
            public static  MemorySegment allocate(Initialize$9 fi) {
                return RuntimeHelper.upcallStub(Initialize$9.class, fi, dinput_h_constants_2.Initialize$9$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Initialize$9 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Initialize$VH() {
            return dinput_h_constants_2.IDirectInputDeviceWVtbl$Initialize$VH();
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$Initialize$VH().get(seg);
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceWVtbl$Initialize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Initialize$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$Initialize$VH().set(seg, x);
        }
        public static void Initialize$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceWVtbl$Initialize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInputDeviceA {

        /* package-private */ IDirectInputDeviceA() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.IDirectInputDeviceA$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dinput_h_constants_2.IDirectInputDeviceA$lpVtbl$VH();
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceA$lpVtbl$VH().get(seg);
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceA$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceA$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceA$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInputDeviceAVtbl {

        /* package-private */ IDirectInputDeviceAVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.IDirectInputDeviceAVtbl$struct$LAYOUT();
        }
        public static interface QueryInterface$10 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(QueryInterface$10 fi) {
                return RuntimeHelper.upcallStub(QueryInterface$10.class, fi, dinput_h_constants_2.QueryInterface$10$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(QueryInterface$10 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle QueryInterface$VH() {
            return dinput_h_constants_2.IDirectInputDeviceAVtbl$QueryInterface$VH();
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$QueryInterface$VH().get(seg);
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface AddRef$11 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(AddRef$11 fi) {
                return RuntimeHelper.upcallStub(AddRef$11.class, fi, dinput_h_constants_2.AddRef$11$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(AddRef$11 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle AddRef$VH() {
            return dinput_h_constants_2.IDirectInputDeviceAVtbl$AddRef$VH();
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$AddRef$VH().get(seg);
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Release$12 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Release$12 fi) {
                return RuntimeHelper.upcallStub(Release$12.class, fi, dinput_h_constants_2.Release$12$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Release$12 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Release$VH() {
            return dinput_h_constants_2.IDirectInputDeviceAVtbl$Release$VH();
        }
        public static  MemoryAddress Release$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$Release$VH().get(seg);
        }
        public static  MemoryAddress Release$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetCapabilities$13 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetCapabilities$13 fi) {
                return RuntimeHelper.upcallStub(GetCapabilities$13.class, fi, dinput_h_constants_2.GetCapabilities$13$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetCapabilities$13 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetCapabilities$VH() {
            return dinput_h_constants_2.IDirectInputDeviceAVtbl$GetCapabilities$VH();
        }
        public static  MemoryAddress GetCapabilities$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$GetCapabilities$VH().get(seg);
        }
        public static  MemoryAddress GetCapabilities$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$GetCapabilities$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCapabilities$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$GetCapabilities$VH().set(seg, x);
        }
        public static void GetCapabilities$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$GetCapabilities$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumObjects$14 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3);
            public static  MemorySegment allocate(EnumObjects$14 fi) {
                return RuntimeHelper.upcallStub(EnumObjects$14.class, fi, dinput_h_constants_2.EnumObjects$14$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumObjects$14 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumObjects$VH() {
            return dinput_h_constants_2.IDirectInputDeviceAVtbl$EnumObjects$VH();
        }
        public static  MemoryAddress EnumObjects$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$EnumObjects$VH().get(seg);
        }
        public static  MemoryAddress EnumObjects$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$EnumObjects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumObjects$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$EnumObjects$VH().set(seg, x);
        }
        public static void EnumObjects$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$EnumObjects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetProperty$15 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(GetProperty$15 fi) {
                return RuntimeHelper.upcallStub(GetProperty$15.class, fi, dinput_h_constants_2.GetProperty$15$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetProperty$15 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetProperty$VH() {
            return dinput_h_constants_2.IDirectInputDeviceAVtbl$GetProperty$VH();
        }
        public static  MemoryAddress GetProperty$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$GetProperty$VH().get(seg);
        }
        public static  MemoryAddress GetProperty$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$GetProperty$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetProperty$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$GetProperty$VH().set(seg, x);
        }
        public static void GetProperty$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$GetProperty$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetProperty$16 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(SetProperty$16 fi) {
                return RuntimeHelper.upcallStub(SetProperty$16.class, fi, dinput_h_constants_2.SetProperty$16$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(SetProperty$16 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetProperty$VH() {
            return dinput_h_constants_2.IDirectInputDeviceAVtbl$SetProperty$VH();
        }
        public static  MemoryAddress SetProperty$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$SetProperty$VH().get(seg);
        }
        public static  MemoryAddress SetProperty$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$SetProperty$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetProperty$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$SetProperty$VH().set(seg, x);
        }
        public static void SetProperty$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$SetProperty$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Acquire$17 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Acquire$17 fi) {
                return RuntimeHelper.upcallStub(Acquire$17.class, fi, dinput_h_constants_2.Acquire$17$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Acquire$17 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Acquire$VH() {
            return dinput_h_constants_2.IDirectInputDeviceAVtbl$Acquire$VH();
        }
        public static  MemoryAddress Acquire$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$Acquire$VH().get(seg);
        }
        public static  MemoryAddress Acquire$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$Acquire$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Acquire$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$Acquire$VH().set(seg, x);
        }
        public static void Acquire$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$Acquire$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Unacquire$18 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Unacquire$18 fi) {
                return RuntimeHelper.upcallStub(Unacquire$18.class, fi, dinput_h_constants_2.Unacquire$18$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Unacquire$18 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Unacquire$VH() {
            return dinput_h_constants_2.IDirectInputDeviceAVtbl$Unacquire$VH();
        }
        public static  MemoryAddress Unacquire$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$Unacquire$VH().get(seg);
        }
        public static  MemoryAddress Unacquire$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$Unacquire$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Unacquire$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$Unacquire$VH().set(seg, x);
        }
        public static void Unacquire$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$Unacquire$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceState$19 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(GetDeviceState$19 fi) {
                return RuntimeHelper.upcallStub(GetDeviceState$19.class, fi, dinput_h_constants_2.GetDeviceState$19$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetDeviceState$19 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceState$VH() {
            return dinput_h_constants_2.IDirectInputDeviceAVtbl$GetDeviceState$VH();
        }
        public static  MemoryAddress GetDeviceState$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$GetDeviceState$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceState$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$GetDeviceState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceState$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$GetDeviceState$VH().set(seg, x);
        }
        public static void GetDeviceState$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$GetDeviceState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceData$20 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(GetDeviceData$20 fi) {
                return RuntimeHelper.upcallStub(GetDeviceData$20.class, fi, dinput_h_constants_2.GetDeviceData$20$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(GetDeviceData$20 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceData$VH() {
            return dinput_h_constants_2.IDirectInputDeviceAVtbl$GetDeviceData$VH();
        }
        public static  MemoryAddress GetDeviceData$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$GetDeviceData$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceData$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$GetDeviceData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceData$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$GetDeviceData$VH().set(seg, x);
        }
        public static void GetDeviceData$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$GetDeviceData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetDataFormat$21 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(SetDataFormat$21 fi) {
                return RuntimeHelper.upcallStub(SetDataFormat$21.class, fi, dinput_h_constants_2.SetDataFormat$21$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(SetDataFormat$21 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetDataFormat$VH() {
            return dinput_h_constants_2.IDirectInputDeviceAVtbl$SetDataFormat$VH();
        }
        public static  MemoryAddress SetDataFormat$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$SetDataFormat$VH().get(seg);
        }
        public static  MemoryAddress SetDataFormat$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$SetDataFormat$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetDataFormat$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$SetDataFormat$VH().set(seg, x);
        }
        public static void SetDataFormat$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$SetDataFormat$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetEventNotification$22 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(SetEventNotification$22 fi) {
                return RuntimeHelper.upcallStub(SetEventNotification$22.class, fi, dinput_h_constants_2.SetEventNotification$22$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(SetEventNotification$22 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetEventNotification$VH() {
            return dinput_h_constants_2.IDirectInputDeviceAVtbl$SetEventNotification$VH();
        }
        public static  MemoryAddress SetEventNotification$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$SetEventNotification$VH().get(seg);
        }
        public static  MemoryAddress SetEventNotification$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$SetEventNotification$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetEventNotification$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$SetEventNotification$VH().set(seg, x);
        }
        public static void SetEventNotification$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$SetEventNotification$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetCooperativeLevel$23 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(SetCooperativeLevel$23 fi) {
                return RuntimeHelper.upcallStub(SetCooperativeLevel$23.class, fi, dinput_h_constants_2.SetCooperativeLevel$23$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(SetCooperativeLevel$23 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetCooperativeLevel$VH() {
            return dinput_h_constants_2.IDirectInputDeviceAVtbl$SetCooperativeLevel$VH();
        }
        public static  MemoryAddress SetCooperativeLevel$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$SetCooperativeLevel$VH().get(seg);
        }
        public static  MemoryAddress SetCooperativeLevel$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$SetCooperativeLevel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetCooperativeLevel$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$SetCooperativeLevel$VH().set(seg, x);
        }
        public static void SetCooperativeLevel$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$SetCooperativeLevel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetObjectInfo$24 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2, int x3);
            public static  MemorySegment allocate(GetObjectInfo$24 fi) {
                return RuntimeHelper.upcallStub(GetObjectInfo$24.class, fi, dinput_h_constants_2.GetObjectInfo$24$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I");
            }
            public static  MemorySegment allocate(GetObjectInfo$24 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetObjectInfo$VH() {
            return dinput_h_constants_2.IDirectInputDeviceAVtbl$GetObjectInfo$VH();
        }
        public static  MemoryAddress GetObjectInfo$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$GetObjectInfo$VH().get(seg);
        }
        public static  MemoryAddress GetObjectInfo$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$GetObjectInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetObjectInfo$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$GetObjectInfo$VH().set(seg, x);
        }
        public static void GetObjectInfo$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$GetObjectInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceInfo$25 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetDeviceInfo$25 fi) {
                return RuntimeHelper.upcallStub(GetDeviceInfo$25.class, fi, dinput_h_constants_2.GetDeviceInfo$25$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetDeviceInfo$25 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceInfo$VH() {
            return dinput_h_constants_2.IDirectInputDeviceAVtbl$GetDeviceInfo$VH();
        }
        public static  MemoryAddress GetDeviceInfo$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$GetDeviceInfo$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceInfo$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$GetDeviceInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceInfo$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$GetDeviceInfo$VH().set(seg, x);
        }
        public static void GetDeviceInfo$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$GetDeviceInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface RunControlPanel$26 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(RunControlPanel$26 fi) {
                return RuntimeHelper.upcallStub(RunControlPanel$26.class, fi, dinput_h_constants_2.RunControlPanel$26$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(RunControlPanel$26 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle RunControlPanel$VH() {
            return dinput_h_constants_2.IDirectInputDeviceAVtbl$RunControlPanel$VH();
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$RunControlPanel$VH().get(seg);
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$RunControlPanel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RunControlPanel$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$RunControlPanel$VH().set(seg, x);
        }
        public static void RunControlPanel$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$RunControlPanel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Initialize$27 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2, jdk.incubator.foreign.MemoryAddress x3);
            public static  MemorySegment allocate(Initialize$27 fi) {
                return RuntimeHelper.upcallStub(Initialize$27.class, fi, dinput_h_constants_2.Initialize$27$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Initialize$27 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Initialize$VH() {
            return dinput_h_constants_2.IDirectInputDeviceAVtbl$Initialize$VH();
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$Initialize$VH().get(seg);
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDeviceAVtbl$Initialize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Initialize$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$Initialize$VH().set(seg, x);
        }
        public static void Initialize$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDeviceAVtbl$Initialize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIEFFECTINFOA {

        /* package-private */ DIEFFECTINFOA() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.DIEFFECTINFOA$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_2.DIEFFECTINFOA$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIEFFECTINFOA$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIEFFECTINFOA$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIEFFECTINFOA$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIEFFECTINFOA$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment guid$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(4, 16));
        }
        public static VarHandle dwEffType$VH() {
            return dinput_h_constants_2.DIEFFECTINFOA$dwEffType$VH();
        }
        public static  int dwEffType$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIEFFECTINFOA$dwEffType$VH().get(seg);
        }
        public static  int dwEffType$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIEFFECTINFOA$dwEffType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwEffType$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIEFFECTINFOA$dwEffType$VH().set(seg, x);
        }
        public static void dwEffType$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIEFFECTINFOA$dwEffType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwStaticParams$VH() {
            return dinput_h_constants_2.DIEFFECTINFOA$dwStaticParams$VH();
        }
        public static  int dwStaticParams$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIEFFECTINFOA$dwStaticParams$VH().get(seg);
        }
        public static  int dwStaticParams$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIEFFECTINFOA$dwStaticParams$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwStaticParams$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIEFFECTINFOA$dwStaticParams$VH().set(seg, x);
        }
        public static void dwStaticParams$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIEFFECTINFOA$dwStaticParams$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwDynamicParams$VH() {
            return dinput_h_constants_2.DIEFFECTINFOA$dwDynamicParams$VH();
        }
        public static  int dwDynamicParams$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIEFFECTINFOA$dwDynamicParams$VH().get(seg);
        }
        public static  int dwDynamicParams$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIEFFECTINFOA$dwDynamicParams$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwDynamicParams$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIEFFECTINFOA$dwDynamicParams$VH().set(seg, x);
        }
        public static void dwDynamicParams$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIEFFECTINFOA$dwDynamicParams$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment tszName$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(32, 260));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIEFFECTINFOW {

        /* package-private */ DIEFFECTINFOW() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.DIEFFECTINFOW$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return dinput_h_constants_2.DIEFFECTINFOW$dwSize$VH();
        }
        public static  int dwSize$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIEFFECTINFOW$dwSize$VH().get(seg);
        }
        public static  int dwSize$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIEFFECTINFOW$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIEFFECTINFOW$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIEFFECTINFOW$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment guid$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(4, 16));
        }
        public static VarHandle dwEffType$VH() {
            return dinput_h_constants_2.DIEFFECTINFOW$dwEffType$VH();
        }
        public static  int dwEffType$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIEFFECTINFOW$dwEffType$VH().get(seg);
        }
        public static  int dwEffType$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIEFFECTINFOW$dwEffType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwEffType$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIEFFECTINFOW$dwEffType$VH().set(seg, x);
        }
        public static void dwEffType$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIEFFECTINFOW$dwEffType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwStaticParams$VH() {
            return dinput_h_constants_2.DIEFFECTINFOW$dwStaticParams$VH();
        }
        public static  int dwStaticParams$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIEFFECTINFOW$dwStaticParams$VH().get(seg);
        }
        public static  int dwStaticParams$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIEFFECTINFOW$dwStaticParams$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwStaticParams$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIEFFECTINFOW$dwStaticParams$VH().set(seg, x);
        }
        public static void dwStaticParams$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIEFFECTINFOW$dwStaticParams$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwDynamicParams$VH() {
            return dinput_h_constants_2.DIEFFECTINFOW$dwDynamicParams$VH();
        }
        public static  int dwDynamicParams$get(MemorySegment seg) {
            return (int)dinput_h_constants_2.DIEFFECTINFOW$dwDynamicParams$VH().get(seg);
        }
        public static  int dwDynamicParams$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_2.DIEFFECTINFOW$dwDynamicParams$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwDynamicParams$set( MemorySegment seg, int x) {
            dinput_h_constants_2.DIEFFECTINFOW$dwDynamicParams$VH().set(seg, x);
        }
        public static void dwDynamicParams$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_2.DIEFFECTINFOW$dwDynamicParams$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment tszName$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(32, 520));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIEFFECTINFO extends DIEFFECTINFOA {

        /* package-private */ DIEFFECTINFO() {}
    }

    public static interface LPDIENUMEFFECTSCALLBACKA {

        int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
        public static  MemorySegment allocate(LPDIENUMEFFECTSCALLBACKA fi) {
            return RuntimeHelper.upcallStub(LPDIENUMEFFECTSCALLBACKA.class, fi, dinput_h_constants_2.LPDIENUMEFFECTSCALLBACKA$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
        }
        public static  MemorySegment allocate(LPDIENUMEFFECTSCALLBACKA fi, NativeScope scope) {
            return allocate(fi).handoff(scope);
        }
    }

    public static interface LPDIENUMEFFECTSCALLBACKW {

        int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
        public static  MemorySegment allocate(LPDIENUMEFFECTSCALLBACKW fi) {
            return RuntimeHelper.upcallStub(LPDIENUMEFFECTSCALLBACKW.class, fi, dinput_h_constants_2.LPDIENUMEFFECTSCALLBACKW$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
        }
        public static  MemorySegment allocate(LPDIENUMEFFECTSCALLBACKW fi, NativeScope scope) {
            return allocate(fi).handoff(scope);
        }
    }

    public static interface LPDIENUMCREATEDEFFECTOBJECTSCALLBACK {

        int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
        public static  MemorySegment allocate(LPDIENUMCREATEDEFFECTOBJECTSCALLBACK fi) {
            return RuntimeHelper.upcallStub(LPDIENUMCREATEDEFFECTOBJECTSCALLBACK.class, fi, dinput_h_constants_2.LPDIENUMCREATEDEFFECTOBJECTSCALLBACK$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
        }
        public static  MemorySegment allocate(LPDIENUMCREATEDEFFECTOBJECTSCALLBACK fi, NativeScope scope) {
            return allocate(fi).handoff(scope);
        }
    }

    public static class IDirectInputDevice2W {

        /* package-private */ IDirectInputDevice2W() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.IDirectInputDevice2W$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dinput_h_constants_2.IDirectInputDevice2W$lpVtbl$VH();
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2W$lpVtbl$VH().get(seg);
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2W$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2W$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2W$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInputDevice2WVtbl {

        /* package-private */ IDirectInputDevice2WVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_2.IDirectInputDevice2WVtbl$struct$LAYOUT();
        }
        public static interface QueryInterface$28 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(QueryInterface$28 fi) {
                return RuntimeHelper.upcallStub(QueryInterface$28.class, fi, dinput_h_constants_2.QueryInterface$28$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(QueryInterface$28 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle QueryInterface$VH() {
            return dinput_h_constants_2.IDirectInputDevice2WVtbl$QueryInterface$VH();
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$QueryInterface$VH().get(seg);
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface AddRef$29 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(AddRef$29 fi) {
                return RuntimeHelper.upcallStub(AddRef$29.class, fi, dinput_h_constants_2.AddRef$29$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(AddRef$29 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle AddRef$VH() {
            return dinput_h_constants_2.IDirectInputDevice2WVtbl$AddRef$VH();
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$AddRef$VH().get(seg);
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Release$30 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Release$30 fi) {
                return RuntimeHelper.upcallStub(Release$30.class, fi, dinput_h_constants_2.Release$30$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Release$30 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Release$VH() {
            return dinput_h_constants_2.IDirectInputDevice2WVtbl$Release$VH();
        }
        public static  MemoryAddress Release$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$Release$VH().get(seg);
        }
        public static  MemoryAddress Release$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetCapabilities$31 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetCapabilities$31 fi) {
                return RuntimeHelper.upcallStub(GetCapabilities$31.class, fi, dinput_h_constants_2.GetCapabilities$31$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetCapabilities$31 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetCapabilities$VH() {
            return dinput_h_constants_2.IDirectInputDevice2WVtbl$GetCapabilities$VH();
        }
        public static  MemoryAddress GetCapabilities$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$GetCapabilities$VH().get(seg);
        }
        public static  MemoryAddress GetCapabilities$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$GetCapabilities$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCapabilities$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$GetCapabilities$VH().set(seg, x);
        }
        public static void GetCapabilities$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$GetCapabilities$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumObjects$32 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3);
            public static  MemorySegment allocate(EnumObjects$32 fi) {
                return RuntimeHelper.upcallStub(EnumObjects$32.class, fi, dinput_h_constants_2.EnumObjects$32$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumObjects$32 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumObjects$VH() {
            return dinput_h_constants_2.IDirectInputDevice2WVtbl$EnumObjects$VH();
        }
        public static  MemoryAddress EnumObjects$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$EnumObjects$VH().get(seg);
        }
        public static  MemoryAddress EnumObjects$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$EnumObjects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumObjects$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$EnumObjects$VH().set(seg, x);
        }
        public static void EnumObjects$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$EnumObjects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetProperty$33 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(GetProperty$33 fi) {
                return RuntimeHelper.upcallStub(GetProperty$33.class, fi, dinput_h_constants_2.GetProperty$33$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetProperty$33 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetProperty$VH() {
            return dinput_h_constants_2.IDirectInputDevice2WVtbl$GetProperty$VH();
        }
        public static  MemoryAddress GetProperty$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$GetProperty$VH().get(seg);
        }
        public static  MemoryAddress GetProperty$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$GetProperty$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetProperty$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$GetProperty$VH().set(seg, x);
        }
        public static void GetProperty$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$GetProperty$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetProperty$34 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(SetProperty$34 fi) {
                return RuntimeHelper.upcallStub(SetProperty$34.class, fi, dinput_h_constants_2.SetProperty$34$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(SetProperty$34 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetProperty$VH() {
            return dinput_h_constants_2.IDirectInputDevice2WVtbl$SetProperty$VH();
        }
        public static  MemoryAddress SetProperty$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$SetProperty$VH().get(seg);
        }
        public static  MemoryAddress SetProperty$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$SetProperty$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetProperty$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$SetProperty$VH().set(seg, x);
        }
        public static void SetProperty$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$SetProperty$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Acquire$35 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Acquire$35 fi) {
                return RuntimeHelper.upcallStub(Acquire$35.class, fi, dinput_h_constants_2.Acquire$35$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Acquire$35 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Acquire$VH() {
            return dinput_h_constants_2.IDirectInputDevice2WVtbl$Acquire$VH();
        }
        public static  MemoryAddress Acquire$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$Acquire$VH().get(seg);
        }
        public static  MemoryAddress Acquire$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$Acquire$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Acquire$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$Acquire$VH().set(seg, x);
        }
        public static void Acquire$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$Acquire$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Unacquire$36 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Unacquire$36 fi) {
                return RuntimeHelper.upcallStub(Unacquire$36.class, fi, dinput_h_constants_2.Unacquire$36$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Unacquire$36 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Unacquire$VH() {
            return dinput_h_constants_2.IDirectInputDevice2WVtbl$Unacquire$VH();
        }
        public static  MemoryAddress Unacquire$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$Unacquire$VH().get(seg);
        }
        public static  MemoryAddress Unacquire$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$Unacquire$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Unacquire$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$Unacquire$VH().set(seg, x);
        }
        public static void Unacquire$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$Unacquire$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceState$37 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(GetDeviceState$37 fi) {
                return RuntimeHelper.upcallStub(GetDeviceState$37.class, fi, dinput_h_constants_2.GetDeviceState$37$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetDeviceState$37 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceState$VH() {
            return dinput_h_constants_2.IDirectInputDevice2WVtbl$GetDeviceState$VH();
        }
        public static  MemoryAddress GetDeviceState$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$GetDeviceState$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceState$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$GetDeviceState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceState$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$GetDeviceState$VH().set(seg, x);
        }
        public static void GetDeviceState$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$GetDeviceState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceData$38 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(GetDeviceData$38 fi) {
                return RuntimeHelper.upcallStub(GetDeviceData$38.class, fi, dinput_h_constants_2.GetDeviceData$38$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(GetDeviceData$38 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceData$VH() {
            return dinput_h_constants_2.IDirectInputDevice2WVtbl$GetDeviceData$VH();
        }
        public static  MemoryAddress GetDeviceData$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$GetDeviceData$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceData$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$GetDeviceData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceData$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$GetDeviceData$VH().set(seg, x);
        }
        public static void GetDeviceData$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$GetDeviceData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetDataFormat$39 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(SetDataFormat$39 fi) {
                return RuntimeHelper.upcallStub(SetDataFormat$39.class, fi, dinput_h_constants_2.SetDataFormat$39$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(SetDataFormat$39 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetDataFormat$VH() {
            return dinput_h_constants_2.IDirectInputDevice2WVtbl$SetDataFormat$VH();
        }
        public static  MemoryAddress SetDataFormat$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$SetDataFormat$VH().get(seg);
        }
        public static  MemoryAddress SetDataFormat$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$SetDataFormat$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetDataFormat$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$SetDataFormat$VH().set(seg, x);
        }
        public static void SetDataFormat$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$SetDataFormat$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetEventNotification$40 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(SetEventNotification$40 fi) {
                return RuntimeHelper.upcallStub(SetEventNotification$40.class, fi, dinput_h_constants_2.SetEventNotification$40$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(SetEventNotification$40 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetEventNotification$VH() {
            return dinput_h_constants_2.IDirectInputDevice2WVtbl$SetEventNotification$VH();
        }
        public static  MemoryAddress SetEventNotification$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$SetEventNotification$VH().get(seg);
        }
        public static  MemoryAddress SetEventNotification$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_2.IDirectInputDevice2WVtbl$SetEventNotification$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetEventNotification$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$SetEventNotification$VH().set(seg, x);
        }
        public static void SetEventNotification$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_2.IDirectInputDevice2WVtbl$SetEventNotification$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetCooperativeLevel$41 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(SetCooperativeLevel$41 fi) {
                return RuntimeHelper.upcallStub(SetCooperativeLevel$41.class, fi, dinput_h_constants_3.SetCooperativeLevel$41$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(SetCooperativeLevel$41 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetCooperativeLevel$VH() {
            return dinput_h_constants_3.IDirectInputDevice2WVtbl$SetCooperativeLevel$VH();
        }
        public static  MemoryAddress SetCooperativeLevel$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$SetCooperativeLevel$VH().get(seg);
        }
        public static  MemoryAddress SetCooperativeLevel$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$SetCooperativeLevel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetCooperativeLevel$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$SetCooperativeLevel$VH().set(seg, x);
        }
        public static void SetCooperativeLevel$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$SetCooperativeLevel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetObjectInfo$42 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2, int x3);
            public static  MemorySegment allocate(GetObjectInfo$42 fi) {
                return RuntimeHelper.upcallStub(GetObjectInfo$42.class, fi, dinput_h_constants_3.GetObjectInfo$42$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I");
            }
            public static  MemorySegment allocate(GetObjectInfo$42 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetObjectInfo$VH() {
            return dinput_h_constants_3.IDirectInputDevice2WVtbl$GetObjectInfo$VH();
        }
        public static  MemoryAddress GetObjectInfo$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$GetObjectInfo$VH().get(seg);
        }
        public static  MemoryAddress GetObjectInfo$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$GetObjectInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetObjectInfo$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$GetObjectInfo$VH().set(seg, x);
        }
        public static void GetObjectInfo$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$GetObjectInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceInfo$43 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetDeviceInfo$43 fi) {
                return RuntimeHelper.upcallStub(GetDeviceInfo$43.class, fi, dinput_h_constants_3.GetDeviceInfo$43$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetDeviceInfo$43 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceInfo$VH() {
            return dinput_h_constants_3.IDirectInputDevice2WVtbl$GetDeviceInfo$VH();
        }
        public static  MemoryAddress GetDeviceInfo$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$GetDeviceInfo$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceInfo$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$GetDeviceInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceInfo$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$GetDeviceInfo$VH().set(seg, x);
        }
        public static void GetDeviceInfo$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$GetDeviceInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface RunControlPanel$44 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(RunControlPanel$44 fi) {
                return RuntimeHelper.upcallStub(RunControlPanel$44.class, fi, dinput_h_constants_3.RunControlPanel$44$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(RunControlPanel$44 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle RunControlPanel$VH() {
            return dinput_h_constants_3.IDirectInputDevice2WVtbl$RunControlPanel$VH();
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$RunControlPanel$VH().get(seg);
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$RunControlPanel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RunControlPanel$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$RunControlPanel$VH().set(seg, x);
        }
        public static void RunControlPanel$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$RunControlPanel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Initialize$45 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2, jdk.incubator.foreign.MemoryAddress x3);
            public static  MemorySegment allocate(Initialize$45 fi) {
                return RuntimeHelper.upcallStub(Initialize$45.class, fi, dinput_h_constants_3.Initialize$45$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Initialize$45 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Initialize$VH() {
            return dinput_h_constants_3.IDirectInputDevice2WVtbl$Initialize$VH();
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$Initialize$VH().get(seg);
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$Initialize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Initialize$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$Initialize$VH().set(seg, x);
        }
        public static void Initialize$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$Initialize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface CreateEffect {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, jdk.incubator.foreign.MemoryAddress x4);
            public static  MemorySegment allocate(CreateEffect fi) {
                return RuntimeHelper.upcallStub(CreateEffect.class, fi, dinput_h_constants_3.CreateEffect$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(CreateEffect fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle CreateEffect$VH() {
            return dinput_h_constants_3.IDirectInputDevice2WVtbl$CreateEffect$VH();
        }
        public static  MemoryAddress CreateEffect$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$CreateEffect$VH().get(seg);
        }
        public static  MemoryAddress CreateEffect$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$CreateEffect$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateEffect$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$CreateEffect$VH().set(seg, x);
        }
        public static void CreateEffect$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$CreateEffect$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumEffects {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3);
            public static  MemorySegment allocate(EnumEffects fi) {
                return RuntimeHelper.upcallStub(EnumEffects.class, fi, dinput_h_constants_3.EnumEffects$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumEffects fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumEffects$VH() {
            return dinput_h_constants_3.IDirectInputDevice2WVtbl$EnumEffects$VH();
        }
        public static  MemoryAddress EnumEffects$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$EnumEffects$VH().get(seg);
        }
        public static  MemoryAddress EnumEffects$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$EnumEffects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumEffects$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$EnumEffects$VH().set(seg, x);
        }
        public static void EnumEffects$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$EnumEffects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetEffectInfo {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(GetEffectInfo fi) {
                return RuntimeHelper.upcallStub(GetEffectInfo.class, fi, dinput_h_constants_3.GetEffectInfo$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetEffectInfo fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetEffectInfo$VH() {
            return dinput_h_constants_3.IDirectInputDevice2WVtbl$GetEffectInfo$VH();
        }
        public static  MemoryAddress GetEffectInfo$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$GetEffectInfo$VH().get(seg);
        }
        public static  MemoryAddress GetEffectInfo$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$GetEffectInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetEffectInfo$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$GetEffectInfo$VH().set(seg, x);
        }
        public static void GetEffectInfo$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$GetEffectInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetForceFeedbackState {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetForceFeedbackState fi) {
                return RuntimeHelper.upcallStub(GetForceFeedbackState.class, fi, dinput_h_constants_3.GetForceFeedbackState$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetForceFeedbackState fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetForceFeedbackState$VH() {
            return dinput_h_constants_3.IDirectInputDevice2WVtbl$GetForceFeedbackState$VH();
        }
        public static  MemoryAddress GetForceFeedbackState$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$GetForceFeedbackState$VH().get(seg);
        }
        public static  MemoryAddress GetForceFeedbackState$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$GetForceFeedbackState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetForceFeedbackState$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$GetForceFeedbackState$VH().set(seg, x);
        }
        public static void GetForceFeedbackState$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$GetForceFeedbackState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SendForceFeedbackCommand {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1);
            public static  MemorySegment allocate(SendForceFeedbackCommand fi) {
                return RuntimeHelper.upcallStub(SendForceFeedbackCommand.class, fi, dinput_h_constants_3.SendForceFeedbackCommand$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(SendForceFeedbackCommand fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SendForceFeedbackCommand$VH() {
            return dinput_h_constants_3.IDirectInputDevice2WVtbl$SendForceFeedbackCommand$VH();
        }
        public static  MemoryAddress SendForceFeedbackCommand$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$SendForceFeedbackCommand$VH().get(seg);
        }
        public static  MemoryAddress SendForceFeedbackCommand$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$SendForceFeedbackCommand$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SendForceFeedbackCommand$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$SendForceFeedbackCommand$VH().set(seg, x);
        }
        public static void SendForceFeedbackCommand$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$SendForceFeedbackCommand$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumCreatedEffectObjects {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3);
            public static  MemorySegment allocate(EnumCreatedEffectObjects fi) {
                return RuntimeHelper.upcallStub(EnumCreatedEffectObjects.class, fi, dinput_h_constants_3.EnumCreatedEffectObjects$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumCreatedEffectObjects fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumCreatedEffectObjects$VH() {
            return dinput_h_constants_3.IDirectInputDevice2WVtbl$EnumCreatedEffectObjects$VH();
        }
        public static  MemoryAddress EnumCreatedEffectObjects$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$EnumCreatedEffectObjects$VH().get(seg);
        }
        public static  MemoryAddress EnumCreatedEffectObjects$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$EnumCreatedEffectObjects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumCreatedEffectObjects$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$EnumCreatedEffectObjects$VH().set(seg, x);
        }
        public static void EnumCreatedEffectObjects$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$EnumCreatedEffectObjects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Escape$46 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(Escape$46 fi) {
                return RuntimeHelper.upcallStub(Escape$46.class, fi, dinput_h_constants_3.Escape$46$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Escape$46 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Escape$VH() {
            return dinput_h_constants_3.IDirectInputDevice2WVtbl$Escape$VH();
        }
        public static  MemoryAddress Escape$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$Escape$VH().get(seg);
        }
        public static  MemoryAddress Escape$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$Escape$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Escape$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$Escape$VH().set(seg, x);
        }
        public static void Escape$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$Escape$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Poll {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Poll fi) {
                return RuntimeHelper.upcallStub(Poll.class, fi, dinput_h_constants_3.Poll$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Poll fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Poll$VH() {
            return dinput_h_constants_3.IDirectInputDevice2WVtbl$Poll$VH();
        }
        public static  MemoryAddress Poll$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$Poll$VH().get(seg);
        }
        public static  MemoryAddress Poll$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$Poll$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Poll$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$Poll$VH().set(seg, x);
        }
        public static void Poll$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$Poll$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SendDeviceData {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(SendDeviceData fi) {
                return RuntimeHelper.upcallStub(SendDeviceData.class, fi, dinput_h_constants_3.SendDeviceData$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(SendDeviceData fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SendDeviceData$VH() {
            return dinput_h_constants_3.IDirectInputDevice2WVtbl$SendDeviceData$VH();
        }
        public static  MemoryAddress SendDeviceData$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$SendDeviceData$VH().get(seg);
        }
        public static  MemoryAddress SendDeviceData$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2WVtbl$SendDeviceData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SendDeviceData$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$SendDeviceData$VH().set(seg, x);
        }
        public static void SendDeviceData$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2WVtbl$SendDeviceData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInputDevice2A {

        /* package-private */ IDirectInputDevice2A() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_3.IDirectInputDevice2A$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dinput_h_constants_3.IDirectInputDevice2A$lpVtbl$VH();
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2A$lpVtbl$VH().get(seg);
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2A$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2A$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2A$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInputDevice2AVtbl {

        /* package-private */ IDirectInputDevice2AVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$struct$LAYOUT();
        }
        public static interface QueryInterface$47 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(QueryInterface$47 fi) {
                return RuntimeHelper.upcallStub(QueryInterface$47.class, fi, dinput_h_constants_3.QueryInterface$47$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(QueryInterface$47 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle QueryInterface$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$QueryInterface$VH();
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$QueryInterface$VH().get(seg);
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface AddRef$48 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(AddRef$48 fi) {
                return RuntimeHelper.upcallStub(AddRef$48.class, fi, dinput_h_constants_3.AddRef$48$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(AddRef$48 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle AddRef$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$AddRef$VH();
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$AddRef$VH().get(seg);
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Release$49 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Release$49 fi) {
                return RuntimeHelper.upcallStub(Release$49.class, fi, dinput_h_constants_3.Release$49$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Release$49 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Release$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$Release$VH();
        }
        public static  MemoryAddress Release$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$Release$VH().get(seg);
        }
        public static  MemoryAddress Release$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetCapabilities$50 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetCapabilities$50 fi) {
                return RuntimeHelper.upcallStub(GetCapabilities$50.class, fi, dinput_h_constants_3.GetCapabilities$50$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetCapabilities$50 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetCapabilities$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$GetCapabilities$VH();
        }
        public static  MemoryAddress GetCapabilities$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$GetCapabilities$VH().get(seg);
        }
        public static  MemoryAddress GetCapabilities$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$GetCapabilities$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCapabilities$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$GetCapabilities$VH().set(seg, x);
        }
        public static void GetCapabilities$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$GetCapabilities$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumObjects$51 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3);
            public static  MemorySegment allocate(EnumObjects$51 fi) {
                return RuntimeHelper.upcallStub(EnumObjects$51.class, fi, dinput_h_constants_3.EnumObjects$51$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumObjects$51 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumObjects$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$EnumObjects$VH();
        }
        public static  MemoryAddress EnumObjects$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$EnumObjects$VH().get(seg);
        }
        public static  MemoryAddress EnumObjects$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$EnumObjects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumObjects$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$EnumObjects$VH().set(seg, x);
        }
        public static void EnumObjects$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$EnumObjects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetProperty$52 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(GetProperty$52 fi) {
                return RuntimeHelper.upcallStub(GetProperty$52.class, fi, dinput_h_constants_3.GetProperty$52$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetProperty$52 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetProperty$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$GetProperty$VH();
        }
        public static  MemoryAddress GetProperty$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$GetProperty$VH().get(seg);
        }
        public static  MemoryAddress GetProperty$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$GetProperty$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetProperty$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$GetProperty$VH().set(seg, x);
        }
        public static void GetProperty$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$GetProperty$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetProperty$53 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(SetProperty$53 fi) {
                return RuntimeHelper.upcallStub(SetProperty$53.class, fi, dinput_h_constants_3.SetProperty$53$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(SetProperty$53 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetProperty$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$SetProperty$VH();
        }
        public static  MemoryAddress SetProperty$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$SetProperty$VH().get(seg);
        }
        public static  MemoryAddress SetProperty$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$SetProperty$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetProperty$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$SetProperty$VH().set(seg, x);
        }
        public static void SetProperty$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$SetProperty$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Acquire$54 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Acquire$54 fi) {
                return RuntimeHelper.upcallStub(Acquire$54.class, fi, dinput_h_constants_3.Acquire$54$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Acquire$54 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Acquire$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$Acquire$VH();
        }
        public static  MemoryAddress Acquire$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$Acquire$VH().get(seg);
        }
        public static  MemoryAddress Acquire$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$Acquire$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Acquire$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$Acquire$VH().set(seg, x);
        }
        public static void Acquire$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$Acquire$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Unacquire$55 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Unacquire$55 fi) {
                return RuntimeHelper.upcallStub(Unacquire$55.class, fi, dinput_h_constants_3.Unacquire$55$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Unacquire$55 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Unacquire$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$Unacquire$VH();
        }
        public static  MemoryAddress Unacquire$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$Unacquire$VH().get(seg);
        }
        public static  MemoryAddress Unacquire$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$Unacquire$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Unacquire$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$Unacquire$VH().set(seg, x);
        }
        public static void Unacquire$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$Unacquire$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceState$56 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(GetDeviceState$56 fi) {
                return RuntimeHelper.upcallStub(GetDeviceState$56.class, fi, dinput_h_constants_3.GetDeviceState$56$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetDeviceState$56 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceState$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$GetDeviceState$VH();
        }
        public static  MemoryAddress GetDeviceState$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$GetDeviceState$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceState$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$GetDeviceState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceState$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$GetDeviceState$VH().set(seg, x);
        }
        public static void GetDeviceState$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$GetDeviceState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceData$57 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(GetDeviceData$57 fi) {
                return RuntimeHelper.upcallStub(GetDeviceData$57.class, fi, dinput_h_constants_3.GetDeviceData$57$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(GetDeviceData$57 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceData$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$GetDeviceData$VH();
        }
        public static  MemoryAddress GetDeviceData$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$GetDeviceData$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceData$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$GetDeviceData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceData$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$GetDeviceData$VH().set(seg, x);
        }
        public static void GetDeviceData$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$GetDeviceData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetDataFormat$58 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(SetDataFormat$58 fi) {
                return RuntimeHelper.upcallStub(SetDataFormat$58.class, fi, dinput_h_constants_3.SetDataFormat$58$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(SetDataFormat$58 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetDataFormat$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$SetDataFormat$VH();
        }
        public static  MemoryAddress SetDataFormat$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$SetDataFormat$VH().get(seg);
        }
        public static  MemoryAddress SetDataFormat$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$SetDataFormat$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetDataFormat$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$SetDataFormat$VH().set(seg, x);
        }
        public static void SetDataFormat$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$SetDataFormat$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetEventNotification$59 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(SetEventNotification$59 fi) {
                return RuntimeHelper.upcallStub(SetEventNotification$59.class, fi, dinput_h_constants_3.SetEventNotification$59$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(SetEventNotification$59 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetEventNotification$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$SetEventNotification$VH();
        }
        public static  MemoryAddress SetEventNotification$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$SetEventNotification$VH().get(seg);
        }
        public static  MemoryAddress SetEventNotification$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$SetEventNotification$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetEventNotification$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$SetEventNotification$VH().set(seg, x);
        }
        public static void SetEventNotification$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$SetEventNotification$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetCooperativeLevel$60 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(SetCooperativeLevel$60 fi) {
                return RuntimeHelper.upcallStub(SetCooperativeLevel$60.class, fi, dinput_h_constants_3.SetCooperativeLevel$60$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(SetCooperativeLevel$60 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetCooperativeLevel$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$SetCooperativeLevel$VH();
        }
        public static  MemoryAddress SetCooperativeLevel$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$SetCooperativeLevel$VH().get(seg);
        }
        public static  MemoryAddress SetCooperativeLevel$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$SetCooperativeLevel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetCooperativeLevel$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$SetCooperativeLevel$VH().set(seg, x);
        }
        public static void SetCooperativeLevel$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$SetCooperativeLevel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetObjectInfo$61 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2, int x3);
            public static  MemorySegment allocate(GetObjectInfo$61 fi) {
                return RuntimeHelper.upcallStub(GetObjectInfo$61.class, fi, dinput_h_constants_3.GetObjectInfo$61$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I");
            }
            public static  MemorySegment allocate(GetObjectInfo$61 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetObjectInfo$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$GetObjectInfo$VH();
        }
        public static  MemoryAddress GetObjectInfo$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$GetObjectInfo$VH().get(seg);
        }
        public static  MemoryAddress GetObjectInfo$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$GetObjectInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetObjectInfo$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$GetObjectInfo$VH().set(seg, x);
        }
        public static void GetObjectInfo$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$GetObjectInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceInfo$62 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetDeviceInfo$62 fi) {
                return RuntimeHelper.upcallStub(GetDeviceInfo$62.class, fi, dinput_h_constants_3.GetDeviceInfo$62$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetDeviceInfo$62 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceInfo$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$GetDeviceInfo$VH();
        }
        public static  MemoryAddress GetDeviceInfo$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$GetDeviceInfo$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceInfo$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$GetDeviceInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceInfo$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$GetDeviceInfo$VH().set(seg, x);
        }
        public static void GetDeviceInfo$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$GetDeviceInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface RunControlPanel$63 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(RunControlPanel$63 fi) {
                return RuntimeHelper.upcallStub(RunControlPanel$63.class, fi, dinput_h_constants_3.RunControlPanel$63$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(RunControlPanel$63 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle RunControlPanel$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$RunControlPanel$VH();
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$RunControlPanel$VH().get(seg);
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$RunControlPanel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RunControlPanel$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$RunControlPanel$VH().set(seg, x);
        }
        public static void RunControlPanel$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$RunControlPanel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Initialize$64 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2, jdk.incubator.foreign.MemoryAddress x3);
            public static  MemorySegment allocate(Initialize$64 fi) {
                return RuntimeHelper.upcallStub(Initialize$64.class, fi, dinput_h_constants_3.Initialize$64$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Initialize$64 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Initialize$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$Initialize$VH();
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$Initialize$VH().get(seg);
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$Initialize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Initialize$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$Initialize$VH().set(seg, x);
        }
        public static void Initialize$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$Initialize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface CreateEffect$65 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, jdk.incubator.foreign.MemoryAddress x4);
            public static  MemorySegment allocate(CreateEffect$65 fi) {
                return RuntimeHelper.upcallStub(CreateEffect$65.class, fi, dinput_h_constants_3.CreateEffect$65$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(CreateEffect$65 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle CreateEffect$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$CreateEffect$VH();
        }
        public static  MemoryAddress CreateEffect$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$CreateEffect$VH().get(seg);
        }
        public static  MemoryAddress CreateEffect$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$CreateEffect$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateEffect$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$CreateEffect$VH().set(seg, x);
        }
        public static void CreateEffect$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$CreateEffect$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumEffects$66 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3);
            public static  MemorySegment allocate(EnumEffects$66 fi) {
                return RuntimeHelper.upcallStub(EnumEffects$66.class, fi, dinput_h_constants_3.EnumEffects$66$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumEffects$66 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumEffects$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$EnumEffects$VH();
        }
        public static  MemoryAddress EnumEffects$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$EnumEffects$VH().get(seg);
        }
        public static  MemoryAddress EnumEffects$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$EnumEffects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumEffects$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$EnumEffects$VH().set(seg, x);
        }
        public static void EnumEffects$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$EnumEffects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetEffectInfo$67 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(GetEffectInfo$67 fi) {
                return RuntimeHelper.upcallStub(GetEffectInfo$67.class, fi, dinput_h_constants_3.GetEffectInfo$67$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetEffectInfo$67 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetEffectInfo$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$GetEffectInfo$VH();
        }
        public static  MemoryAddress GetEffectInfo$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$GetEffectInfo$VH().get(seg);
        }
        public static  MemoryAddress GetEffectInfo$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$GetEffectInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetEffectInfo$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$GetEffectInfo$VH().set(seg, x);
        }
        public static void GetEffectInfo$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$GetEffectInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetForceFeedbackState$68 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetForceFeedbackState$68 fi) {
                return RuntimeHelper.upcallStub(GetForceFeedbackState$68.class, fi, dinput_h_constants_3.GetForceFeedbackState$68$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetForceFeedbackState$68 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetForceFeedbackState$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$GetForceFeedbackState$VH();
        }
        public static  MemoryAddress GetForceFeedbackState$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$GetForceFeedbackState$VH().get(seg);
        }
        public static  MemoryAddress GetForceFeedbackState$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$GetForceFeedbackState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetForceFeedbackState$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$GetForceFeedbackState$VH().set(seg, x);
        }
        public static void GetForceFeedbackState$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$GetForceFeedbackState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SendForceFeedbackCommand$69 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1);
            public static  MemorySegment allocate(SendForceFeedbackCommand$69 fi) {
                return RuntimeHelper.upcallStub(SendForceFeedbackCommand$69.class, fi, dinput_h_constants_3.SendForceFeedbackCommand$69$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(SendForceFeedbackCommand$69 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SendForceFeedbackCommand$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$SendForceFeedbackCommand$VH();
        }
        public static  MemoryAddress SendForceFeedbackCommand$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$SendForceFeedbackCommand$VH().get(seg);
        }
        public static  MemoryAddress SendForceFeedbackCommand$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$SendForceFeedbackCommand$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SendForceFeedbackCommand$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$SendForceFeedbackCommand$VH().set(seg, x);
        }
        public static void SendForceFeedbackCommand$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$SendForceFeedbackCommand$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumCreatedEffectObjects$70 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3);
            public static  MemorySegment allocate(EnumCreatedEffectObjects$70 fi) {
                return RuntimeHelper.upcallStub(EnumCreatedEffectObjects$70.class, fi, dinput_h_constants_3.EnumCreatedEffectObjects$70$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumCreatedEffectObjects$70 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumCreatedEffectObjects$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$EnumCreatedEffectObjects$VH();
        }
        public static  MemoryAddress EnumCreatedEffectObjects$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$EnumCreatedEffectObjects$VH().get(seg);
        }
        public static  MemoryAddress EnumCreatedEffectObjects$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$EnumCreatedEffectObjects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumCreatedEffectObjects$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$EnumCreatedEffectObjects$VH().set(seg, x);
        }
        public static void EnumCreatedEffectObjects$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$EnumCreatedEffectObjects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Escape$71 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(Escape$71 fi) {
                return RuntimeHelper.upcallStub(Escape$71.class, fi, dinput_h_constants_3.Escape$71$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Escape$71 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Escape$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$Escape$VH();
        }
        public static  MemoryAddress Escape$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$Escape$VH().get(seg);
        }
        public static  MemoryAddress Escape$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$Escape$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Escape$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$Escape$VH().set(seg, x);
        }
        public static void Escape$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$Escape$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Poll$72 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Poll$72 fi) {
                return RuntimeHelper.upcallStub(Poll$72.class, fi, dinput_h_constants_3.Poll$72$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Poll$72 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Poll$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$Poll$VH();
        }
        public static  MemoryAddress Poll$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$Poll$VH().get(seg);
        }
        public static  MemoryAddress Poll$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$Poll$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Poll$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$Poll$VH().set(seg, x);
        }
        public static void Poll$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$Poll$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SendDeviceData$73 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(SendDeviceData$73 fi) {
                return RuntimeHelper.upcallStub(SendDeviceData$73.class, fi, dinput_h_constants_3.SendDeviceData$73$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(SendDeviceData$73 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SendDeviceData$VH() {
            return dinput_h_constants_3.IDirectInputDevice2AVtbl$SendDeviceData$VH();
        }
        public static  MemoryAddress SendDeviceData$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$SendDeviceData$VH().get(seg);
        }
        public static  MemoryAddress SendDeviceData$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice2AVtbl$SendDeviceData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SendDeviceData$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$SendDeviceData$VH().set(seg, x);
        }
        public static void SendDeviceData$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice2AVtbl$SendDeviceData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInputDevice7W {

        /* package-private */ IDirectInputDevice7W() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_3.IDirectInputDevice7W$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dinput_h_constants_3.IDirectInputDevice7W$lpVtbl$VH();
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7W$lpVtbl$VH().get(seg);
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7W$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7W$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7W$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInputDevice7WVtbl {

        /* package-private */ IDirectInputDevice7WVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$struct$LAYOUT();
        }
        public static interface QueryInterface$74 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(QueryInterface$74 fi) {
                return RuntimeHelper.upcallStub(QueryInterface$74.class, fi, dinput_h_constants_3.QueryInterface$74$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(QueryInterface$74 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle QueryInterface$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$QueryInterface$VH();
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$QueryInterface$VH().get(seg);
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface AddRef$75 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(AddRef$75 fi) {
                return RuntimeHelper.upcallStub(AddRef$75.class, fi, dinput_h_constants_3.AddRef$75$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(AddRef$75 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle AddRef$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$AddRef$VH();
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$AddRef$VH().get(seg);
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Release$76 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Release$76 fi) {
                return RuntimeHelper.upcallStub(Release$76.class, fi, dinput_h_constants_3.Release$76$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Release$76 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Release$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$Release$VH();
        }
        public static  MemoryAddress Release$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$Release$VH().get(seg);
        }
        public static  MemoryAddress Release$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetCapabilities$77 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetCapabilities$77 fi) {
                return RuntimeHelper.upcallStub(GetCapabilities$77.class, fi, dinput_h_constants_3.GetCapabilities$77$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetCapabilities$77 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetCapabilities$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$GetCapabilities$VH();
        }
        public static  MemoryAddress GetCapabilities$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$GetCapabilities$VH().get(seg);
        }
        public static  MemoryAddress GetCapabilities$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$GetCapabilities$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCapabilities$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$GetCapabilities$VH().set(seg, x);
        }
        public static void GetCapabilities$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$GetCapabilities$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumObjects$78 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3);
            public static  MemorySegment allocate(EnumObjects$78 fi) {
                return RuntimeHelper.upcallStub(EnumObjects$78.class, fi, dinput_h_constants_3.EnumObjects$78$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumObjects$78 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumObjects$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$EnumObjects$VH();
        }
        public static  MemoryAddress EnumObjects$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$EnumObjects$VH().get(seg);
        }
        public static  MemoryAddress EnumObjects$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$EnumObjects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumObjects$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$EnumObjects$VH().set(seg, x);
        }
        public static void EnumObjects$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$EnumObjects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetProperty$79 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(GetProperty$79 fi) {
                return RuntimeHelper.upcallStub(GetProperty$79.class, fi, dinput_h_constants_3.GetProperty$79$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetProperty$79 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetProperty$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$GetProperty$VH();
        }
        public static  MemoryAddress GetProperty$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$GetProperty$VH().get(seg);
        }
        public static  MemoryAddress GetProperty$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$GetProperty$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetProperty$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$GetProperty$VH().set(seg, x);
        }
        public static void GetProperty$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$GetProperty$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetProperty$80 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(SetProperty$80 fi) {
                return RuntimeHelper.upcallStub(SetProperty$80.class, fi, dinput_h_constants_3.SetProperty$80$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(SetProperty$80 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetProperty$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$SetProperty$VH();
        }
        public static  MemoryAddress SetProperty$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$SetProperty$VH().get(seg);
        }
        public static  MemoryAddress SetProperty$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$SetProperty$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetProperty$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$SetProperty$VH().set(seg, x);
        }
        public static void SetProperty$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$SetProperty$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Acquire$81 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Acquire$81 fi) {
                return RuntimeHelper.upcallStub(Acquire$81.class, fi, dinput_h_constants_3.Acquire$81$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Acquire$81 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Acquire$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$Acquire$VH();
        }
        public static  MemoryAddress Acquire$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$Acquire$VH().get(seg);
        }
        public static  MemoryAddress Acquire$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$Acquire$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Acquire$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$Acquire$VH().set(seg, x);
        }
        public static void Acquire$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$Acquire$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Unacquire$82 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Unacquire$82 fi) {
                return RuntimeHelper.upcallStub(Unacquire$82.class, fi, dinput_h_constants_3.Unacquire$82$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Unacquire$82 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Unacquire$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$Unacquire$VH();
        }
        public static  MemoryAddress Unacquire$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$Unacquire$VH().get(seg);
        }
        public static  MemoryAddress Unacquire$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$Unacquire$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Unacquire$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$Unacquire$VH().set(seg, x);
        }
        public static void Unacquire$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$Unacquire$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceState$83 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(GetDeviceState$83 fi) {
                return RuntimeHelper.upcallStub(GetDeviceState$83.class, fi, dinput_h_constants_3.GetDeviceState$83$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetDeviceState$83 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceState$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$GetDeviceState$VH();
        }
        public static  MemoryAddress GetDeviceState$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$GetDeviceState$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceState$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$GetDeviceState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceState$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$GetDeviceState$VH().set(seg, x);
        }
        public static void GetDeviceState$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$GetDeviceState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceData$84 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(GetDeviceData$84 fi) {
                return RuntimeHelper.upcallStub(GetDeviceData$84.class, fi, dinput_h_constants_3.GetDeviceData$84$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(GetDeviceData$84 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceData$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$GetDeviceData$VH();
        }
        public static  MemoryAddress GetDeviceData$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$GetDeviceData$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceData$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$GetDeviceData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceData$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$GetDeviceData$VH().set(seg, x);
        }
        public static void GetDeviceData$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$GetDeviceData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetDataFormat$85 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(SetDataFormat$85 fi) {
                return RuntimeHelper.upcallStub(SetDataFormat$85.class, fi, dinput_h_constants_3.SetDataFormat$85$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(SetDataFormat$85 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetDataFormat$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$SetDataFormat$VH();
        }
        public static  MemoryAddress SetDataFormat$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$SetDataFormat$VH().get(seg);
        }
        public static  MemoryAddress SetDataFormat$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$SetDataFormat$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetDataFormat$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$SetDataFormat$VH().set(seg, x);
        }
        public static void SetDataFormat$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$SetDataFormat$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetEventNotification$86 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(SetEventNotification$86 fi) {
                return RuntimeHelper.upcallStub(SetEventNotification$86.class, fi, dinput_h_constants_3.SetEventNotification$86$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(SetEventNotification$86 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetEventNotification$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$SetEventNotification$VH();
        }
        public static  MemoryAddress SetEventNotification$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$SetEventNotification$VH().get(seg);
        }
        public static  MemoryAddress SetEventNotification$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$SetEventNotification$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetEventNotification$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$SetEventNotification$VH().set(seg, x);
        }
        public static void SetEventNotification$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$SetEventNotification$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetCooperativeLevel$87 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(SetCooperativeLevel$87 fi) {
                return RuntimeHelper.upcallStub(SetCooperativeLevel$87.class, fi, dinput_h_constants_3.SetCooperativeLevel$87$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(SetCooperativeLevel$87 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetCooperativeLevel$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$SetCooperativeLevel$VH();
        }
        public static  MemoryAddress SetCooperativeLevel$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$SetCooperativeLevel$VH().get(seg);
        }
        public static  MemoryAddress SetCooperativeLevel$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$SetCooperativeLevel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetCooperativeLevel$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$SetCooperativeLevel$VH().set(seg, x);
        }
        public static void SetCooperativeLevel$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$SetCooperativeLevel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetObjectInfo$88 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2, int x3);
            public static  MemorySegment allocate(GetObjectInfo$88 fi) {
                return RuntimeHelper.upcallStub(GetObjectInfo$88.class, fi, dinput_h_constants_3.GetObjectInfo$88$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I");
            }
            public static  MemorySegment allocate(GetObjectInfo$88 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetObjectInfo$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$GetObjectInfo$VH();
        }
        public static  MemoryAddress GetObjectInfo$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$GetObjectInfo$VH().get(seg);
        }
        public static  MemoryAddress GetObjectInfo$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$GetObjectInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetObjectInfo$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$GetObjectInfo$VH().set(seg, x);
        }
        public static void GetObjectInfo$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$GetObjectInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceInfo$89 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetDeviceInfo$89 fi) {
                return RuntimeHelper.upcallStub(GetDeviceInfo$89.class, fi, dinput_h_constants_3.GetDeviceInfo$89$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetDeviceInfo$89 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceInfo$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$GetDeviceInfo$VH();
        }
        public static  MemoryAddress GetDeviceInfo$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$GetDeviceInfo$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceInfo$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$GetDeviceInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceInfo$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$GetDeviceInfo$VH().set(seg, x);
        }
        public static void GetDeviceInfo$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$GetDeviceInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface RunControlPanel$90 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(RunControlPanel$90 fi) {
                return RuntimeHelper.upcallStub(RunControlPanel$90.class, fi, dinput_h_constants_3.RunControlPanel$90$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(RunControlPanel$90 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle RunControlPanel$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$RunControlPanel$VH();
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$RunControlPanel$VH().get(seg);
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$RunControlPanel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RunControlPanel$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$RunControlPanel$VH().set(seg, x);
        }
        public static void RunControlPanel$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$RunControlPanel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Initialize$91 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2, jdk.incubator.foreign.MemoryAddress x3);
            public static  MemorySegment allocate(Initialize$91 fi) {
                return RuntimeHelper.upcallStub(Initialize$91.class, fi, dinput_h_constants_3.Initialize$91$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Initialize$91 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Initialize$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$Initialize$VH();
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$Initialize$VH().get(seg);
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$Initialize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Initialize$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$Initialize$VH().set(seg, x);
        }
        public static void Initialize$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$Initialize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface CreateEffect$92 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, jdk.incubator.foreign.MemoryAddress x4);
            public static  MemorySegment allocate(CreateEffect$92 fi) {
                return RuntimeHelper.upcallStub(CreateEffect$92.class, fi, dinput_h_constants_3.CreateEffect$92$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(CreateEffect$92 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle CreateEffect$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$CreateEffect$VH();
        }
        public static  MemoryAddress CreateEffect$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$CreateEffect$VH().get(seg);
        }
        public static  MemoryAddress CreateEffect$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$CreateEffect$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateEffect$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$CreateEffect$VH().set(seg, x);
        }
        public static void CreateEffect$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$CreateEffect$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumEffects$93 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3);
            public static  MemorySegment allocate(EnumEffects$93 fi) {
                return RuntimeHelper.upcallStub(EnumEffects$93.class, fi, dinput_h_constants_3.EnumEffects$93$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumEffects$93 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumEffects$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$EnumEffects$VH();
        }
        public static  MemoryAddress EnumEffects$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$EnumEffects$VH().get(seg);
        }
        public static  MemoryAddress EnumEffects$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$EnumEffects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumEffects$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$EnumEffects$VH().set(seg, x);
        }
        public static void EnumEffects$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$EnumEffects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetEffectInfo$94 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(GetEffectInfo$94 fi) {
                return RuntimeHelper.upcallStub(GetEffectInfo$94.class, fi, dinput_h_constants_3.GetEffectInfo$94$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetEffectInfo$94 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetEffectInfo$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$GetEffectInfo$VH();
        }
        public static  MemoryAddress GetEffectInfo$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$GetEffectInfo$VH().get(seg);
        }
        public static  MemoryAddress GetEffectInfo$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$GetEffectInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetEffectInfo$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$GetEffectInfo$VH().set(seg, x);
        }
        public static void GetEffectInfo$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$GetEffectInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetForceFeedbackState$95 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetForceFeedbackState$95 fi) {
                return RuntimeHelper.upcallStub(GetForceFeedbackState$95.class, fi, dinput_h_constants_3.GetForceFeedbackState$95$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetForceFeedbackState$95 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetForceFeedbackState$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$GetForceFeedbackState$VH();
        }
        public static  MemoryAddress GetForceFeedbackState$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$GetForceFeedbackState$VH().get(seg);
        }
        public static  MemoryAddress GetForceFeedbackState$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$GetForceFeedbackState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetForceFeedbackState$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$GetForceFeedbackState$VH().set(seg, x);
        }
        public static void GetForceFeedbackState$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$GetForceFeedbackState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SendForceFeedbackCommand$96 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1);
            public static  MemorySegment allocate(SendForceFeedbackCommand$96 fi) {
                return RuntimeHelper.upcallStub(SendForceFeedbackCommand$96.class, fi, dinput_h_constants_3.SendForceFeedbackCommand$96$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(SendForceFeedbackCommand$96 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SendForceFeedbackCommand$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$SendForceFeedbackCommand$VH();
        }
        public static  MemoryAddress SendForceFeedbackCommand$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$SendForceFeedbackCommand$VH().get(seg);
        }
        public static  MemoryAddress SendForceFeedbackCommand$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$SendForceFeedbackCommand$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SendForceFeedbackCommand$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$SendForceFeedbackCommand$VH().set(seg, x);
        }
        public static void SendForceFeedbackCommand$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$SendForceFeedbackCommand$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumCreatedEffectObjects$97 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3);
            public static  MemorySegment allocate(EnumCreatedEffectObjects$97 fi) {
                return RuntimeHelper.upcallStub(EnumCreatedEffectObjects$97.class, fi, dinput_h_constants_3.EnumCreatedEffectObjects$97$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumCreatedEffectObjects$97 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumCreatedEffectObjects$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$EnumCreatedEffectObjects$VH();
        }
        public static  MemoryAddress EnumCreatedEffectObjects$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$EnumCreatedEffectObjects$VH().get(seg);
        }
        public static  MemoryAddress EnumCreatedEffectObjects$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$EnumCreatedEffectObjects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumCreatedEffectObjects$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$EnumCreatedEffectObjects$VH().set(seg, x);
        }
        public static void EnumCreatedEffectObjects$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$EnumCreatedEffectObjects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Escape$98 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(Escape$98 fi) {
                return RuntimeHelper.upcallStub(Escape$98.class, fi, dinput_h_constants_3.Escape$98$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Escape$98 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Escape$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$Escape$VH();
        }
        public static  MemoryAddress Escape$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$Escape$VH().get(seg);
        }
        public static  MemoryAddress Escape$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$Escape$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Escape$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$Escape$VH().set(seg, x);
        }
        public static void Escape$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$Escape$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Poll$99 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Poll$99 fi) {
                return RuntimeHelper.upcallStub(Poll$99.class, fi, dinput_h_constants_3.Poll$99$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Poll$99 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Poll$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$Poll$VH();
        }
        public static  MemoryAddress Poll$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$Poll$VH().get(seg);
        }
        public static  MemoryAddress Poll$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$Poll$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Poll$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$Poll$VH().set(seg, x);
        }
        public static void Poll$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$Poll$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SendDeviceData$100 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(SendDeviceData$100 fi) {
                return RuntimeHelper.upcallStub(SendDeviceData$100.class, fi, dinput_h_constants_3.SendDeviceData$100$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(SendDeviceData$100 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SendDeviceData$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$SendDeviceData$VH();
        }
        public static  MemoryAddress SendDeviceData$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$SendDeviceData$VH().get(seg);
        }
        public static  MemoryAddress SendDeviceData$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$SendDeviceData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SendDeviceData$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$SendDeviceData$VH().set(seg, x);
        }
        public static void SendDeviceData$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$SendDeviceData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumEffectsInFile {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(EnumEffectsInFile fi) {
                return RuntimeHelper.upcallStub(EnumEffectsInFile.class, fi, dinput_h_constants_3.EnumEffectsInFile$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumEffectsInFile fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumEffectsInFile$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$EnumEffectsInFile$VH();
        }
        public static  MemoryAddress EnumEffectsInFile$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$EnumEffectsInFile$VH().get(seg);
        }
        public static  MemoryAddress EnumEffectsInFile$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$EnumEffectsInFile$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumEffectsInFile$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$EnumEffectsInFile$VH().set(seg, x);
        }
        public static void EnumEffectsInFile$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$EnumEffectsInFile$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface WriteEffectToFile {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(WriteEffectToFile fi) {
                return RuntimeHelper.upcallStub(WriteEffectToFile.class, fi, dinput_h_constants_3.WriteEffectToFile$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(WriteEffectToFile fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle WriteEffectToFile$VH() {
            return dinput_h_constants_3.IDirectInputDevice7WVtbl$WriteEffectToFile$VH();
        }
        public static  MemoryAddress WriteEffectToFile$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$WriteEffectToFile$VH().get(seg);
        }
        public static  MemoryAddress WriteEffectToFile$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7WVtbl$WriteEffectToFile$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void WriteEffectToFile$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$WriteEffectToFile$VH().set(seg, x);
        }
        public static void WriteEffectToFile$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7WVtbl$WriteEffectToFile$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInputDevice7A {

        /* package-private */ IDirectInputDevice7A() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_3.IDirectInputDevice7A$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dinput_h_constants_3.IDirectInputDevice7A$lpVtbl$VH();
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7A$lpVtbl$VH().get(seg);
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7A$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7A$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7A$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInputDevice7AVtbl {

        /* package-private */ IDirectInputDevice7AVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$struct$LAYOUT();
        }
        public static interface QueryInterface$101 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(QueryInterface$101 fi) {
                return RuntimeHelper.upcallStub(QueryInterface$101.class, fi, dinput_h_constants_3.QueryInterface$101$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(QueryInterface$101 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle QueryInterface$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$QueryInterface$VH();
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$QueryInterface$VH().get(seg);
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface AddRef$102 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(AddRef$102 fi) {
                return RuntimeHelper.upcallStub(AddRef$102.class, fi, dinput_h_constants_3.AddRef$102$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(AddRef$102 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle AddRef$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$AddRef$VH();
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$AddRef$VH().get(seg);
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Release$103 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Release$103 fi) {
                return RuntimeHelper.upcallStub(Release$103.class, fi, dinput_h_constants_3.Release$103$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Release$103 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Release$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$Release$VH();
        }
        public static  MemoryAddress Release$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$Release$VH().get(seg);
        }
        public static  MemoryAddress Release$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetCapabilities$104 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetCapabilities$104 fi) {
                return RuntimeHelper.upcallStub(GetCapabilities$104.class, fi, dinput_h_constants_3.GetCapabilities$104$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetCapabilities$104 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetCapabilities$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$GetCapabilities$VH();
        }
        public static  MemoryAddress GetCapabilities$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$GetCapabilities$VH().get(seg);
        }
        public static  MemoryAddress GetCapabilities$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$GetCapabilities$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCapabilities$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$GetCapabilities$VH().set(seg, x);
        }
        public static void GetCapabilities$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$GetCapabilities$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumObjects$105 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3);
            public static  MemorySegment allocate(EnumObjects$105 fi) {
                return RuntimeHelper.upcallStub(EnumObjects$105.class, fi, dinput_h_constants_3.EnumObjects$105$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumObjects$105 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumObjects$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$EnumObjects$VH();
        }
        public static  MemoryAddress EnumObjects$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$EnumObjects$VH().get(seg);
        }
        public static  MemoryAddress EnumObjects$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$EnumObjects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumObjects$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$EnumObjects$VH().set(seg, x);
        }
        public static void EnumObjects$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$EnumObjects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetProperty$106 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(GetProperty$106 fi) {
                return RuntimeHelper.upcallStub(GetProperty$106.class, fi, dinput_h_constants_3.GetProperty$106$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetProperty$106 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetProperty$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$GetProperty$VH();
        }
        public static  MemoryAddress GetProperty$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$GetProperty$VH().get(seg);
        }
        public static  MemoryAddress GetProperty$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$GetProperty$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetProperty$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$GetProperty$VH().set(seg, x);
        }
        public static void GetProperty$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$GetProperty$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetProperty$107 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(SetProperty$107 fi) {
                return RuntimeHelper.upcallStub(SetProperty$107.class, fi, dinput_h_constants_3.SetProperty$107$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(SetProperty$107 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetProperty$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$SetProperty$VH();
        }
        public static  MemoryAddress SetProperty$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$SetProperty$VH().get(seg);
        }
        public static  MemoryAddress SetProperty$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$SetProperty$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetProperty$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$SetProperty$VH().set(seg, x);
        }
        public static void SetProperty$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$SetProperty$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Acquire$108 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Acquire$108 fi) {
                return RuntimeHelper.upcallStub(Acquire$108.class, fi, dinput_h_constants_3.Acquire$108$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Acquire$108 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Acquire$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$Acquire$VH();
        }
        public static  MemoryAddress Acquire$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$Acquire$VH().get(seg);
        }
        public static  MemoryAddress Acquire$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$Acquire$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Acquire$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$Acquire$VH().set(seg, x);
        }
        public static void Acquire$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$Acquire$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Unacquire$109 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Unacquire$109 fi) {
                return RuntimeHelper.upcallStub(Unacquire$109.class, fi, dinput_h_constants_3.Unacquire$109$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Unacquire$109 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Unacquire$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$Unacquire$VH();
        }
        public static  MemoryAddress Unacquire$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$Unacquire$VH().get(seg);
        }
        public static  MemoryAddress Unacquire$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$Unacquire$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Unacquire$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$Unacquire$VH().set(seg, x);
        }
        public static void Unacquire$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$Unacquire$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceState$110 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(GetDeviceState$110 fi) {
                return RuntimeHelper.upcallStub(GetDeviceState$110.class, fi, dinput_h_constants_3.GetDeviceState$110$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetDeviceState$110 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceState$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$GetDeviceState$VH();
        }
        public static  MemoryAddress GetDeviceState$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$GetDeviceState$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceState$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$GetDeviceState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceState$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$GetDeviceState$VH().set(seg, x);
        }
        public static void GetDeviceState$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$GetDeviceState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceData$111 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(GetDeviceData$111 fi) {
                return RuntimeHelper.upcallStub(GetDeviceData$111.class, fi, dinput_h_constants_3.GetDeviceData$111$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(GetDeviceData$111 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceData$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$GetDeviceData$VH();
        }
        public static  MemoryAddress GetDeviceData$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$GetDeviceData$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceData$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$GetDeviceData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceData$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$GetDeviceData$VH().set(seg, x);
        }
        public static void GetDeviceData$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$GetDeviceData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetDataFormat$112 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(SetDataFormat$112 fi) {
                return RuntimeHelper.upcallStub(SetDataFormat$112.class, fi, dinput_h_constants_3.SetDataFormat$112$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(SetDataFormat$112 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetDataFormat$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$SetDataFormat$VH();
        }
        public static  MemoryAddress SetDataFormat$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$SetDataFormat$VH().get(seg);
        }
        public static  MemoryAddress SetDataFormat$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$SetDataFormat$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetDataFormat$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$SetDataFormat$VH().set(seg, x);
        }
        public static void SetDataFormat$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$SetDataFormat$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetEventNotification$113 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(SetEventNotification$113 fi) {
                return RuntimeHelper.upcallStub(SetEventNotification$113.class, fi, dinput_h_constants_3.SetEventNotification$113$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(SetEventNotification$113 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetEventNotification$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$SetEventNotification$VH();
        }
        public static  MemoryAddress SetEventNotification$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$SetEventNotification$VH().get(seg);
        }
        public static  MemoryAddress SetEventNotification$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$SetEventNotification$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetEventNotification$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$SetEventNotification$VH().set(seg, x);
        }
        public static void SetEventNotification$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$SetEventNotification$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetCooperativeLevel$114 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(SetCooperativeLevel$114 fi) {
                return RuntimeHelper.upcallStub(SetCooperativeLevel$114.class, fi, dinput_h_constants_3.SetCooperativeLevel$114$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(SetCooperativeLevel$114 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetCooperativeLevel$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$SetCooperativeLevel$VH();
        }
        public static  MemoryAddress SetCooperativeLevel$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$SetCooperativeLevel$VH().get(seg);
        }
        public static  MemoryAddress SetCooperativeLevel$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$SetCooperativeLevel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetCooperativeLevel$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$SetCooperativeLevel$VH().set(seg, x);
        }
        public static void SetCooperativeLevel$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$SetCooperativeLevel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetObjectInfo$115 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2, int x3);
            public static  MemorySegment allocate(GetObjectInfo$115 fi) {
                return RuntimeHelper.upcallStub(GetObjectInfo$115.class, fi, dinput_h_constants_3.GetObjectInfo$115$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I");
            }
            public static  MemorySegment allocate(GetObjectInfo$115 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetObjectInfo$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$GetObjectInfo$VH();
        }
        public static  MemoryAddress GetObjectInfo$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$GetObjectInfo$VH().get(seg);
        }
        public static  MemoryAddress GetObjectInfo$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$GetObjectInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetObjectInfo$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$GetObjectInfo$VH().set(seg, x);
        }
        public static void GetObjectInfo$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$GetObjectInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceInfo$116 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetDeviceInfo$116 fi) {
                return RuntimeHelper.upcallStub(GetDeviceInfo$116.class, fi, dinput_h_constants_3.GetDeviceInfo$116$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetDeviceInfo$116 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceInfo$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$GetDeviceInfo$VH();
        }
        public static  MemoryAddress GetDeviceInfo$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$GetDeviceInfo$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceInfo$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$GetDeviceInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceInfo$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$GetDeviceInfo$VH().set(seg, x);
        }
        public static void GetDeviceInfo$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$GetDeviceInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface RunControlPanel$117 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(RunControlPanel$117 fi) {
                return RuntimeHelper.upcallStub(RunControlPanel$117.class, fi, dinput_h_constants_3.RunControlPanel$117$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(RunControlPanel$117 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle RunControlPanel$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$RunControlPanel$VH();
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$RunControlPanel$VH().get(seg);
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$RunControlPanel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RunControlPanel$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$RunControlPanel$VH().set(seg, x);
        }
        public static void RunControlPanel$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$RunControlPanel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Initialize$118 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2, jdk.incubator.foreign.MemoryAddress x3);
            public static  MemorySegment allocate(Initialize$118 fi) {
                return RuntimeHelper.upcallStub(Initialize$118.class, fi, dinput_h_constants_3.Initialize$118$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Initialize$118 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Initialize$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$Initialize$VH();
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$Initialize$VH().get(seg);
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$Initialize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Initialize$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$Initialize$VH().set(seg, x);
        }
        public static void Initialize$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$Initialize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface CreateEffect$119 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, jdk.incubator.foreign.MemoryAddress x4);
            public static  MemorySegment allocate(CreateEffect$119 fi) {
                return RuntimeHelper.upcallStub(CreateEffect$119.class, fi, dinput_h_constants_3.CreateEffect$119$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(CreateEffect$119 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle CreateEffect$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$CreateEffect$VH();
        }
        public static  MemoryAddress CreateEffect$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$CreateEffect$VH().get(seg);
        }
        public static  MemoryAddress CreateEffect$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$CreateEffect$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateEffect$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$CreateEffect$VH().set(seg, x);
        }
        public static void CreateEffect$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$CreateEffect$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumEffects$120 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3);
            public static  MemorySegment allocate(EnumEffects$120 fi) {
                return RuntimeHelper.upcallStub(EnumEffects$120.class, fi, dinput_h_constants_3.EnumEffects$120$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumEffects$120 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumEffects$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$EnumEffects$VH();
        }
        public static  MemoryAddress EnumEffects$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$EnumEffects$VH().get(seg);
        }
        public static  MemoryAddress EnumEffects$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$EnumEffects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumEffects$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$EnumEffects$VH().set(seg, x);
        }
        public static void EnumEffects$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$EnumEffects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetEffectInfo$121 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(GetEffectInfo$121 fi) {
                return RuntimeHelper.upcallStub(GetEffectInfo$121.class, fi, dinput_h_constants_3.GetEffectInfo$121$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetEffectInfo$121 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetEffectInfo$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$GetEffectInfo$VH();
        }
        public static  MemoryAddress GetEffectInfo$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$GetEffectInfo$VH().get(seg);
        }
        public static  MemoryAddress GetEffectInfo$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$GetEffectInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetEffectInfo$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$GetEffectInfo$VH().set(seg, x);
        }
        public static void GetEffectInfo$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$GetEffectInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetForceFeedbackState$122 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetForceFeedbackState$122 fi) {
                return RuntimeHelper.upcallStub(GetForceFeedbackState$122.class, fi, dinput_h_constants_3.GetForceFeedbackState$122$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetForceFeedbackState$122 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetForceFeedbackState$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$GetForceFeedbackState$VH();
        }
        public static  MemoryAddress GetForceFeedbackState$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$GetForceFeedbackState$VH().get(seg);
        }
        public static  MemoryAddress GetForceFeedbackState$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$GetForceFeedbackState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetForceFeedbackState$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$GetForceFeedbackState$VH().set(seg, x);
        }
        public static void GetForceFeedbackState$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$GetForceFeedbackState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SendForceFeedbackCommand$123 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1);
            public static  MemorySegment allocate(SendForceFeedbackCommand$123 fi) {
                return RuntimeHelper.upcallStub(SendForceFeedbackCommand$123.class, fi, dinput_h_constants_3.SendForceFeedbackCommand$123$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(SendForceFeedbackCommand$123 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SendForceFeedbackCommand$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$SendForceFeedbackCommand$VH();
        }
        public static  MemoryAddress SendForceFeedbackCommand$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$SendForceFeedbackCommand$VH().get(seg);
        }
        public static  MemoryAddress SendForceFeedbackCommand$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$SendForceFeedbackCommand$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SendForceFeedbackCommand$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$SendForceFeedbackCommand$VH().set(seg, x);
        }
        public static void SendForceFeedbackCommand$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$SendForceFeedbackCommand$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumCreatedEffectObjects$124 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3);
            public static  MemorySegment allocate(EnumCreatedEffectObjects$124 fi) {
                return RuntimeHelper.upcallStub(EnumCreatedEffectObjects$124.class, fi, dinput_h_constants_3.EnumCreatedEffectObjects$124$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumCreatedEffectObjects$124 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumCreatedEffectObjects$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$EnumCreatedEffectObjects$VH();
        }
        public static  MemoryAddress EnumCreatedEffectObjects$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$EnumCreatedEffectObjects$VH().get(seg);
        }
        public static  MemoryAddress EnumCreatedEffectObjects$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$EnumCreatedEffectObjects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumCreatedEffectObjects$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$EnumCreatedEffectObjects$VH().set(seg, x);
        }
        public static void EnumCreatedEffectObjects$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$EnumCreatedEffectObjects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Escape$125 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(Escape$125 fi) {
                return RuntimeHelper.upcallStub(Escape$125.class, fi, dinput_h_constants_3.Escape$125$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Escape$125 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Escape$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$Escape$VH();
        }
        public static  MemoryAddress Escape$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$Escape$VH().get(seg);
        }
        public static  MemoryAddress Escape$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$Escape$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Escape$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$Escape$VH().set(seg, x);
        }
        public static void Escape$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$Escape$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Poll$126 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Poll$126 fi) {
                return RuntimeHelper.upcallStub(Poll$126.class, fi, dinput_h_constants_3.Poll$126$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Poll$126 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Poll$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$Poll$VH();
        }
        public static  MemoryAddress Poll$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$Poll$VH().get(seg);
        }
        public static  MemoryAddress Poll$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$Poll$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Poll$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$Poll$VH().set(seg, x);
        }
        public static void Poll$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$Poll$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SendDeviceData$127 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(SendDeviceData$127 fi) {
                return RuntimeHelper.upcallStub(SendDeviceData$127.class, fi, dinput_h_constants_3.SendDeviceData$127$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(SendDeviceData$127 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SendDeviceData$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$SendDeviceData$VH();
        }
        public static  MemoryAddress SendDeviceData$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$SendDeviceData$VH().get(seg);
        }
        public static  MemoryAddress SendDeviceData$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$SendDeviceData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SendDeviceData$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$SendDeviceData$VH().set(seg, x);
        }
        public static void SendDeviceData$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$SendDeviceData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumEffectsInFile$128 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(EnumEffectsInFile$128 fi) {
                return RuntimeHelper.upcallStub(EnumEffectsInFile$128.class, fi, dinput_h_constants_3.EnumEffectsInFile$128$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumEffectsInFile$128 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumEffectsInFile$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$EnumEffectsInFile$VH();
        }
        public static  MemoryAddress EnumEffectsInFile$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$EnumEffectsInFile$VH().get(seg);
        }
        public static  MemoryAddress EnumEffectsInFile$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$EnumEffectsInFile$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumEffectsInFile$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$EnumEffectsInFile$VH().set(seg, x);
        }
        public static void EnumEffectsInFile$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$EnumEffectsInFile$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface WriteEffectToFile$129 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(WriteEffectToFile$129 fi) {
                return RuntimeHelper.upcallStub(WriteEffectToFile$129.class, fi, dinput_h_constants_3.WriteEffectToFile$129$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(WriteEffectToFile$129 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle WriteEffectToFile$VH() {
            return dinput_h_constants_3.IDirectInputDevice7AVtbl$WriteEffectToFile$VH();
        }
        public static  MemoryAddress WriteEffectToFile$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$WriteEffectToFile$VH().get(seg);
        }
        public static  MemoryAddress WriteEffectToFile$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice7AVtbl$WriteEffectToFile$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void WriteEffectToFile$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$WriteEffectToFile$VH().set(seg, x);
        }
        public static void WriteEffectToFile$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice7AVtbl$WriteEffectToFile$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInputDevice8W {

        /* package-private */ IDirectInputDevice8W() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_3.IDirectInputDevice8W$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dinput_h_constants_3.IDirectInputDevice8W$lpVtbl$VH();
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8W$lpVtbl$VH().get(seg);
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8W$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8W$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8W$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInputDevice8WVtbl {

        /* package-private */ IDirectInputDevice8WVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$struct$LAYOUT();
        }
        public static interface QueryInterface$130 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(QueryInterface$130 fi) {
                return RuntimeHelper.upcallStub(QueryInterface$130.class, fi, dinput_h_constants_3.QueryInterface$130$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(QueryInterface$130 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle QueryInterface$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$QueryInterface$VH();
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$QueryInterface$VH().get(seg);
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface AddRef$131 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(AddRef$131 fi) {
                return RuntimeHelper.upcallStub(AddRef$131.class, fi, dinput_h_constants_3.AddRef$131$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(AddRef$131 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle AddRef$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$AddRef$VH();
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$AddRef$VH().get(seg);
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Release$132 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Release$132 fi) {
                return RuntimeHelper.upcallStub(Release$132.class, fi, dinput_h_constants_3.Release$132$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Release$132 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Release$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$Release$VH();
        }
        public static  MemoryAddress Release$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$Release$VH().get(seg);
        }
        public static  MemoryAddress Release$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetCapabilities$133 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetCapabilities$133 fi) {
                return RuntimeHelper.upcallStub(GetCapabilities$133.class, fi, dinput_h_constants_3.GetCapabilities$133$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetCapabilities$133 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetCapabilities$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$GetCapabilities$VH();
        }
        public static  MemoryAddress GetCapabilities$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$GetCapabilities$VH().get(seg);
        }
        public static  MemoryAddress GetCapabilities$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$GetCapabilities$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCapabilities$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$GetCapabilities$VH().set(seg, x);
        }
        public static void GetCapabilities$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$GetCapabilities$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumObjects$134 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3);
            public static  MemorySegment allocate(EnumObjects$134 fi) {
                return RuntimeHelper.upcallStub(EnumObjects$134.class, fi, dinput_h_constants_3.EnumObjects$134$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumObjects$134 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumObjects$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$EnumObjects$VH();
        }
        public static  MemoryAddress EnumObjects$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$EnumObjects$VH().get(seg);
        }
        public static  MemoryAddress EnumObjects$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$EnumObjects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumObjects$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$EnumObjects$VH().set(seg, x);
        }
        public static void EnumObjects$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$EnumObjects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetProperty$135 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(GetProperty$135 fi) {
                return RuntimeHelper.upcallStub(GetProperty$135.class, fi, dinput_h_constants_3.GetProperty$135$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetProperty$135 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetProperty$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$GetProperty$VH();
        }
        public static  MemoryAddress GetProperty$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$GetProperty$VH().get(seg);
        }
        public static  MemoryAddress GetProperty$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$GetProperty$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetProperty$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$GetProperty$VH().set(seg, x);
        }
        public static void GetProperty$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$GetProperty$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetProperty$136 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(SetProperty$136 fi) {
                return RuntimeHelper.upcallStub(SetProperty$136.class, fi, dinput_h_constants_3.SetProperty$136$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(SetProperty$136 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetProperty$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$SetProperty$VH();
        }
        public static  MemoryAddress SetProperty$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$SetProperty$VH().get(seg);
        }
        public static  MemoryAddress SetProperty$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$SetProperty$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetProperty$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$SetProperty$VH().set(seg, x);
        }
        public static void SetProperty$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$SetProperty$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Acquire$137 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Acquire$137 fi) {
                return RuntimeHelper.upcallStub(Acquire$137.class, fi, dinput_h_constants_3.Acquire$137$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Acquire$137 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Acquire$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$Acquire$VH();
        }
        public static  MemoryAddress Acquire$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$Acquire$VH().get(seg);
        }
        public static  MemoryAddress Acquire$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$Acquire$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Acquire$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$Acquire$VH().set(seg, x);
        }
        public static void Acquire$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$Acquire$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Unacquire$138 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Unacquire$138 fi) {
                return RuntimeHelper.upcallStub(Unacquire$138.class, fi, dinput_h_constants_3.Unacquire$138$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Unacquire$138 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Unacquire$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$Unacquire$VH();
        }
        public static  MemoryAddress Unacquire$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$Unacquire$VH().get(seg);
        }
        public static  MemoryAddress Unacquire$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$Unacquire$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Unacquire$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$Unacquire$VH().set(seg, x);
        }
        public static void Unacquire$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$Unacquire$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceState$139 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(GetDeviceState$139 fi) {
                return RuntimeHelper.upcallStub(GetDeviceState$139.class, fi, dinput_h_constants_3.GetDeviceState$139$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetDeviceState$139 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceState$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$GetDeviceState$VH();
        }
        public static  MemoryAddress GetDeviceState$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$GetDeviceState$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceState$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$GetDeviceState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceState$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$GetDeviceState$VH().set(seg, x);
        }
        public static void GetDeviceState$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$GetDeviceState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceData$140 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(GetDeviceData$140 fi) {
                return RuntimeHelper.upcallStub(GetDeviceData$140.class, fi, dinput_h_constants_3.GetDeviceData$140$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(GetDeviceData$140 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceData$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$GetDeviceData$VH();
        }
        public static  MemoryAddress GetDeviceData$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$GetDeviceData$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceData$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$GetDeviceData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceData$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$GetDeviceData$VH().set(seg, x);
        }
        public static void GetDeviceData$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$GetDeviceData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetDataFormat$141 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(SetDataFormat$141 fi) {
                return RuntimeHelper.upcallStub(SetDataFormat$141.class, fi, dinput_h_constants_3.SetDataFormat$141$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(SetDataFormat$141 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetDataFormat$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$SetDataFormat$VH();
        }
        public static  MemoryAddress SetDataFormat$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$SetDataFormat$VH().get(seg);
        }
        public static  MemoryAddress SetDataFormat$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$SetDataFormat$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetDataFormat$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$SetDataFormat$VH().set(seg, x);
        }
        public static void SetDataFormat$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$SetDataFormat$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetEventNotification$142 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(SetEventNotification$142 fi) {
                return RuntimeHelper.upcallStub(SetEventNotification$142.class, fi, dinput_h_constants_3.SetEventNotification$142$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(SetEventNotification$142 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetEventNotification$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$SetEventNotification$VH();
        }
        public static  MemoryAddress SetEventNotification$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$SetEventNotification$VH().get(seg);
        }
        public static  MemoryAddress SetEventNotification$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$SetEventNotification$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetEventNotification$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$SetEventNotification$VH().set(seg, x);
        }
        public static void SetEventNotification$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$SetEventNotification$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetCooperativeLevel$143 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(SetCooperativeLevel$143 fi) {
                return RuntimeHelper.upcallStub(SetCooperativeLevel$143.class, fi, dinput_h_constants_3.SetCooperativeLevel$143$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(SetCooperativeLevel$143 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetCooperativeLevel$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$SetCooperativeLevel$VH();
        }
        public static  MemoryAddress SetCooperativeLevel$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$SetCooperativeLevel$VH().get(seg);
        }
        public static  MemoryAddress SetCooperativeLevel$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$SetCooperativeLevel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetCooperativeLevel$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$SetCooperativeLevel$VH().set(seg, x);
        }
        public static void SetCooperativeLevel$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$SetCooperativeLevel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetObjectInfo$144 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2, int x3);
            public static  MemorySegment allocate(GetObjectInfo$144 fi) {
                return RuntimeHelper.upcallStub(GetObjectInfo$144.class, fi, dinput_h_constants_3.GetObjectInfo$144$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I");
            }
            public static  MemorySegment allocate(GetObjectInfo$144 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetObjectInfo$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$GetObjectInfo$VH();
        }
        public static  MemoryAddress GetObjectInfo$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$GetObjectInfo$VH().get(seg);
        }
        public static  MemoryAddress GetObjectInfo$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$GetObjectInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetObjectInfo$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$GetObjectInfo$VH().set(seg, x);
        }
        public static void GetObjectInfo$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$GetObjectInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceInfo$145 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetDeviceInfo$145 fi) {
                return RuntimeHelper.upcallStub(GetDeviceInfo$145.class, fi, dinput_h_constants_3.GetDeviceInfo$145$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetDeviceInfo$145 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceInfo$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$GetDeviceInfo$VH();
        }
        public static  MemoryAddress GetDeviceInfo$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$GetDeviceInfo$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceInfo$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$GetDeviceInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceInfo$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$GetDeviceInfo$VH().set(seg, x);
        }
        public static void GetDeviceInfo$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$GetDeviceInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface RunControlPanel$146 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(RunControlPanel$146 fi) {
                return RuntimeHelper.upcallStub(RunControlPanel$146.class, fi, dinput_h_constants_3.RunControlPanel$146$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(RunControlPanel$146 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle RunControlPanel$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$RunControlPanel$VH();
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$RunControlPanel$VH().get(seg);
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$RunControlPanel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RunControlPanel$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$RunControlPanel$VH().set(seg, x);
        }
        public static void RunControlPanel$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$RunControlPanel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Initialize$147 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2, jdk.incubator.foreign.MemoryAddress x3);
            public static  MemorySegment allocate(Initialize$147 fi) {
                return RuntimeHelper.upcallStub(Initialize$147.class, fi, dinput_h_constants_3.Initialize$147$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Initialize$147 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Initialize$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$Initialize$VH();
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$Initialize$VH().get(seg);
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$Initialize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Initialize$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$Initialize$VH().set(seg, x);
        }
        public static void Initialize$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$Initialize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface CreateEffect$148 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, jdk.incubator.foreign.MemoryAddress x4);
            public static  MemorySegment allocate(CreateEffect$148 fi) {
                return RuntimeHelper.upcallStub(CreateEffect$148.class, fi, dinput_h_constants_3.CreateEffect$148$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(CreateEffect$148 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle CreateEffect$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$CreateEffect$VH();
        }
        public static  MemoryAddress CreateEffect$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$CreateEffect$VH().get(seg);
        }
        public static  MemoryAddress CreateEffect$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$CreateEffect$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateEffect$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$CreateEffect$VH().set(seg, x);
        }
        public static void CreateEffect$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$CreateEffect$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumEffects$149 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3);
            public static  MemorySegment allocate(EnumEffects$149 fi) {
                return RuntimeHelper.upcallStub(EnumEffects$149.class, fi, dinput_h_constants_3.EnumEffects$149$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumEffects$149 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumEffects$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$EnumEffects$VH();
        }
        public static  MemoryAddress EnumEffects$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$EnumEffects$VH().get(seg);
        }
        public static  MemoryAddress EnumEffects$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$EnumEffects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumEffects$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$EnumEffects$VH().set(seg, x);
        }
        public static void EnumEffects$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$EnumEffects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetEffectInfo$150 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(GetEffectInfo$150 fi) {
                return RuntimeHelper.upcallStub(GetEffectInfo$150.class, fi, dinput_h_constants_3.GetEffectInfo$150$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetEffectInfo$150 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetEffectInfo$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$GetEffectInfo$VH();
        }
        public static  MemoryAddress GetEffectInfo$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$GetEffectInfo$VH().get(seg);
        }
        public static  MemoryAddress GetEffectInfo$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$GetEffectInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetEffectInfo$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$GetEffectInfo$VH().set(seg, x);
        }
        public static void GetEffectInfo$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$GetEffectInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetForceFeedbackState$151 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetForceFeedbackState$151 fi) {
                return RuntimeHelper.upcallStub(GetForceFeedbackState$151.class, fi, dinput_h_constants_3.GetForceFeedbackState$151$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetForceFeedbackState$151 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetForceFeedbackState$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$GetForceFeedbackState$VH();
        }
        public static  MemoryAddress GetForceFeedbackState$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$GetForceFeedbackState$VH().get(seg);
        }
        public static  MemoryAddress GetForceFeedbackState$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$GetForceFeedbackState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetForceFeedbackState$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$GetForceFeedbackState$VH().set(seg, x);
        }
        public static void GetForceFeedbackState$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$GetForceFeedbackState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SendForceFeedbackCommand$152 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1);
            public static  MemorySegment allocate(SendForceFeedbackCommand$152 fi) {
                return RuntimeHelper.upcallStub(SendForceFeedbackCommand$152.class, fi, dinput_h_constants_3.SendForceFeedbackCommand$152$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(SendForceFeedbackCommand$152 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SendForceFeedbackCommand$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$SendForceFeedbackCommand$VH();
        }
        public static  MemoryAddress SendForceFeedbackCommand$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$SendForceFeedbackCommand$VH().get(seg);
        }
        public static  MemoryAddress SendForceFeedbackCommand$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$SendForceFeedbackCommand$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SendForceFeedbackCommand$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$SendForceFeedbackCommand$VH().set(seg, x);
        }
        public static void SendForceFeedbackCommand$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$SendForceFeedbackCommand$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumCreatedEffectObjects$153 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3);
            public static  MemorySegment allocate(EnumCreatedEffectObjects$153 fi) {
                return RuntimeHelper.upcallStub(EnumCreatedEffectObjects$153.class, fi, dinput_h_constants_3.EnumCreatedEffectObjects$153$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumCreatedEffectObjects$153 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumCreatedEffectObjects$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$EnumCreatedEffectObjects$VH();
        }
        public static  MemoryAddress EnumCreatedEffectObjects$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$EnumCreatedEffectObjects$VH().get(seg);
        }
        public static  MemoryAddress EnumCreatedEffectObjects$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$EnumCreatedEffectObjects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumCreatedEffectObjects$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$EnumCreatedEffectObjects$VH().set(seg, x);
        }
        public static void EnumCreatedEffectObjects$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$EnumCreatedEffectObjects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Escape$154 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(Escape$154 fi) {
                return RuntimeHelper.upcallStub(Escape$154.class, fi, dinput_h_constants_3.Escape$154$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Escape$154 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Escape$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$Escape$VH();
        }
        public static  MemoryAddress Escape$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$Escape$VH().get(seg);
        }
        public static  MemoryAddress Escape$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$Escape$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Escape$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$Escape$VH().set(seg, x);
        }
        public static void Escape$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$Escape$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Poll$155 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Poll$155 fi) {
                return RuntimeHelper.upcallStub(Poll$155.class, fi, dinput_h_constants_3.Poll$155$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Poll$155 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Poll$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$Poll$VH();
        }
        public static  MemoryAddress Poll$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$Poll$VH().get(seg);
        }
        public static  MemoryAddress Poll$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$Poll$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Poll$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$Poll$VH().set(seg, x);
        }
        public static void Poll$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$Poll$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SendDeviceData$156 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(SendDeviceData$156 fi) {
                return RuntimeHelper.upcallStub(SendDeviceData$156.class, fi, dinput_h_constants_3.SendDeviceData$156$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(SendDeviceData$156 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SendDeviceData$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$SendDeviceData$VH();
        }
        public static  MemoryAddress SendDeviceData$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$SendDeviceData$VH().get(seg);
        }
        public static  MemoryAddress SendDeviceData$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$SendDeviceData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SendDeviceData$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$SendDeviceData$VH().set(seg, x);
        }
        public static void SendDeviceData$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$SendDeviceData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumEffectsInFile$157 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(EnumEffectsInFile$157 fi) {
                return RuntimeHelper.upcallStub(EnumEffectsInFile$157.class, fi, dinput_h_constants_3.EnumEffectsInFile$157$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumEffectsInFile$157 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumEffectsInFile$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$EnumEffectsInFile$VH();
        }
        public static  MemoryAddress EnumEffectsInFile$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$EnumEffectsInFile$VH().get(seg);
        }
        public static  MemoryAddress EnumEffectsInFile$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$EnumEffectsInFile$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumEffectsInFile$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$EnumEffectsInFile$VH().set(seg, x);
        }
        public static void EnumEffectsInFile$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$EnumEffectsInFile$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface WriteEffectToFile$158 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(WriteEffectToFile$158 fi) {
                return RuntimeHelper.upcallStub(WriteEffectToFile$158.class, fi, dinput_h_constants_3.WriteEffectToFile$158$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(WriteEffectToFile$158 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle WriteEffectToFile$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$WriteEffectToFile$VH();
        }
        public static  MemoryAddress WriteEffectToFile$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$WriteEffectToFile$VH().get(seg);
        }
        public static  MemoryAddress WriteEffectToFile$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$WriteEffectToFile$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void WriteEffectToFile$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$WriteEffectToFile$VH().set(seg, x);
        }
        public static void WriteEffectToFile$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$WriteEffectToFile$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface BuildActionMap {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3);
            public static  MemorySegment allocate(BuildActionMap fi) {
                return RuntimeHelper.upcallStub(BuildActionMap.class, fi, dinput_h_constants_3.BuildActionMap$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(BuildActionMap fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle BuildActionMap$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$BuildActionMap$VH();
        }
        public static  MemoryAddress BuildActionMap$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$BuildActionMap$VH().get(seg);
        }
        public static  MemoryAddress BuildActionMap$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$BuildActionMap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BuildActionMap$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$BuildActionMap$VH().set(seg, x);
        }
        public static void BuildActionMap$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$BuildActionMap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetActionMap {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3);
            public static  MemorySegment allocate(SetActionMap fi) {
                return RuntimeHelper.upcallStub(SetActionMap.class, fi, dinput_h_constants_3.SetActionMap$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(SetActionMap fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetActionMap$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$SetActionMap$VH();
        }
        public static  MemoryAddress SetActionMap$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$SetActionMap$VH().get(seg);
        }
        public static  MemoryAddress SetActionMap$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$SetActionMap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetActionMap$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$SetActionMap$VH().set(seg, x);
        }
        public static void SetActionMap$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$SetActionMap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetImageInfo {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetImageInfo fi) {
                return RuntimeHelper.upcallStub(GetImageInfo.class, fi, dinput_h_constants_3.GetImageInfo$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetImageInfo fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetImageInfo$VH() {
            return dinput_h_constants_3.IDirectInputDevice8WVtbl$GetImageInfo$VH();
        }
        public static  MemoryAddress GetImageInfo$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$GetImageInfo$VH().get(seg);
        }
        public static  MemoryAddress GetImageInfo$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8WVtbl$GetImageInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetImageInfo$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$GetImageInfo$VH().set(seg, x);
        }
        public static void GetImageInfo$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8WVtbl$GetImageInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInputDevice8A {

        /* package-private */ IDirectInputDevice8A() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_3.IDirectInputDevice8A$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dinput_h_constants_3.IDirectInputDevice8A$lpVtbl$VH();
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8A$lpVtbl$VH().get(seg);
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8A$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8A$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8A$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInputDevice8AVtbl {

        /* package-private */ IDirectInputDevice8AVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$struct$LAYOUT();
        }
        public static interface QueryInterface$159 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(QueryInterface$159 fi) {
                return RuntimeHelper.upcallStub(QueryInterface$159.class, fi, dinput_h_constants_3.QueryInterface$159$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(QueryInterface$159 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle QueryInterface$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$QueryInterface$VH();
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$QueryInterface$VH().get(seg);
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface AddRef$160 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(AddRef$160 fi) {
                return RuntimeHelper.upcallStub(AddRef$160.class, fi, dinput_h_constants_3.AddRef$160$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(AddRef$160 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle AddRef$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$AddRef$VH();
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$AddRef$VH().get(seg);
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Release$161 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Release$161 fi) {
                return RuntimeHelper.upcallStub(Release$161.class, fi, dinput_h_constants_3.Release$161$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Release$161 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Release$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$Release$VH();
        }
        public static  MemoryAddress Release$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$Release$VH().get(seg);
        }
        public static  MemoryAddress Release$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetCapabilities$162 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetCapabilities$162 fi) {
                return RuntimeHelper.upcallStub(GetCapabilities$162.class, fi, dinput_h_constants_3.GetCapabilities$162$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetCapabilities$162 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetCapabilities$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$GetCapabilities$VH();
        }
        public static  MemoryAddress GetCapabilities$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$GetCapabilities$VH().get(seg);
        }
        public static  MemoryAddress GetCapabilities$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$GetCapabilities$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCapabilities$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$GetCapabilities$VH().set(seg, x);
        }
        public static void GetCapabilities$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$GetCapabilities$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumObjects$163 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3);
            public static  MemorySegment allocate(EnumObjects$163 fi) {
                return RuntimeHelper.upcallStub(EnumObjects$163.class, fi, dinput_h_constants_3.EnumObjects$163$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumObjects$163 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumObjects$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$EnumObjects$VH();
        }
        public static  MemoryAddress EnumObjects$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$EnumObjects$VH().get(seg);
        }
        public static  MemoryAddress EnumObjects$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$EnumObjects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumObjects$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$EnumObjects$VH().set(seg, x);
        }
        public static void EnumObjects$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$EnumObjects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetProperty$164 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(GetProperty$164 fi) {
                return RuntimeHelper.upcallStub(GetProperty$164.class, fi, dinput_h_constants_3.GetProperty$164$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetProperty$164 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetProperty$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$GetProperty$VH();
        }
        public static  MemoryAddress GetProperty$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$GetProperty$VH().get(seg);
        }
        public static  MemoryAddress GetProperty$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$GetProperty$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetProperty$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$GetProperty$VH().set(seg, x);
        }
        public static void GetProperty$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$GetProperty$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetProperty$165 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(SetProperty$165 fi) {
                return RuntimeHelper.upcallStub(SetProperty$165.class, fi, dinput_h_constants_3.SetProperty$165$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(SetProperty$165 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetProperty$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$SetProperty$VH();
        }
        public static  MemoryAddress SetProperty$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$SetProperty$VH().get(seg);
        }
        public static  MemoryAddress SetProperty$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$SetProperty$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetProperty$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$SetProperty$VH().set(seg, x);
        }
        public static void SetProperty$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$SetProperty$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Acquire$166 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Acquire$166 fi) {
                return RuntimeHelper.upcallStub(Acquire$166.class, fi, dinput_h_constants_3.Acquire$166$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Acquire$166 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Acquire$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$Acquire$VH();
        }
        public static  MemoryAddress Acquire$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$Acquire$VH().get(seg);
        }
        public static  MemoryAddress Acquire$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$Acquire$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Acquire$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$Acquire$VH().set(seg, x);
        }
        public static void Acquire$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$Acquire$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Unacquire$167 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Unacquire$167 fi) {
                return RuntimeHelper.upcallStub(Unacquire$167.class, fi, dinput_h_constants_3.Unacquire$167$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Unacquire$167 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Unacquire$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$Unacquire$VH();
        }
        public static  MemoryAddress Unacquire$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$Unacquire$VH().get(seg);
        }
        public static  MemoryAddress Unacquire$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$Unacquire$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Unacquire$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$Unacquire$VH().set(seg, x);
        }
        public static void Unacquire$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$Unacquire$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceState$168 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(GetDeviceState$168 fi) {
                return RuntimeHelper.upcallStub(GetDeviceState$168.class, fi, dinput_h_constants_3.GetDeviceState$168$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetDeviceState$168 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceState$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$GetDeviceState$VH();
        }
        public static  MemoryAddress GetDeviceState$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$GetDeviceState$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceState$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$GetDeviceState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceState$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$GetDeviceState$VH().set(seg, x);
        }
        public static void GetDeviceState$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$GetDeviceState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceData$169 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(GetDeviceData$169 fi) {
                return RuntimeHelper.upcallStub(GetDeviceData$169.class, fi, dinput_h_constants_3.GetDeviceData$169$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(GetDeviceData$169 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceData$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$GetDeviceData$VH();
        }
        public static  MemoryAddress GetDeviceData$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$GetDeviceData$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceData$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$GetDeviceData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceData$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$GetDeviceData$VH().set(seg, x);
        }
        public static void GetDeviceData$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$GetDeviceData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetDataFormat$170 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(SetDataFormat$170 fi) {
                return RuntimeHelper.upcallStub(SetDataFormat$170.class, fi, dinput_h_constants_3.SetDataFormat$170$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(SetDataFormat$170 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetDataFormat$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$SetDataFormat$VH();
        }
        public static  MemoryAddress SetDataFormat$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$SetDataFormat$VH().get(seg);
        }
        public static  MemoryAddress SetDataFormat$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$SetDataFormat$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetDataFormat$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$SetDataFormat$VH().set(seg, x);
        }
        public static void SetDataFormat$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$SetDataFormat$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetEventNotification$171 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(SetEventNotification$171 fi) {
                return RuntimeHelper.upcallStub(SetEventNotification$171.class, fi, dinput_h_constants_3.SetEventNotification$171$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(SetEventNotification$171 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetEventNotification$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$SetEventNotification$VH();
        }
        public static  MemoryAddress SetEventNotification$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$SetEventNotification$VH().get(seg);
        }
        public static  MemoryAddress SetEventNotification$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$SetEventNotification$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetEventNotification$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$SetEventNotification$VH().set(seg, x);
        }
        public static void SetEventNotification$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$SetEventNotification$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetCooperativeLevel$172 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(SetCooperativeLevel$172 fi) {
                return RuntimeHelper.upcallStub(SetCooperativeLevel$172.class, fi, dinput_h_constants_3.SetCooperativeLevel$172$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(SetCooperativeLevel$172 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetCooperativeLevel$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$SetCooperativeLevel$VH();
        }
        public static  MemoryAddress SetCooperativeLevel$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$SetCooperativeLevel$VH().get(seg);
        }
        public static  MemoryAddress SetCooperativeLevel$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$SetCooperativeLevel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetCooperativeLevel$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$SetCooperativeLevel$VH().set(seg, x);
        }
        public static void SetCooperativeLevel$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$SetCooperativeLevel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetObjectInfo$173 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2, int x3);
            public static  MemorySegment allocate(GetObjectInfo$173 fi) {
                return RuntimeHelper.upcallStub(GetObjectInfo$173.class, fi, dinput_h_constants_3.GetObjectInfo$173$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I");
            }
            public static  MemorySegment allocate(GetObjectInfo$173 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetObjectInfo$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$GetObjectInfo$VH();
        }
        public static  MemoryAddress GetObjectInfo$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$GetObjectInfo$VH().get(seg);
        }
        public static  MemoryAddress GetObjectInfo$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$GetObjectInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetObjectInfo$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$GetObjectInfo$VH().set(seg, x);
        }
        public static void GetObjectInfo$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$GetObjectInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceInfo$174 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetDeviceInfo$174 fi) {
                return RuntimeHelper.upcallStub(GetDeviceInfo$174.class, fi, dinput_h_constants_3.GetDeviceInfo$174$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetDeviceInfo$174 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceInfo$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$GetDeviceInfo$VH();
        }
        public static  MemoryAddress GetDeviceInfo$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$GetDeviceInfo$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceInfo$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$GetDeviceInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceInfo$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$GetDeviceInfo$VH().set(seg, x);
        }
        public static void GetDeviceInfo$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$GetDeviceInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface RunControlPanel$175 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(RunControlPanel$175 fi) {
                return RuntimeHelper.upcallStub(RunControlPanel$175.class, fi, dinput_h_constants_3.RunControlPanel$175$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(RunControlPanel$175 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle RunControlPanel$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$RunControlPanel$VH();
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$RunControlPanel$VH().get(seg);
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$RunControlPanel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RunControlPanel$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$RunControlPanel$VH().set(seg, x);
        }
        public static void RunControlPanel$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$RunControlPanel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Initialize$176 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2, jdk.incubator.foreign.MemoryAddress x3);
            public static  MemorySegment allocate(Initialize$176 fi) {
                return RuntimeHelper.upcallStub(Initialize$176.class, fi, dinput_h_constants_3.Initialize$176$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Initialize$176 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Initialize$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$Initialize$VH();
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$Initialize$VH().get(seg);
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$Initialize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Initialize$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$Initialize$VH().set(seg, x);
        }
        public static void Initialize$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$Initialize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface CreateEffect$177 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, jdk.incubator.foreign.MemoryAddress x4);
            public static  MemorySegment allocate(CreateEffect$177 fi) {
                return RuntimeHelper.upcallStub(CreateEffect$177.class, fi, dinput_h_constants_3.CreateEffect$177$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(CreateEffect$177 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle CreateEffect$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$CreateEffect$VH();
        }
        public static  MemoryAddress CreateEffect$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$CreateEffect$VH().get(seg);
        }
        public static  MemoryAddress CreateEffect$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$CreateEffect$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateEffect$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$CreateEffect$VH().set(seg, x);
        }
        public static void CreateEffect$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$CreateEffect$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumEffects$178 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3);
            public static  MemorySegment allocate(EnumEffects$178 fi) {
                return RuntimeHelper.upcallStub(EnumEffects$178.class, fi, dinput_h_constants_3.EnumEffects$178$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumEffects$178 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumEffects$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$EnumEffects$VH();
        }
        public static  MemoryAddress EnumEffects$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$EnumEffects$VH().get(seg);
        }
        public static  MemoryAddress EnumEffects$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$EnumEffects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumEffects$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$EnumEffects$VH().set(seg, x);
        }
        public static void EnumEffects$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$EnumEffects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetEffectInfo$179 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(GetEffectInfo$179 fi) {
                return RuntimeHelper.upcallStub(GetEffectInfo$179.class, fi, dinput_h_constants_3.GetEffectInfo$179$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetEffectInfo$179 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetEffectInfo$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$GetEffectInfo$VH();
        }
        public static  MemoryAddress GetEffectInfo$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$GetEffectInfo$VH().get(seg);
        }
        public static  MemoryAddress GetEffectInfo$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$GetEffectInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetEffectInfo$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$GetEffectInfo$VH().set(seg, x);
        }
        public static void GetEffectInfo$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$GetEffectInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetForceFeedbackState$180 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetForceFeedbackState$180 fi) {
                return RuntimeHelper.upcallStub(GetForceFeedbackState$180.class, fi, dinput_h_constants_3.GetForceFeedbackState$180$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetForceFeedbackState$180 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetForceFeedbackState$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$GetForceFeedbackState$VH();
        }
        public static  MemoryAddress GetForceFeedbackState$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$GetForceFeedbackState$VH().get(seg);
        }
        public static  MemoryAddress GetForceFeedbackState$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$GetForceFeedbackState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetForceFeedbackState$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$GetForceFeedbackState$VH().set(seg, x);
        }
        public static void GetForceFeedbackState$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$GetForceFeedbackState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SendForceFeedbackCommand$181 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1);
            public static  MemorySegment allocate(SendForceFeedbackCommand$181 fi) {
                return RuntimeHelper.upcallStub(SendForceFeedbackCommand$181.class, fi, dinput_h_constants_3.SendForceFeedbackCommand$181$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(SendForceFeedbackCommand$181 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SendForceFeedbackCommand$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$SendForceFeedbackCommand$VH();
        }
        public static  MemoryAddress SendForceFeedbackCommand$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$SendForceFeedbackCommand$VH().get(seg);
        }
        public static  MemoryAddress SendForceFeedbackCommand$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$SendForceFeedbackCommand$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SendForceFeedbackCommand$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$SendForceFeedbackCommand$VH().set(seg, x);
        }
        public static void SendForceFeedbackCommand$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$SendForceFeedbackCommand$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumCreatedEffectObjects$182 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3);
            public static  MemorySegment allocate(EnumCreatedEffectObjects$182 fi) {
                return RuntimeHelper.upcallStub(EnumCreatedEffectObjects$182.class, fi, dinput_h_constants_3.EnumCreatedEffectObjects$182$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumCreatedEffectObjects$182 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumCreatedEffectObjects$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$EnumCreatedEffectObjects$VH();
        }
        public static  MemoryAddress EnumCreatedEffectObjects$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$EnumCreatedEffectObjects$VH().get(seg);
        }
        public static  MemoryAddress EnumCreatedEffectObjects$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$EnumCreatedEffectObjects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumCreatedEffectObjects$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$EnumCreatedEffectObjects$VH().set(seg, x);
        }
        public static void EnumCreatedEffectObjects$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$EnumCreatedEffectObjects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Escape$183 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(Escape$183 fi) {
                return RuntimeHelper.upcallStub(Escape$183.class, fi, dinput_h_constants_3.Escape$183$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Escape$183 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Escape$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$Escape$VH();
        }
        public static  MemoryAddress Escape$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$Escape$VH().get(seg);
        }
        public static  MemoryAddress Escape$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$Escape$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Escape$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$Escape$VH().set(seg, x);
        }
        public static void Escape$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$Escape$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Poll$184 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Poll$184 fi) {
                return RuntimeHelper.upcallStub(Poll$184.class, fi, dinput_h_constants_3.Poll$184$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Poll$184 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Poll$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$Poll$VH();
        }
        public static  MemoryAddress Poll$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$Poll$VH().get(seg);
        }
        public static  MemoryAddress Poll$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$Poll$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Poll$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$Poll$VH().set(seg, x);
        }
        public static void Poll$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$Poll$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SendDeviceData$185 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(SendDeviceData$185 fi) {
                return RuntimeHelper.upcallStub(SendDeviceData$185.class, fi, dinput_h_constants_3.SendDeviceData$185$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(SendDeviceData$185 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SendDeviceData$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$SendDeviceData$VH();
        }
        public static  MemoryAddress SendDeviceData$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$SendDeviceData$VH().get(seg);
        }
        public static  MemoryAddress SendDeviceData$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$SendDeviceData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SendDeviceData$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$SendDeviceData$VH().set(seg, x);
        }
        public static void SendDeviceData$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$SendDeviceData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumEffectsInFile$186 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(EnumEffectsInFile$186 fi) {
                return RuntimeHelper.upcallStub(EnumEffectsInFile$186.class, fi, dinput_h_constants_3.EnumEffectsInFile$186$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumEffectsInFile$186 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumEffectsInFile$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$EnumEffectsInFile$VH();
        }
        public static  MemoryAddress EnumEffectsInFile$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$EnumEffectsInFile$VH().get(seg);
        }
        public static  MemoryAddress EnumEffectsInFile$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$EnumEffectsInFile$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumEffectsInFile$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$EnumEffectsInFile$VH().set(seg, x);
        }
        public static void EnumEffectsInFile$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$EnumEffectsInFile$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface WriteEffectToFile$187 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(WriteEffectToFile$187 fi) {
                return RuntimeHelper.upcallStub(WriteEffectToFile$187.class, fi, dinput_h_constants_3.WriteEffectToFile$187$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(WriteEffectToFile$187 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle WriteEffectToFile$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$WriteEffectToFile$VH();
        }
        public static  MemoryAddress WriteEffectToFile$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$WriteEffectToFile$VH().get(seg);
        }
        public static  MemoryAddress WriteEffectToFile$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$WriteEffectToFile$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void WriteEffectToFile$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$WriteEffectToFile$VH().set(seg, x);
        }
        public static void WriteEffectToFile$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$WriteEffectToFile$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface BuildActionMap$188 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3);
            public static  MemorySegment allocate(BuildActionMap$188 fi) {
                return RuntimeHelper.upcallStub(BuildActionMap$188.class, fi, dinput_h_constants_3.BuildActionMap$188$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(BuildActionMap$188 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle BuildActionMap$VH() {
            return dinput_h_constants_3.IDirectInputDevice8AVtbl$BuildActionMap$VH();
        }
        public static  MemoryAddress BuildActionMap$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$BuildActionMap$VH().get(seg);
        }
        public static  MemoryAddress BuildActionMap$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_3.IDirectInputDevice8AVtbl$BuildActionMap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BuildActionMap$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$BuildActionMap$VH().set(seg, x);
        }
        public static void BuildActionMap$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_3.IDirectInputDevice8AVtbl$BuildActionMap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface SetActionMap$189 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3);
            public static  MemorySegment allocate(SetActionMap$189 fi) {
                return RuntimeHelper.upcallStub(SetActionMap$189.class, fi, dinput_h_constants_4.SetActionMap$189$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(SetActionMap$189 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle SetActionMap$VH() {
            return dinput_h_constants_4.IDirectInputDevice8AVtbl$SetActionMap$VH();
        }
        public static  MemoryAddress SetActionMap$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputDevice8AVtbl$SetActionMap$VH().get(seg);
        }
        public static  MemoryAddress SetActionMap$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputDevice8AVtbl$SetActionMap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetActionMap$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputDevice8AVtbl$SetActionMap$VH().set(seg, x);
        }
        public static void SetActionMap$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputDevice8AVtbl$SetActionMap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetImageInfo$190 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetImageInfo$190 fi) {
                return RuntimeHelper.upcallStub(GetImageInfo$190.class, fi, dinput_h_constants_4.GetImageInfo$190$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetImageInfo$190 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetImageInfo$VH() {
            return dinput_h_constants_4.IDirectInputDevice8AVtbl$GetImageInfo$VH();
        }
        public static  MemoryAddress GetImageInfo$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputDevice8AVtbl$GetImageInfo$VH().get(seg);
        }
        public static  MemoryAddress GetImageInfo$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputDevice8AVtbl$GetImageInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetImageInfo$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputDevice8AVtbl$GetImageInfo$VH().set(seg, x);
        }
        public static void GetImageInfo$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputDevice8AVtbl$GetImageInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class _DIMOUSESTATE {

        /* package-private */ _DIMOUSESTATE() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_4._DIMOUSESTATE$struct$LAYOUT();
        }
        public static VarHandle lX$VH() {
            return dinput_h_constants_4._DIMOUSESTATE$lX$VH();
        }
        public static  int lX$get(MemorySegment seg) {
            return (int)dinput_h_constants_4._DIMOUSESTATE$lX$VH().get(seg);
        }
        public static  int lX$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4._DIMOUSESTATE$lX$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lX$set( MemorySegment seg, int x) {
            dinput_h_constants_4._DIMOUSESTATE$lX$VH().set(seg, x);
        }
        public static void lX$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4._DIMOUSESTATE$lX$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lY$VH() {
            return dinput_h_constants_4._DIMOUSESTATE$lY$VH();
        }
        public static  int lY$get(MemorySegment seg) {
            return (int)dinput_h_constants_4._DIMOUSESTATE$lY$VH().get(seg);
        }
        public static  int lY$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4._DIMOUSESTATE$lY$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lY$set( MemorySegment seg, int x) {
            dinput_h_constants_4._DIMOUSESTATE$lY$VH().set(seg, x);
        }
        public static void lY$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4._DIMOUSESTATE$lY$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lZ$VH() {
            return dinput_h_constants_4._DIMOUSESTATE$lZ$VH();
        }
        public static  int lZ$get(MemorySegment seg) {
            return (int)dinput_h_constants_4._DIMOUSESTATE$lZ$VH().get(seg);
        }
        public static  int lZ$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4._DIMOUSESTATE$lZ$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lZ$set( MemorySegment seg, int x) {
            dinput_h_constants_4._DIMOUSESTATE$lZ$VH().set(seg, x);
        }
        public static void lZ$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4._DIMOUSESTATE$lZ$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment rgbButtons$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(12, 4));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIMOUSESTATE extends _DIMOUSESTATE {

        /* package-private */ DIMOUSESTATE() {}
    }

    public static class _DIMOUSESTATE2 {

        /* package-private */ _DIMOUSESTATE2() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_4._DIMOUSESTATE2$struct$LAYOUT();
        }
        public static VarHandle lX$VH() {
            return dinput_h_constants_4._DIMOUSESTATE2$lX$VH();
        }
        public static  int lX$get(MemorySegment seg) {
            return (int)dinput_h_constants_4._DIMOUSESTATE2$lX$VH().get(seg);
        }
        public static  int lX$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4._DIMOUSESTATE2$lX$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lX$set( MemorySegment seg, int x) {
            dinput_h_constants_4._DIMOUSESTATE2$lX$VH().set(seg, x);
        }
        public static void lX$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4._DIMOUSESTATE2$lX$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lY$VH() {
            return dinput_h_constants_4._DIMOUSESTATE2$lY$VH();
        }
        public static  int lY$get(MemorySegment seg) {
            return (int)dinput_h_constants_4._DIMOUSESTATE2$lY$VH().get(seg);
        }
        public static  int lY$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4._DIMOUSESTATE2$lY$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lY$set( MemorySegment seg, int x) {
            dinput_h_constants_4._DIMOUSESTATE2$lY$VH().set(seg, x);
        }
        public static void lY$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4._DIMOUSESTATE2$lY$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lZ$VH() {
            return dinput_h_constants_4._DIMOUSESTATE2$lZ$VH();
        }
        public static  int lZ$get(MemorySegment seg) {
            return (int)dinput_h_constants_4._DIMOUSESTATE2$lZ$VH().get(seg);
        }
        public static  int lZ$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4._DIMOUSESTATE2$lZ$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lZ$set( MemorySegment seg, int x) {
            dinput_h_constants_4._DIMOUSESTATE2$lZ$VH().set(seg, x);
        }
        public static void lZ$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4._DIMOUSESTATE2$lZ$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment rgbButtons$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(12, 8));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIMOUSESTATE2 extends _DIMOUSESTATE2 {

        /* package-private */ DIMOUSESTATE2() {}
    }

    public static class DIJOYSTATE {

        /* package-private */ DIJOYSTATE() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_4.DIJOYSTATE$struct$LAYOUT();
        }
        public static VarHandle lX$VH() {
            return dinput_h_constants_4.DIJOYSTATE$lX$VH();
        }
        public static  int lX$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE$lX$VH().get(seg);
        }
        public static  int lX$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE$lX$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lX$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE$lX$VH().set(seg, x);
        }
        public static void lX$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE$lX$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lY$VH() {
            return dinput_h_constants_4.DIJOYSTATE$lY$VH();
        }
        public static  int lY$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE$lY$VH().get(seg);
        }
        public static  int lY$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE$lY$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lY$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE$lY$VH().set(seg, x);
        }
        public static void lY$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE$lY$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lZ$VH() {
            return dinput_h_constants_4.DIJOYSTATE$lZ$VH();
        }
        public static  int lZ$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE$lZ$VH().get(seg);
        }
        public static  int lZ$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE$lZ$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lZ$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE$lZ$VH().set(seg, x);
        }
        public static void lZ$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE$lZ$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lRx$VH() {
            return dinput_h_constants_4.DIJOYSTATE$lRx$VH();
        }
        public static  int lRx$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE$lRx$VH().get(seg);
        }
        public static  int lRx$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE$lRx$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lRx$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE$lRx$VH().set(seg, x);
        }
        public static void lRx$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE$lRx$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lRy$VH() {
            return dinput_h_constants_4.DIJOYSTATE$lRy$VH();
        }
        public static  int lRy$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE$lRy$VH().get(seg);
        }
        public static  int lRy$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE$lRy$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lRy$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE$lRy$VH().set(seg, x);
        }
        public static void lRy$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE$lRy$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lRz$VH() {
            return dinput_h_constants_4.DIJOYSTATE$lRz$VH();
        }
        public static  int lRz$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE$lRz$VH().get(seg);
        }
        public static  int lRz$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE$lRz$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lRz$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE$lRz$VH().set(seg, x);
        }
        public static void lRz$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE$lRz$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment rglSlider$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(24, 8));
        }
        public static MemorySegment rgdwPOV$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(32, 16));
        }
        public static MemorySegment rgbButtons$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(48, 32));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class DIJOYSTATE2 {

        /* package-private */ DIJOYSTATE2() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_4.DIJOYSTATE2$struct$LAYOUT();
        }
        public static VarHandle lX$VH() {
            return dinput_h_constants_4.DIJOYSTATE2$lX$VH();
        }
        public static  int lX$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lX$VH().get(seg);
        }
        public static  int lX$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lX$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lX$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lX$VH().set(seg, x);
        }
        public static void lX$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lX$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lY$VH() {
            return dinput_h_constants_4.DIJOYSTATE2$lY$VH();
        }
        public static  int lY$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lY$VH().get(seg);
        }
        public static  int lY$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lY$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lY$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lY$VH().set(seg, x);
        }
        public static void lY$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lY$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lZ$VH() {
            return dinput_h_constants_4.DIJOYSTATE2$lZ$VH();
        }
        public static  int lZ$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lZ$VH().get(seg);
        }
        public static  int lZ$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lZ$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lZ$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lZ$VH().set(seg, x);
        }
        public static void lZ$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lZ$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lRx$VH() {
            return dinput_h_constants_4.DIJOYSTATE2$lRx$VH();
        }
        public static  int lRx$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lRx$VH().get(seg);
        }
        public static  int lRx$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lRx$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lRx$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lRx$VH().set(seg, x);
        }
        public static void lRx$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lRx$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lRy$VH() {
            return dinput_h_constants_4.DIJOYSTATE2$lRy$VH();
        }
        public static  int lRy$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lRy$VH().get(seg);
        }
        public static  int lRy$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lRy$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lRy$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lRy$VH().set(seg, x);
        }
        public static void lRy$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lRy$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lRz$VH() {
            return dinput_h_constants_4.DIJOYSTATE2$lRz$VH();
        }
        public static  int lRz$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lRz$VH().get(seg);
        }
        public static  int lRz$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lRz$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lRz$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lRz$VH().set(seg, x);
        }
        public static void lRz$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lRz$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment rglSlider$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(24, 8));
        }
        public static MemorySegment rgdwPOV$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(32, 16));
        }
        public static MemorySegment rgbButtons$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(48, 128));
        }
        public static VarHandle lVX$VH() {
            return dinput_h_constants_4.DIJOYSTATE2$lVX$VH();
        }
        public static  int lVX$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lVX$VH().get(seg);
        }
        public static  int lVX$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lVX$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lVX$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lVX$VH().set(seg, x);
        }
        public static void lVX$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lVX$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lVY$VH() {
            return dinput_h_constants_4.DIJOYSTATE2$lVY$VH();
        }
        public static  int lVY$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lVY$VH().get(seg);
        }
        public static  int lVY$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lVY$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lVY$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lVY$VH().set(seg, x);
        }
        public static void lVY$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lVY$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lVZ$VH() {
            return dinput_h_constants_4.DIJOYSTATE2$lVZ$VH();
        }
        public static  int lVZ$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lVZ$VH().get(seg);
        }
        public static  int lVZ$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lVZ$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lVZ$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lVZ$VH().set(seg, x);
        }
        public static void lVZ$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lVZ$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lVRx$VH() {
            return dinput_h_constants_4.DIJOYSTATE2$lVRx$VH();
        }
        public static  int lVRx$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lVRx$VH().get(seg);
        }
        public static  int lVRx$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lVRx$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lVRx$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lVRx$VH().set(seg, x);
        }
        public static void lVRx$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lVRx$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lVRy$VH() {
            return dinput_h_constants_4.DIJOYSTATE2$lVRy$VH();
        }
        public static  int lVRy$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lVRy$VH().get(seg);
        }
        public static  int lVRy$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lVRy$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lVRy$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lVRy$VH().set(seg, x);
        }
        public static void lVRy$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lVRy$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lVRz$VH() {
            return dinput_h_constants_4.DIJOYSTATE2$lVRz$VH();
        }
        public static  int lVRz$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lVRz$VH().get(seg);
        }
        public static  int lVRz$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lVRz$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lVRz$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lVRz$VH().set(seg, x);
        }
        public static void lVRz$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lVRz$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment rglVSlider$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(200, 8));
        }
        public static VarHandle lAX$VH() {
            return dinput_h_constants_4.DIJOYSTATE2$lAX$VH();
        }
        public static  int lAX$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lAX$VH().get(seg);
        }
        public static  int lAX$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lAX$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lAX$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lAX$VH().set(seg, x);
        }
        public static void lAX$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lAX$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lAY$VH() {
            return dinput_h_constants_4.DIJOYSTATE2$lAY$VH();
        }
        public static  int lAY$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lAY$VH().get(seg);
        }
        public static  int lAY$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lAY$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lAY$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lAY$VH().set(seg, x);
        }
        public static void lAY$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lAY$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lAZ$VH() {
            return dinput_h_constants_4.DIJOYSTATE2$lAZ$VH();
        }
        public static  int lAZ$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lAZ$VH().get(seg);
        }
        public static  int lAZ$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lAZ$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lAZ$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lAZ$VH().set(seg, x);
        }
        public static void lAZ$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lAZ$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lARx$VH() {
            return dinput_h_constants_4.DIJOYSTATE2$lARx$VH();
        }
        public static  int lARx$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lARx$VH().get(seg);
        }
        public static  int lARx$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lARx$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lARx$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lARx$VH().set(seg, x);
        }
        public static void lARx$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lARx$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lARy$VH() {
            return dinput_h_constants_4.DIJOYSTATE2$lARy$VH();
        }
        public static  int lARy$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lARy$VH().get(seg);
        }
        public static  int lARy$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lARy$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lARy$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lARy$VH().set(seg, x);
        }
        public static void lARy$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lARy$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lARz$VH() {
            return dinput_h_constants_4.DIJOYSTATE2$lARz$VH();
        }
        public static  int lARz$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lARz$VH().get(seg);
        }
        public static  int lARz$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lARz$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lARz$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lARz$VH().set(seg, x);
        }
        public static void lARz$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lARz$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment rglASlider$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(232, 8));
        }
        public static VarHandle lFX$VH() {
            return dinput_h_constants_4.DIJOYSTATE2$lFX$VH();
        }
        public static  int lFX$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lFX$VH().get(seg);
        }
        public static  int lFX$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lFX$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lFX$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lFX$VH().set(seg, x);
        }
        public static void lFX$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lFX$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lFY$VH() {
            return dinput_h_constants_4.DIJOYSTATE2$lFY$VH();
        }
        public static  int lFY$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lFY$VH().get(seg);
        }
        public static  int lFY$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lFY$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lFY$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lFY$VH().set(seg, x);
        }
        public static void lFY$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lFY$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lFZ$VH() {
            return dinput_h_constants_4.DIJOYSTATE2$lFZ$VH();
        }
        public static  int lFZ$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lFZ$VH().get(seg);
        }
        public static  int lFZ$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lFZ$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lFZ$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lFZ$VH().set(seg, x);
        }
        public static void lFZ$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lFZ$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lFRx$VH() {
            return dinput_h_constants_4.DIJOYSTATE2$lFRx$VH();
        }
        public static  int lFRx$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lFRx$VH().get(seg);
        }
        public static  int lFRx$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lFRx$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lFRx$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lFRx$VH().set(seg, x);
        }
        public static void lFRx$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lFRx$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lFRy$VH() {
            return dinput_h_constants_4.DIJOYSTATE2$lFRy$VH();
        }
        public static  int lFRy$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lFRy$VH().get(seg);
        }
        public static  int lFRy$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lFRy$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lFRy$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lFRy$VH().set(seg, x);
        }
        public static void lFRy$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lFRy$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lFRz$VH() {
            return dinput_h_constants_4.DIJOYSTATE2$lFRz$VH();
        }
        public static  int lFRz$get(MemorySegment seg) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lFRz$VH().get(seg);
        }
        public static  int lFRz$get(MemorySegment seg, long index) {
            return (int)dinput_h_constants_4.DIJOYSTATE2$lFRz$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lFRz$set( MemorySegment seg, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lFRz$VH().set(seg, x);
        }
        public static void lFRz$set(MemorySegment seg, long index, int x) {
            dinput_h_constants_4.DIJOYSTATE2$lFRz$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment rglFSlider$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(264, 8));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static interface LPDIENUMDEVICESCALLBACKA {

        int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
        public static  MemorySegment allocate(LPDIENUMDEVICESCALLBACKA fi) {
            return RuntimeHelper.upcallStub(LPDIENUMDEVICESCALLBACKA.class, fi, dinput_h_constants_4.LPDIENUMDEVICESCALLBACKA$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
        }
        public static  MemorySegment allocate(LPDIENUMDEVICESCALLBACKA fi, NativeScope scope) {
            return allocate(fi).handoff(scope);
        }
    }

    public static interface LPDIENUMDEVICESCALLBACKW {

        int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
        public static  MemorySegment allocate(LPDIENUMDEVICESCALLBACKW fi) {
            return RuntimeHelper.upcallStub(LPDIENUMDEVICESCALLBACKW.class, fi, dinput_h_constants_4.LPDIENUMDEVICESCALLBACKW$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
        }
        public static  MemorySegment allocate(LPDIENUMDEVICESCALLBACKW fi, NativeScope scope) {
            return allocate(fi).handoff(scope);
        }
    }

    public static interface LPDICONFIGUREDEVICESCALLBACK {

        int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
        public static  MemorySegment allocate(LPDICONFIGUREDEVICESCALLBACK fi) {
            return RuntimeHelper.upcallStub(LPDICONFIGUREDEVICESCALLBACK.class, fi, dinput_h_constants_4.LPDICONFIGUREDEVICESCALLBACK$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
        }
        public static  MemorySegment allocate(LPDICONFIGUREDEVICESCALLBACK fi, NativeScope scope) {
            return allocate(fi).handoff(scope);
        }
    }

    public static interface LPDIENUMDEVICESBYSEMANTICSCBA {

        int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2, int x3, jdk.incubator.foreign.MemoryAddress x4);
        public static  MemorySegment allocate(LPDIENUMDEVICESBYSEMANTICSCBA fi) {
            return RuntimeHelper.upcallStub(LPDIENUMDEVICESBYSEMANTICSCBA.class, fi, dinput_h_constants_4.LPDIENUMDEVICESBYSEMANTICSCBA$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I");
        }
        public static  MemorySegment allocate(LPDIENUMDEVICESBYSEMANTICSCBA fi, NativeScope scope) {
            return allocate(fi).handoff(scope);
        }
    }

    public static interface LPDIENUMDEVICESBYSEMANTICSCBW {

        int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2, int x3, jdk.incubator.foreign.MemoryAddress x4);
        public static  MemorySegment allocate(LPDIENUMDEVICESBYSEMANTICSCBW fi) {
            return RuntimeHelper.upcallStub(LPDIENUMDEVICESBYSEMANTICSCBW.class, fi, dinput_h_constants_4.LPDIENUMDEVICESBYSEMANTICSCBW$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I");
        }
        public static  MemorySegment allocate(LPDIENUMDEVICESBYSEMANTICSCBW fi, NativeScope scope) {
            return allocate(fi).handoff(scope);
        }
    }

    public static class IDirectInputW {

        /* package-private */ IDirectInputW() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_4.IDirectInputW$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dinput_h_constants_4.IDirectInputW$lpVtbl$VH();
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputW$lpVtbl$VH().get(seg);
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputW$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputW$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputW$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInputWVtbl {

        /* package-private */ IDirectInputWVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_4.IDirectInputWVtbl$struct$LAYOUT();
        }
        public static interface QueryInterface$191 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(QueryInterface$191 fi) {
                return RuntimeHelper.upcallStub(QueryInterface$191.class, fi, dinput_h_constants_4.QueryInterface$191$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(QueryInterface$191 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle QueryInterface$VH() {
            return dinput_h_constants_4.IDirectInputWVtbl$QueryInterface$VH();
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputWVtbl$QueryInterface$VH().get(seg);
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputWVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputWVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputWVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface AddRef$192 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(AddRef$192 fi) {
                return RuntimeHelper.upcallStub(AddRef$192.class, fi, dinput_h_constants_4.AddRef$192$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(AddRef$192 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle AddRef$VH() {
            return dinput_h_constants_4.IDirectInputWVtbl$AddRef$VH();
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputWVtbl$AddRef$VH().get(seg);
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputWVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputWVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputWVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Release$193 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Release$193 fi) {
                return RuntimeHelper.upcallStub(Release$193.class, fi, dinput_h_constants_4.Release$193$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Release$193 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Release$VH() {
            return dinput_h_constants_4.IDirectInputWVtbl$Release$VH();
        }
        public static  MemoryAddress Release$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputWVtbl$Release$VH().get(seg);
        }
        public static  MemoryAddress Release$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputWVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputWVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputWVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface CreateDevice {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3);
            public static  MemorySegment allocate(CreateDevice fi) {
                return RuntimeHelper.upcallStub(CreateDevice.class, fi, dinput_h_constants_4.CreateDevice$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(CreateDevice fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle CreateDevice$VH() {
            return dinput_h_constants_4.IDirectInputWVtbl$CreateDevice$VH();
        }
        public static  MemoryAddress CreateDevice$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputWVtbl$CreateDevice$VH().get(seg);
        }
        public static  MemoryAddress CreateDevice$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputWVtbl$CreateDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDevice$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputWVtbl$CreateDevice$VH().set(seg, x);
        }
        public static void CreateDevice$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputWVtbl$CreateDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumDevices {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(EnumDevices fi) {
                return RuntimeHelper.upcallStub(EnumDevices.class, fi, dinput_h_constants_4.EnumDevices$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumDevices fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumDevices$VH() {
            return dinput_h_constants_4.IDirectInputWVtbl$EnumDevices$VH();
        }
        public static  MemoryAddress EnumDevices$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputWVtbl$EnumDevices$VH().get(seg);
        }
        public static  MemoryAddress EnumDevices$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputWVtbl$EnumDevices$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumDevices$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputWVtbl$EnumDevices$VH().set(seg, x);
        }
        public static void EnumDevices$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputWVtbl$EnumDevices$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceStatus {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetDeviceStatus fi) {
                return RuntimeHelper.upcallStub(GetDeviceStatus.class, fi, dinput_h_constants_4.GetDeviceStatus$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetDeviceStatus fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceStatus$VH() {
            return dinput_h_constants_4.IDirectInputWVtbl$GetDeviceStatus$VH();
        }
        public static  MemoryAddress GetDeviceStatus$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputWVtbl$GetDeviceStatus$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceStatus$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputWVtbl$GetDeviceStatus$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceStatus$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputWVtbl$GetDeviceStatus$VH().set(seg, x);
        }
        public static void GetDeviceStatus$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputWVtbl$GetDeviceStatus$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface RunControlPanel$194 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(RunControlPanel$194 fi) {
                return RuntimeHelper.upcallStub(RunControlPanel$194.class, fi, dinput_h_constants_4.RunControlPanel$194$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(RunControlPanel$194 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle RunControlPanel$VH() {
            return dinput_h_constants_4.IDirectInputWVtbl$RunControlPanel$VH();
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputWVtbl$RunControlPanel$VH().get(seg);
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputWVtbl$RunControlPanel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RunControlPanel$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputWVtbl$RunControlPanel$VH().set(seg, x);
        }
        public static void RunControlPanel$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputWVtbl$RunControlPanel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Initialize$195 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(Initialize$195 fi) {
                return RuntimeHelper.upcallStub(Initialize$195.class, fi, dinput_h_constants_4.Initialize$195$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(Initialize$195 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Initialize$VH() {
            return dinput_h_constants_4.IDirectInputWVtbl$Initialize$VH();
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputWVtbl$Initialize$VH().get(seg);
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputWVtbl$Initialize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Initialize$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputWVtbl$Initialize$VH().set(seg, x);
        }
        public static void Initialize$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputWVtbl$Initialize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInputA {

        /* package-private */ IDirectInputA() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_4.IDirectInputA$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dinput_h_constants_4.IDirectInputA$lpVtbl$VH();
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputA$lpVtbl$VH().get(seg);
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputA$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputA$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputA$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInputAVtbl {

        /* package-private */ IDirectInputAVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_4.IDirectInputAVtbl$struct$LAYOUT();
        }
        public static interface QueryInterface$196 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(QueryInterface$196 fi) {
                return RuntimeHelper.upcallStub(QueryInterface$196.class, fi, dinput_h_constants_4.QueryInterface$196$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(QueryInterface$196 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle QueryInterface$VH() {
            return dinput_h_constants_4.IDirectInputAVtbl$QueryInterface$VH();
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputAVtbl$QueryInterface$VH().get(seg);
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputAVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputAVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputAVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface AddRef$197 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(AddRef$197 fi) {
                return RuntimeHelper.upcallStub(AddRef$197.class, fi, dinput_h_constants_4.AddRef$197$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(AddRef$197 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle AddRef$VH() {
            return dinput_h_constants_4.IDirectInputAVtbl$AddRef$VH();
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputAVtbl$AddRef$VH().get(seg);
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputAVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputAVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputAVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Release$198 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Release$198 fi) {
                return RuntimeHelper.upcallStub(Release$198.class, fi, dinput_h_constants_4.Release$198$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Release$198 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Release$VH() {
            return dinput_h_constants_4.IDirectInputAVtbl$Release$VH();
        }
        public static  MemoryAddress Release$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputAVtbl$Release$VH().get(seg);
        }
        public static  MemoryAddress Release$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputAVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputAVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputAVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface CreateDevice$199 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3);
            public static  MemorySegment allocate(CreateDevice$199 fi) {
                return RuntimeHelper.upcallStub(CreateDevice$199.class, fi, dinput_h_constants_4.CreateDevice$199$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(CreateDevice$199 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle CreateDevice$VH() {
            return dinput_h_constants_4.IDirectInputAVtbl$CreateDevice$VH();
        }
        public static  MemoryAddress CreateDevice$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputAVtbl$CreateDevice$VH().get(seg);
        }
        public static  MemoryAddress CreateDevice$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputAVtbl$CreateDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDevice$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputAVtbl$CreateDevice$VH().set(seg, x);
        }
        public static void CreateDevice$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputAVtbl$CreateDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumDevices$200 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(EnumDevices$200 fi) {
                return RuntimeHelper.upcallStub(EnumDevices$200.class, fi, dinput_h_constants_4.EnumDevices$200$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumDevices$200 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumDevices$VH() {
            return dinput_h_constants_4.IDirectInputAVtbl$EnumDevices$VH();
        }
        public static  MemoryAddress EnumDevices$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputAVtbl$EnumDevices$VH().get(seg);
        }
        public static  MemoryAddress EnumDevices$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputAVtbl$EnumDevices$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumDevices$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputAVtbl$EnumDevices$VH().set(seg, x);
        }
        public static void EnumDevices$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputAVtbl$EnumDevices$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceStatus$201 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetDeviceStatus$201 fi) {
                return RuntimeHelper.upcallStub(GetDeviceStatus$201.class, fi, dinput_h_constants_4.GetDeviceStatus$201$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetDeviceStatus$201 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceStatus$VH() {
            return dinput_h_constants_4.IDirectInputAVtbl$GetDeviceStatus$VH();
        }
        public static  MemoryAddress GetDeviceStatus$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputAVtbl$GetDeviceStatus$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceStatus$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputAVtbl$GetDeviceStatus$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceStatus$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputAVtbl$GetDeviceStatus$VH().set(seg, x);
        }
        public static void GetDeviceStatus$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputAVtbl$GetDeviceStatus$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface RunControlPanel$202 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(RunControlPanel$202 fi) {
                return RuntimeHelper.upcallStub(RunControlPanel$202.class, fi, dinput_h_constants_4.RunControlPanel$202$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(RunControlPanel$202 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle RunControlPanel$VH() {
            return dinput_h_constants_4.IDirectInputAVtbl$RunControlPanel$VH();
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputAVtbl$RunControlPanel$VH().get(seg);
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputAVtbl$RunControlPanel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RunControlPanel$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputAVtbl$RunControlPanel$VH().set(seg, x);
        }
        public static void RunControlPanel$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputAVtbl$RunControlPanel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Initialize$203 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(Initialize$203 fi) {
                return RuntimeHelper.upcallStub(Initialize$203.class, fi, dinput_h_constants_4.Initialize$203$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(Initialize$203 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Initialize$VH() {
            return dinput_h_constants_4.IDirectInputAVtbl$Initialize$VH();
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputAVtbl$Initialize$VH().get(seg);
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInputAVtbl$Initialize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Initialize$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputAVtbl$Initialize$VH().set(seg, x);
        }
        public static void Initialize$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInputAVtbl$Initialize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInput2W {

        /* package-private */ IDirectInput2W() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_4.IDirectInput2W$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dinput_h_constants_4.IDirectInput2W$lpVtbl$VH();
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2W$lpVtbl$VH().get(seg);
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2W$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2W$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2W$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInput2WVtbl {

        /* package-private */ IDirectInput2WVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_4.IDirectInput2WVtbl$struct$LAYOUT();
        }
        public static interface QueryInterface$204 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(QueryInterface$204 fi) {
                return RuntimeHelper.upcallStub(QueryInterface$204.class, fi, dinput_h_constants_4.QueryInterface$204$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(QueryInterface$204 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle QueryInterface$VH() {
            return dinput_h_constants_4.IDirectInput2WVtbl$QueryInterface$VH();
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2WVtbl$QueryInterface$VH().get(seg);
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2WVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2WVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2WVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface AddRef$205 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(AddRef$205 fi) {
                return RuntimeHelper.upcallStub(AddRef$205.class, fi, dinput_h_constants_4.AddRef$205$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(AddRef$205 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle AddRef$VH() {
            return dinput_h_constants_4.IDirectInput2WVtbl$AddRef$VH();
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2WVtbl$AddRef$VH().get(seg);
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2WVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2WVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2WVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Release$206 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Release$206 fi) {
                return RuntimeHelper.upcallStub(Release$206.class, fi, dinput_h_constants_4.Release$206$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Release$206 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Release$VH() {
            return dinput_h_constants_4.IDirectInput2WVtbl$Release$VH();
        }
        public static  MemoryAddress Release$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2WVtbl$Release$VH().get(seg);
        }
        public static  MemoryAddress Release$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2WVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2WVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2WVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface CreateDevice$207 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3);
            public static  MemorySegment allocate(CreateDevice$207 fi) {
                return RuntimeHelper.upcallStub(CreateDevice$207.class, fi, dinput_h_constants_4.CreateDevice$207$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(CreateDevice$207 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle CreateDevice$VH() {
            return dinput_h_constants_4.IDirectInput2WVtbl$CreateDevice$VH();
        }
        public static  MemoryAddress CreateDevice$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2WVtbl$CreateDevice$VH().get(seg);
        }
        public static  MemoryAddress CreateDevice$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2WVtbl$CreateDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDevice$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2WVtbl$CreateDevice$VH().set(seg, x);
        }
        public static void CreateDevice$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2WVtbl$CreateDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumDevices$208 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(EnumDevices$208 fi) {
                return RuntimeHelper.upcallStub(EnumDevices$208.class, fi, dinput_h_constants_4.EnumDevices$208$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumDevices$208 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumDevices$VH() {
            return dinput_h_constants_4.IDirectInput2WVtbl$EnumDevices$VH();
        }
        public static  MemoryAddress EnumDevices$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2WVtbl$EnumDevices$VH().get(seg);
        }
        public static  MemoryAddress EnumDevices$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2WVtbl$EnumDevices$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumDevices$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2WVtbl$EnumDevices$VH().set(seg, x);
        }
        public static void EnumDevices$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2WVtbl$EnumDevices$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceStatus$209 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetDeviceStatus$209 fi) {
                return RuntimeHelper.upcallStub(GetDeviceStatus$209.class, fi, dinput_h_constants_4.GetDeviceStatus$209$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetDeviceStatus$209 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceStatus$VH() {
            return dinput_h_constants_4.IDirectInput2WVtbl$GetDeviceStatus$VH();
        }
        public static  MemoryAddress GetDeviceStatus$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2WVtbl$GetDeviceStatus$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceStatus$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2WVtbl$GetDeviceStatus$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceStatus$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2WVtbl$GetDeviceStatus$VH().set(seg, x);
        }
        public static void GetDeviceStatus$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2WVtbl$GetDeviceStatus$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface RunControlPanel$210 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(RunControlPanel$210 fi) {
                return RuntimeHelper.upcallStub(RunControlPanel$210.class, fi, dinput_h_constants_4.RunControlPanel$210$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(RunControlPanel$210 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle RunControlPanel$VH() {
            return dinput_h_constants_4.IDirectInput2WVtbl$RunControlPanel$VH();
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2WVtbl$RunControlPanel$VH().get(seg);
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2WVtbl$RunControlPanel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RunControlPanel$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2WVtbl$RunControlPanel$VH().set(seg, x);
        }
        public static void RunControlPanel$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2WVtbl$RunControlPanel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Initialize$211 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(Initialize$211 fi) {
                return RuntimeHelper.upcallStub(Initialize$211.class, fi, dinput_h_constants_4.Initialize$211$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(Initialize$211 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Initialize$VH() {
            return dinput_h_constants_4.IDirectInput2WVtbl$Initialize$VH();
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2WVtbl$Initialize$VH().get(seg);
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2WVtbl$Initialize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Initialize$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2WVtbl$Initialize$VH().set(seg, x);
        }
        public static void Initialize$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2WVtbl$Initialize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface FindDevice {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3);
            public static  MemorySegment allocate(FindDevice fi) {
                return RuntimeHelper.upcallStub(FindDevice.class, fi, dinput_h_constants_4.FindDevice$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(FindDevice fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle FindDevice$VH() {
            return dinput_h_constants_4.IDirectInput2WVtbl$FindDevice$VH();
        }
        public static  MemoryAddress FindDevice$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2WVtbl$FindDevice$VH().get(seg);
        }
        public static  MemoryAddress FindDevice$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2WVtbl$FindDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FindDevice$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2WVtbl$FindDevice$VH().set(seg, x);
        }
        public static void FindDevice$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2WVtbl$FindDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInput2A {

        /* package-private */ IDirectInput2A() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_4.IDirectInput2A$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dinput_h_constants_4.IDirectInput2A$lpVtbl$VH();
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2A$lpVtbl$VH().get(seg);
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2A$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2A$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2A$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInput2AVtbl {

        /* package-private */ IDirectInput2AVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_4.IDirectInput2AVtbl$struct$LAYOUT();
        }
        public static interface QueryInterface$212 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(QueryInterface$212 fi) {
                return RuntimeHelper.upcallStub(QueryInterface$212.class, fi, dinput_h_constants_4.QueryInterface$212$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(QueryInterface$212 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle QueryInterface$VH() {
            return dinput_h_constants_4.IDirectInput2AVtbl$QueryInterface$VH();
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2AVtbl$QueryInterface$VH().get(seg);
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2AVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2AVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2AVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface AddRef$213 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(AddRef$213 fi) {
                return RuntimeHelper.upcallStub(AddRef$213.class, fi, dinput_h_constants_4.AddRef$213$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(AddRef$213 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle AddRef$VH() {
            return dinput_h_constants_4.IDirectInput2AVtbl$AddRef$VH();
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2AVtbl$AddRef$VH().get(seg);
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2AVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2AVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2AVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Release$214 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Release$214 fi) {
                return RuntimeHelper.upcallStub(Release$214.class, fi, dinput_h_constants_4.Release$214$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Release$214 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Release$VH() {
            return dinput_h_constants_4.IDirectInput2AVtbl$Release$VH();
        }
        public static  MemoryAddress Release$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2AVtbl$Release$VH().get(seg);
        }
        public static  MemoryAddress Release$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2AVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2AVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2AVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface CreateDevice$215 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3);
            public static  MemorySegment allocate(CreateDevice$215 fi) {
                return RuntimeHelper.upcallStub(CreateDevice$215.class, fi, dinput_h_constants_4.CreateDevice$215$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(CreateDevice$215 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle CreateDevice$VH() {
            return dinput_h_constants_4.IDirectInput2AVtbl$CreateDevice$VH();
        }
        public static  MemoryAddress CreateDevice$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2AVtbl$CreateDevice$VH().get(seg);
        }
        public static  MemoryAddress CreateDevice$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2AVtbl$CreateDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDevice$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2AVtbl$CreateDevice$VH().set(seg, x);
        }
        public static void CreateDevice$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2AVtbl$CreateDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumDevices$216 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(EnumDevices$216 fi) {
                return RuntimeHelper.upcallStub(EnumDevices$216.class, fi, dinput_h_constants_4.EnumDevices$216$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumDevices$216 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumDevices$VH() {
            return dinput_h_constants_4.IDirectInput2AVtbl$EnumDevices$VH();
        }
        public static  MemoryAddress EnumDevices$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2AVtbl$EnumDevices$VH().get(seg);
        }
        public static  MemoryAddress EnumDevices$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2AVtbl$EnumDevices$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumDevices$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2AVtbl$EnumDevices$VH().set(seg, x);
        }
        public static void EnumDevices$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2AVtbl$EnumDevices$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceStatus$217 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetDeviceStatus$217 fi) {
                return RuntimeHelper.upcallStub(GetDeviceStatus$217.class, fi, dinput_h_constants_4.GetDeviceStatus$217$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetDeviceStatus$217 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceStatus$VH() {
            return dinput_h_constants_4.IDirectInput2AVtbl$GetDeviceStatus$VH();
        }
        public static  MemoryAddress GetDeviceStatus$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2AVtbl$GetDeviceStatus$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceStatus$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2AVtbl$GetDeviceStatus$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceStatus$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2AVtbl$GetDeviceStatus$VH().set(seg, x);
        }
        public static void GetDeviceStatus$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2AVtbl$GetDeviceStatus$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface RunControlPanel$218 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(RunControlPanel$218 fi) {
                return RuntimeHelper.upcallStub(RunControlPanel$218.class, fi, dinput_h_constants_4.RunControlPanel$218$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(RunControlPanel$218 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle RunControlPanel$VH() {
            return dinput_h_constants_4.IDirectInput2AVtbl$RunControlPanel$VH();
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2AVtbl$RunControlPanel$VH().get(seg);
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2AVtbl$RunControlPanel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RunControlPanel$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2AVtbl$RunControlPanel$VH().set(seg, x);
        }
        public static void RunControlPanel$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2AVtbl$RunControlPanel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Initialize$219 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(Initialize$219 fi) {
                return RuntimeHelper.upcallStub(Initialize$219.class, fi, dinput_h_constants_4.Initialize$219$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(Initialize$219 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Initialize$VH() {
            return dinput_h_constants_4.IDirectInput2AVtbl$Initialize$VH();
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2AVtbl$Initialize$VH().get(seg);
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2AVtbl$Initialize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Initialize$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2AVtbl$Initialize$VH().set(seg, x);
        }
        public static void Initialize$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2AVtbl$Initialize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface FindDevice$220 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3);
            public static  MemorySegment allocate(FindDevice$220 fi) {
                return RuntimeHelper.upcallStub(FindDevice$220.class, fi, dinput_h_constants_4.FindDevice$220$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(FindDevice$220 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle FindDevice$VH() {
            return dinput_h_constants_4.IDirectInput2AVtbl$FindDevice$VH();
        }
        public static  MemoryAddress FindDevice$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2AVtbl$FindDevice$VH().get(seg);
        }
        public static  MemoryAddress FindDevice$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput2AVtbl$FindDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FindDevice$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2AVtbl$FindDevice$VH().set(seg, x);
        }
        public static void FindDevice$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput2AVtbl$FindDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInput7W {

        /* package-private */ IDirectInput7W() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_4.IDirectInput7W$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dinput_h_constants_4.IDirectInput7W$lpVtbl$VH();
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7W$lpVtbl$VH().get(seg);
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7W$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7W$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7W$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInput7WVtbl {

        /* package-private */ IDirectInput7WVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_4.IDirectInput7WVtbl$struct$LAYOUT();
        }
        public static interface QueryInterface$221 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(QueryInterface$221 fi) {
                return RuntimeHelper.upcallStub(QueryInterface$221.class, fi, dinput_h_constants_4.QueryInterface$221$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(QueryInterface$221 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle QueryInterface$VH() {
            return dinput_h_constants_4.IDirectInput7WVtbl$QueryInterface$VH();
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7WVtbl$QueryInterface$VH().get(seg);
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7WVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7WVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7WVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface AddRef$222 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(AddRef$222 fi) {
                return RuntimeHelper.upcallStub(AddRef$222.class, fi, dinput_h_constants_4.AddRef$222$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(AddRef$222 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle AddRef$VH() {
            return dinput_h_constants_4.IDirectInput7WVtbl$AddRef$VH();
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7WVtbl$AddRef$VH().get(seg);
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7WVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7WVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7WVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Release$223 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Release$223 fi) {
                return RuntimeHelper.upcallStub(Release$223.class, fi, dinput_h_constants_4.Release$223$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Release$223 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Release$VH() {
            return dinput_h_constants_4.IDirectInput7WVtbl$Release$VH();
        }
        public static  MemoryAddress Release$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7WVtbl$Release$VH().get(seg);
        }
        public static  MemoryAddress Release$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7WVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7WVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7WVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface CreateDevice$224 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3);
            public static  MemorySegment allocate(CreateDevice$224 fi) {
                return RuntimeHelper.upcallStub(CreateDevice$224.class, fi, dinput_h_constants_4.CreateDevice$224$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(CreateDevice$224 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle CreateDevice$VH() {
            return dinput_h_constants_4.IDirectInput7WVtbl$CreateDevice$VH();
        }
        public static  MemoryAddress CreateDevice$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7WVtbl$CreateDevice$VH().get(seg);
        }
        public static  MemoryAddress CreateDevice$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7WVtbl$CreateDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDevice$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7WVtbl$CreateDevice$VH().set(seg, x);
        }
        public static void CreateDevice$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7WVtbl$CreateDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumDevices$225 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(EnumDevices$225 fi) {
                return RuntimeHelper.upcallStub(EnumDevices$225.class, fi, dinput_h_constants_4.EnumDevices$225$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumDevices$225 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumDevices$VH() {
            return dinput_h_constants_4.IDirectInput7WVtbl$EnumDevices$VH();
        }
        public static  MemoryAddress EnumDevices$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7WVtbl$EnumDevices$VH().get(seg);
        }
        public static  MemoryAddress EnumDevices$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7WVtbl$EnumDevices$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumDevices$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7WVtbl$EnumDevices$VH().set(seg, x);
        }
        public static void EnumDevices$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7WVtbl$EnumDevices$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceStatus$226 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetDeviceStatus$226 fi) {
                return RuntimeHelper.upcallStub(GetDeviceStatus$226.class, fi, dinput_h_constants_4.GetDeviceStatus$226$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetDeviceStatus$226 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceStatus$VH() {
            return dinput_h_constants_4.IDirectInput7WVtbl$GetDeviceStatus$VH();
        }
        public static  MemoryAddress GetDeviceStatus$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7WVtbl$GetDeviceStatus$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceStatus$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7WVtbl$GetDeviceStatus$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceStatus$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7WVtbl$GetDeviceStatus$VH().set(seg, x);
        }
        public static void GetDeviceStatus$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7WVtbl$GetDeviceStatus$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface RunControlPanel$227 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(RunControlPanel$227 fi) {
                return RuntimeHelper.upcallStub(RunControlPanel$227.class, fi, dinput_h_constants_4.RunControlPanel$227$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(RunControlPanel$227 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle RunControlPanel$VH() {
            return dinput_h_constants_4.IDirectInput7WVtbl$RunControlPanel$VH();
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7WVtbl$RunControlPanel$VH().get(seg);
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7WVtbl$RunControlPanel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RunControlPanel$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7WVtbl$RunControlPanel$VH().set(seg, x);
        }
        public static void RunControlPanel$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7WVtbl$RunControlPanel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Initialize$228 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(Initialize$228 fi) {
                return RuntimeHelper.upcallStub(Initialize$228.class, fi, dinput_h_constants_4.Initialize$228$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(Initialize$228 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Initialize$VH() {
            return dinput_h_constants_4.IDirectInput7WVtbl$Initialize$VH();
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7WVtbl$Initialize$VH().get(seg);
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7WVtbl$Initialize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Initialize$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7WVtbl$Initialize$VH().set(seg, x);
        }
        public static void Initialize$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7WVtbl$Initialize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface FindDevice$229 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3);
            public static  MemorySegment allocate(FindDevice$229 fi) {
                return RuntimeHelper.upcallStub(FindDevice$229.class, fi, dinput_h_constants_4.FindDevice$229$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(FindDevice$229 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle FindDevice$VH() {
            return dinput_h_constants_4.IDirectInput7WVtbl$FindDevice$VH();
        }
        public static  MemoryAddress FindDevice$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7WVtbl$FindDevice$VH().get(seg);
        }
        public static  MemoryAddress FindDevice$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7WVtbl$FindDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FindDevice$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7WVtbl$FindDevice$VH().set(seg, x);
        }
        public static void FindDevice$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7WVtbl$FindDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface CreateDeviceEx {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, jdk.incubator.foreign.MemoryAddress x4);
            public static  MemorySegment allocate(CreateDeviceEx fi) {
                return RuntimeHelper.upcallStub(CreateDeviceEx.class, fi, dinput_h_constants_4.CreateDeviceEx$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(CreateDeviceEx fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle CreateDeviceEx$VH() {
            return dinput_h_constants_4.IDirectInput7WVtbl$CreateDeviceEx$VH();
        }
        public static  MemoryAddress CreateDeviceEx$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7WVtbl$CreateDeviceEx$VH().get(seg);
        }
        public static  MemoryAddress CreateDeviceEx$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7WVtbl$CreateDeviceEx$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDeviceEx$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7WVtbl$CreateDeviceEx$VH().set(seg, x);
        }
        public static void CreateDeviceEx$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7WVtbl$CreateDeviceEx$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInput7A {

        /* package-private */ IDirectInput7A() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_4.IDirectInput7A$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dinput_h_constants_4.IDirectInput7A$lpVtbl$VH();
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7A$lpVtbl$VH().get(seg);
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7A$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7A$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7A$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInput7AVtbl {

        /* package-private */ IDirectInput7AVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_4.IDirectInput7AVtbl$struct$LAYOUT();
        }
        public static interface QueryInterface$230 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(QueryInterface$230 fi) {
                return RuntimeHelper.upcallStub(QueryInterface$230.class, fi, dinput_h_constants_4.QueryInterface$230$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(QueryInterface$230 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle QueryInterface$VH() {
            return dinput_h_constants_4.IDirectInput7AVtbl$QueryInterface$VH();
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7AVtbl$QueryInterface$VH().get(seg);
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7AVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7AVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7AVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface AddRef$231 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(AddRef$231 fi) {
                return RuntimeHelper.upcallStub(AddRef$231.class, fi, dinput_h_constants_4.AddRef$231$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(AddRef$231 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle AddRef$VH() {
            return dinput_h_constants_4.IDirectInput7AVtbl$AddRef$VH();
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7AVtbl$AddRef$VH().get(seg);
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7AVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7AVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7AVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Release$232 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Release$232 fi) {
                return RuntimeHelper.upcallStub(Release$232.class, fi, dinput_h_constants_4.Release$232$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Release$232 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Release$VH() {
            return dinput_h_constants_4.IDirectInput7AVtbl$Release$VH();
        }
        public static  MemoryAddress Release$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7AVtbl$Release$VH().get(seg);
        }
        public static  MemoryAddress Release$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7AVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7AVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7AVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface CreateDevice$233 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3);
            public static  MemorySegment allocate(CreateDevice$233 fi) {
                return RuntimeHelper.upcallStub(CreateDevice$233.class, fi, dinput_h_constants_4.CreateDevice$233$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(CreateDevice$233 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle CreateDevice$VH() {
            return dinput_h_constants_4.IDirectInput7AVtbl$CreateDevice$VH();
        }
        public static  MemoryAddress CreateDevice$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7AVtbl$CreateDevice$VH().get(seg);
        }
        public static  MemoryAddress CreateDevice$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7AVtbl$CreateDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDevice$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7AVtbl$CreateDevice$VH().set(seg, x);
        }
        public static void CreateDevice$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7AVtbl$CreateDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumDevices$234 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(EnumDevices$234 fi) {
                return RuntimeHelper.upcallStub(EnumDevices$234.class, fi, dinput_h_constants_4.EnumDevices$234$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumDevices$234 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumDevices$VH() {
            return dinput_h_constants_4.IDirectInput7AVtbl$EnumDevices$VH();
        }
        public static  MemoryAddress EnumDevices$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7AVtbl$EnumDevices$VH().get(seg);
        }
        public static  MemoryAddress EnumDevices$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7AVtbl$EnumDevices$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumDevices$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7AVtbl$EnumDevices$VH().set(seg, x);
        }
        public static void EnumDevices$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7AVtbl$EnumDevices$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceStatus$235 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetDeviceStatus$235 fi) {
                return RuntimeHelper.upcallStub(GetDeviceStatus$235.class, fi, dinput_h_constants_4.GetDeviceStatus$235$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetDeviceStatus$235 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceStatus$VH() {
            return dinput_h_constants_4.IDirectInput7AVtbl$GetDeviceStatus$VH();
        }
        public static  MemoryAddress GetDeviceStatus$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7AVtbl$GetDeviceStatus$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceStatus$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7AVtbl$GetDeviceStatus$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceStatus$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7AVtbl$GetDeviceStatus$VH().set(seg, x);
        }
        public static void GetDeviceStatus$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7AVtbl$GetDeviceStatus$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface RunControlPanel$236 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(RunControlPanel$236 fi) {
                return RuntimeHelper.upcallStub(RunControlPanel$236.class, fi, dinput_h_constants_4.RunControlPanel$236$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(RunControlPanel$236 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle RunControlPanel$VH() {
            return dinput_h_constants_4.IDirectInput7AVtbl$RunControlPanel$VH();
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7AVtbl$RunControlPanel$VH().get(seg);
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7AVtbl$RunControlPanel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RunControlPanel$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7AVtbl$RunControlPanel$VH().set(seg, x);
        }
        public static void RunControlPanel$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7AVtbl$RunControlPanel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Initialize$237 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(Initialize$237 fi) {
                return RuntimeHelper.upcallStub(Initialize$237.class, fi, dinput_h_constants_4.Initialize$237$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(Initialize$237 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Initialize$VH() {
            return dinput_h_constants_4.IDirectInput7AVtbl$Initialize$VH();
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7AVtbl$Initialize$VH().get(seg);
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7AVtbl$Initialize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Initialize$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7AVtbl$Initialize$VH().set(seg, x);
        }
        public static void Initialize$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7AVtbl$Initialize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface FindDevice$238 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3);
            public static  MemorySegment allocate(FindDevice$238 fi) {
                return RuntimeHelper.upcallStub(FindDevice$238.class, fi, dinput_h_constants_4.FindDevice$238$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(FindDevice$238 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle FindDevice$VH() {
            return dinput_h_constants_4.IDirectInput7AVtbl$FindDevice$VH();
        }
        public static  MemoryAddress FindDevice$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7AVtbl$FindDevice$VH().get(seg);
        }
        public static  MemoryAddress FindDevice$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7AVtbl$FindDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FindDevice$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7AVtbl$FindDevice$VH().set(seg, x);
        }
        public static void FindDevice$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7AVtbl$FindDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface CreateDeviceEx$239 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, jdk.incubator.foreign.MemoryAddress x4);
            public static  MemorySegment allocate(CreateDeviceEx$239 fi) {
                return RuntimeHelper.upcallStub(CreateDeviceEx$239.class, fi, dinput_h_constants_4.CreateDeviceEx$239$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(CreateDeviceEx$239 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle CreateDeviceEx$VH() {
            return dinput_h_constants_4.IDirectInput7AVtbl$CreateDeviceEx$VH();
        }
        public static  MemoryAddress CreateDeviceEx$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7AVtbl$CreateDeviceEx$VH().get(seg);
        }
        public static  MemoryAddress CreateDeviceEx$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput7AVtbl$CreateDeviceEx$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDeviceEx$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7AVtbl$CreateDeviceEx$VH().set(seg, x);
        }
        public static void CreateDeviceEx$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput7AVtbl$CreateDeviceEx$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInput8W {

        /* package-private */ IDirectInput8W() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_4.IDirectInput8W$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dinput_h_constants_4.IDirectInput8W$lpVtbl$VH();
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8W$lpVtbl$VH().get(seg);
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8W$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8W$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8W$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInput8WVtbl {

        /* package-private */ IDirectInput8WVtbl() {}

        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_4.IDirectInput8WVtbl$struct$LAYOUT();
        }
        public static interface QueryInterface$240 {
            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(QueryInterface$240 fi) {
                return RuntimeHelper.upcallStub(QueryInterface$240.class, fi, dinput_h_constants_4.QueryInterface$240$FUNC(), nativeMethodType());
            }
            public static  MemorySegment allocate(QueryInterface$240 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
            public static jdk.incubator.foreign.FunctionDescriptor func() { return dinput_h_constants_4.QueryInterface$240$FUNC(); }
            public static String nativeMethodType() { return "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I";}
        }

        public static VarHandle QueryInterface$VH() {
            return dinput_h_constants_4.IDirectInput8WVtbl$QueryInterface$VH();
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8WVtbl$QueryInterface$VH().get(seg);
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8WVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8WVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8WVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }

        public static interface AddRef$241 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(AddRef$241 fi) {
                return RuntimeHelper.upcallStub(AddRef$241.class, fi, dinput_h_constants_4.AddRef$241$FUNC(), nativeMethodType());
            }
            public static  MemorySegment allocate(AddRef$241 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
            public static jdk.incubator.foreign.FunctionDescriptor func() {
                return dinput_h_constants_4.AddRef$241$FUNC();
            }
            public static String nativeMethodType() {
                return "(Ljdk/incubator/foreign/MemoryAddress;)I";
            }
            public static AddRef$241 downcall(Addressable symbol) {
                return RuntimeHelper.downcallHandle(
                        symbol,
                        IDirectInput8WVtbl.AddRef$241.class,
                        dinput_h_constants_4.AddRef$241$FUNC(),
                        nativeMethodType(),
                        false);
            }
        }

        public static VarHandle AddRef$VH() {
            return dinput_h_constants_4.IDirectInput8WVtbl$AddRef$VH();
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8WVtbl$AddRef$VH().get(seg);
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8WVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8WVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8WVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Release$242 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Release$242 fi) {
                return RuntimeHelper.upcallStub(Release$242.class, fi, dinput_h_constants_4.Release$242$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Release$242 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
            public static jdk.incubator.foreign.FunctionDescriptor func() { return dinput_h_constants_4.Release$242$FUNC(); }
        }

        public static VarHandle Release$VH() {
            return dinput_h_constants_4.IDirectInput8WVtbl$Release$VH();
        }
        public static  MemoryAddress Release$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8WVtbl$Release$VH().get(seg);
        }
        public static  MemoryAddress Release$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8WVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8WVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8WVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface CreateDevice$243 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3);
            public static  MemorySegment allocate(CreateDevice$243 fi) {
                return RuntimeHelper.upcallStub(CreateDevice$243.class, fi, dinput_h_constants_4.CreateDevice$243$FUNC(), nativeMethodType());
            }
            public static  MemorySegment allocate(CreateDevice$243 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
            public static jdk.incubator.foreign.FunctionDescriptor func() { return dinput_h_constants_4.CreateDevice$243$FUNC(); }
            public static String nativeMethodType() { return "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I"; }
        }

        public static VarHandle CreateDevice$VH() {
            return dinput_h_constants_4.IDirectInput8WVtbl$CreateDevice$VH();
        }
        public static  MemoryAddress CreateDevice$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8WVtbl$CreateDevice$VH().get(seg);
        }
        public static  MemoryAddress CreateDevice$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8WVtbl$CreateDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDevice$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8WVtbl$CreateDevice$VH().set(seg, x);
        }
        public static void CreateDevice$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8WVtbl$CreateDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumDevices$244 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(EnumDevices$244 fi) {
                return RuntimeHelper.upcallStub(EnumDevices$244.class, fi, dinput_h_constants_4.EnumDevices$244$FUNC(), nativeMethodType());
            }
            public static  MemorySegment allocate(EnumDevices$244 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
            public static jdk.incubator.foreign.FunctionDescriptor func() { return dinput_h_constants_4.EnumDevices$244$FUNC(); }
            public static String nativeMethodType() { return "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I"; }
        }

        public static VarHandle EnumDevices$VH() {
            return dinput_h_constants_4.IDirectInput8WVtbl$EnumDevices$VH();
        }
        public static  MemoryAddress EnumDevices$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8WVtbl$EnumDevices$VH().get(seg);
        }
        public static  MemoryAddress EnumDevices$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8WVtbl$EnumDevices$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumDevices$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8WVtbl$EnumDevices$VH().set(seg, x);
        }
        public static void EnumDevices$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8WVtbl$EnumDevices$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceStatus$245 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetDeviceStatus$245 fi) {
                return RuntimeHelper.upcallStub(GetDeviceStatus$245.class, fi, dinput_h_constants_4.GetDeviceStatus$245$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetDeviceStatus$245 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
            public static jdk.incubator.foreign.FunctionDescriptor func() { return dinput_h_constants_4.GetDeviceStatus$245$FUNC(); }
        }

        public static VarHandle GetDeviceStatus$VH() {
            return dinput_h_constants_4.IDirectInput8WVtbl$GetDeviceStatus$VH();
        }
        public static  MemoryAddress GetDeviceStatus$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8WVtbl$GetDeviceStatus$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceStatus$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8WVtbl$GetDeviceStatus$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceStatus$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8WVtbl$GetDeviceStatus$VH().set(seg, x);
        }
        public static void GetDeviceStatus$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8WVtbl$GetDeviceStatus$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface RunControlPanel$246 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(RunControlPanel$246 fi) {
                return RuntimeHelper.upcallStub(RunControlPanel$246.class, fi, dinput_h_constants_4.RunControlPanel$246$FUNC(), nativeMethodType());
            }
            public static  MemorySegment allocate(RunControlPanel$246 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
            public static jdk.incubator.foreign.FunctionDescriptor func() { return dinput_h_constants_4.RunControlPanel$246$FUNC(); }
            public static String nativeMethodType() { return "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I"; }
            public static MethodHandle downcall(Addressable symbol) { return RuntimeHelper.downcallHandle(symbol, func(), nativeMethodType(), false); };
            public static RunControlPanel$246 downcallT(Addressable symbol) {
                MethodHandle mh = downcall(symbol);
                return (x0, x1, x2) -> {
                    try { return (int) mh.invokeExact(x0,x1,x2); }
                    catch (Throwable t) { throw new RuntimeException(t); }
                };
            };
        }

        public static VarHandle RunControlPanel$VH() {
            return dinput_h_constants_4.IDirectInput8WVtbl$RunControlPanel$VH();
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8WVtbl$RunControlPanel$VH().get(seg);
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8WVtbl$RunControlPanel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RunControlPanel$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8WVtbl$RunControlPanel$VH().set(seg, x);
        }
        public static void RunControlPanel$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8WVtbl$RunControlPanel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Initialize$247 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(Initialize$247 fi) {
                return RuntimeHelper.upcallStub(Initialize$247.class, fi, dinput_h_constants_4.Initialize$247$FUNC(), nativeMethodType());
            }
            public static  MemorySegment allocate(Initialize$247 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
            public static jdk.incubator.foreign.FunctionDescriptor func() { return dinput_h_constants_4.Initialize$247$FUNC(); }
            public static String nativeMethodType() { return "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I"; }
            public static MethodHandle downcall(Addressable symbol) { return RuntimeHelper.downcallHandle(symbol, func(), nativeMethodType(), false); }
        }

        public static VarHandle Initialize$VH() {
            return dinput_h_constants_4.IDirectInput8WVtbl$Initialize$VH();
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8WVtbl$Initialize$VH().get(seg);
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8WVtbl$Initialize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Initialize$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8WVtbl$Initialize$VH().set(seg, x);
        }
        public static void Initialize$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8WVtbl$Initialize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface FindDevice$248 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3);
            public static  MemorySegment allocate(FindDevice$248 fi) {
                return RuntimeHelper.upcallStub(FindDevice$248.class, fi, dinput_h_constants_4.FindDevice$248$FUNC(), nativeMethodType());
            }
            public static  MemorySegment allocate(FindDevice$248 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
            public static jdk.incubator.foreign.FunctionDescriptor func() { return dinput_h_constants_4.FindDevice$248$FUNC(); }
            public static String nativeMethodType() { return "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I"; }
        }

        public static VarHandle FindDevice$VH() {
            return dinput_h_constants_4.IDirectInput8WVtbl$FindDevice$VH();
        }
        public static  MemoryAddress FindDevice$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8WVtbl$FindDevice$VH().get(seg);
        }
        public static  MemoryAddress FindDevice$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8WVtbl$FindDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FindDevice$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8WVtbl$FindDevice$VH().set(seg, x);
        }
        public static void FindDevice$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8WVtbl$FindDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumDevicesBySemantics {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, jdk.incubator.foreign.MemoryAddress x4, int x5);
            public static  MemorySegment allocate(EnumDevicesBySemantics fi) {
                return RuntimeHelper.upcallStub(EnumDevicesBySemantics.class, fi, dinput_h_constants_4.EnumDevicesBySemantics$FUNC(), nativeMethodType());
            }
            public static  MemorySegment allocate(EnumDevicesBySemantics fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
            public static jdk.incubator.foreign.FunctionDescriptor func() { return dinput_h_constants_4.EnumDevicesBySemantics$FUNC(); }
            public static String nativeMethodType() { return "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I"; }
        }

        public static VarHandle EnumDevicesBySemantics$VH() {
            return dinput_h_constants_4.IDirectInput8WVtbl$EnumDevicesBySemantics$VH();
        }
        public static  MemoryAddress EnumDevicesBySemantics$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8WVtbl$EnumDevicesBySemantics$VH().get(seg);
        }
        public static  MemoryAddress EnumDevicesBySemantics$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8WVtbl$EnumDevicesBySemantics$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumDevicesBySemantics$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8WVtbl$EnumDevicesBySemantics$VH().set(seg, x);
        }
        public static void EnumDevicesBySemantics$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8WVtbl$EnumDevicesBySemantics$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface ConfigureDevices {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3, jdk.incubator.foreign.MemoryAddress x4);
            public static  MemorySegment allocate(ConfigureDevices fi) {
                return RuntimeHelper.upcallStub(ConfigureDevices.class, fi, dinput_h_constants_4.ConfigureDevices$FUNC(), nativeMethodType());
            }
            public static  MemorySegment allocate(ConfigureDevices fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
            public static jdk.incubator.foreign.FunctionDescriptor func() { return dinput_h_constants_4.ConfigureDevices$FUNC(); }
            public static String nativeMethodType() { return "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I"; }
        }

        public static VarHandle ConfigureDevices$VH() {
            return dinput_h_constants_4.IDirectInput8WVtbl$ConfigureDevices$VH();
        }
        public static  MemoryAddress ConfigureDevices$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8WVtbl$ConfigureDevices$VH().get(seg);
        }
        public static  MemoryAddress ConfigureDevices$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8WVtbl$ConfigureDevices$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ConfigureDevices$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8WVtbl$ConfigureDevices$VH().set(seg, x);
        }
        public static void ConfigureDevices$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8WVtbl$ConfigureDevices$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInput8A {

        /* package-private */ IDirectInput8A() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_4.IDirectInput8A$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dinput_h_constants_4.IDirectInput8A$lpVtbl$VH();
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8A$lpVtbl$VH().get(seg);
        }
        public static  MemoryAddress lpVtbl$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8A$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8A$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8A$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class IDirectInput8AVtbl {

        /* package-private */ IDirectInput8AVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dinput_h_constants_4.IDirectInput8AVtbl$struct$LAYOUT();
        }
        public static interface QueryInterface$249 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2);
            public static  MemorySegment allocate(QueryInterface$249 fi) {
                return RuntimeHelper.upcallStub(QueryInterface$249.class, fi, dinput_h_constants_4.QueryInterface$249$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(QueryInterface$249 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle QueryInterface$VH() {
            return dinput_h_constants_4.IDirectInput8AVtbl$QueryInterface$VH();
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8AVtbl$QueryInterface$VH().get(seg);
        }
        public static  MemoryAddress QueryInterface$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8AVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8AVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8AVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface AddRef$250 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(AddRef$250 fi) {
                return RuntimeHelper.upcallStub(AddRef$250.class, fi, dinput_h_constants_4.AddRef$250$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(AddRef$250 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle AddRef$VH() {
            return dinput_h_constants_4.IDirectInput8AVtbl$AddRef$VH();
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8AVtbl$AddRef$VH().get(seg);
        }
        public static  MemoryAddress AddRef$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8AVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8AVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8AVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Release$251 {

            int apply(jdk.incubator.foreign.MemoryAddress x0);
            public static  MemorySegment allocate(Release$251 fi) {
                return RuntimeHelper.upcallStub(Release$251.class, fi, dinput_h_constants_4.Release$251$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(Release$251 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Release$VH() {
            return dinput_h_constants_4.IDirectInput8AVtbl$Release$VH();
        }
        public static  MemoryAddress Release$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8AVtbl$Release$VH().get(seg);
        }
        public static  MemoryAddress Release$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8AVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8AVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8AVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface CreateDevice$252 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3);
            public static  MemorySegment allocate(CreateDevice$252 fi) {
                return RuntimeHelper.upcallStub(CreateDevice$252.class, fi, dinput_h_constants_4.CreateDevice$252$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(CreateDevice$252 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle CreateDevice$VH() {
            return dinput_h_constants_4.IDirectInput8AVtbl$CreateDevice$VH();
        }
        public static  MemoryAddress CreateDevice$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8AVtbl$CreateDevice$VH().get(seg);
        }
        public static  MemoryAddress CreateDevice$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8AVtbl$CreateDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDevice$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8AVtbl$CreateDevice$VH().set(seg, x);
        }
        public static void CreateDevice$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8AVtbl$CreateDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumDevices$253 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, int x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, int x4);
            public static  MemorySegment allocate(EnumDevices$253 fi) {
                return RuntimeHelper.upcallStub(EnumDevices$253.class, fi, dinput_h_constants_4.EnumDevices$253$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumDevices$253 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumDevices$VH() {
            return dinput_h_constants_4.IDirectInput8AVtbl$EnumDevices$VH();
        }
        public static  MemoryAddress EnumDevices$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8AVtbl$EnumDevices$VH().get(seg);
        }
        public static  MemoryAddress EnumDevices$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8AVtbl$EnumDevices$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumDevices$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8AVtbl$EnumDevices$VH().set(seg, x);
        }
        public static void EnumDevices$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8AVtbl$EnumDevices$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface GetDeviceStatus$254 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1);
            public static  MemorySegment allocate(GetDeviceStatus$254 fi) {
                return RuntimeHelper.upcallStub(GetDeviceStatus$254.class, fi, dinput_h_constants_4.GetDeviceStatus$254$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(GetDeviceStatus$254 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle GetDeviceStatus$VH() {
            return dinput_h_constants_4.IDirectInput8AVtbl$GetDeviceStatus$VH();
        }
        public static  MemoryAddress GetDeviceStatus$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8AVtbl$GetDeviceStatus$VH().get(seg);
        }
        public static  MemoryAddress GetDeviceStatus$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8AVtbl$GetDeviceStatus$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceStatus$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8AVtbl$GetDeviceStatus$VH().set(seg, x);
        }
        public static void GetDeviceStatus$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8AVtbl$GetDeviceStatus$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface RunControlPanel$255 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(RunControlPanel$255 fi) {
                return RuntimeHelper.upcallStub(RunControlPanel$255.class, fi, dinput_h_constants_4.RunControlPanel$255$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(RunControlPanel$255 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle RunControlPanel$VH() {
            return dinput_h_constants_4.IDirectInput8AVtbl$RunControlPanel$VH();
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8AVtbl$RunControlPanel$VH().get(seg);
        }
        public static  MemoryAddress RunControlPanel$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8AVtbl$RunControlPanel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RunControlPanel$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8AVtbl$RunControlPanel$VH().set(seg, x);
        }
        public static void RunControlPanel$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8AVtbl$RunControlPanel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface Initialize$256 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, int x2);
            public static  MemorySegment allocate(Initialize$256 fi) {
                return RuntimeHelper.upcallStub(Initialize$256.class, fi, dinput_h_constants_4.Initialize$256$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(Initialize$256 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle Initialize$VH() {
            return dinput_h_constants_4.IDirectInput8AVtbl$Initialize$VH();
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8AVtbl$Initialize$VH().get(seg);
        }
        public static  MemoryAddress Initialize$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8AVtbl$Initialize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Initialize$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8AVtbl$Initialize$VH().set(seg, x);
        }
        public static void Initialize$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8AVtbl$Initialize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface FindDevice$257 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3);
            public static  MemorySegment allocate(FindDevice$257 fi) {
                return RuntimeHelper.upcallStub(FindDevice$257.class, fi, dinput_h_constants_4.FindDevice$257$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(FindDevice$257 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle FindDevice$VH() {
            return dinput_h_constants_4.IDirectInput8AVtbl$FindDevice$VH();
        }
        public static  MemoryAddress FindDevice$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8AVtbl$FindDevice$VH().get(seg);
        }
        public static  MemoryAddress FindDevice$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8AVtbl$FindDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FindDevice$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8AVtbl$FindDevice$VH().set(seg, x);
        }
        public static void FindDevice$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8AVtbl$FindDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface EnumDevicesBySemantics$258 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, jdk.incubator.foreign.MemoryAddress x4, int x5);
            public static  MemorySegment allocate(EnumDevicesBySemantics$258 fi) {
                return RuntimeHelper.upcallStub(EnumDevicesBySemantics$258.class, fi, dinput_h_constants_4.EnumDevicesBySemantics$258$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I");
            }
            public static  MemorySegment allocate(EnumDevicesBySemantics$258 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle EnumDevicesBySemantics$VH() {
            return dinput_h_constants_4.IDirectInput8AVtbl$EnumDevicesBySemantics$VH();
        }
        public static  MemoryAddress EnumDevicesBySemantics$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8AVtbl$EnumDevicesBySemantics$VH().get(seg);
        }
        public static  MemoryAddress EnumDevicesBySemantics$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8AVtbl$EnumDevicesBySemantics$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumDevicesBySemantics$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8AVtbl$EnumDevicesBySemantics$VH().set(seg, x);
        }
        public static void EnumDevicesBySemantics$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8AVtbl$EnumDevicesBySemantics$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface ConfigureDevices$259 {

            int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, int x3, jdk.incubator.foreign.MemoryAddress x4);
            public static  MemorySegment allocate(ConfigureDevices$259 fi) {
                return RuntimeHelper.upcallStub(ConfigureDevices$259.class, fi, dinput_h_constants_4.ConfigureDevices$259$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I");
            }
            public static  MemorySegment allocate(ConfigureDevices$259 fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle ConfigureDevices$VH() {
            return dinput_h_constants_4.IDirectInput8AVtbl$ConfigureDevices$VH();
        }
        public static  MemoryAddress ConfigureDevices$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8AVtbl$ConfigureDevices$VH().get(seg);
        }
        public static  MemoryAddress ConfigureDevices$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dinput_h_constants_4.IDirectInput8AVtbl$ConfigureDevices$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ConfigureDevices$set( MemorySegment seg, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8AVtbl$ConfigureDevices$VH().set(seg, x);
        }
        public static void ConfigureDevices$set(MemorySegment seg, long index, MemoryAddress x) {
            dinput_h_constants_4.IDirectInput8AVtbl$ConfigureDevices$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static interface LPFNSHOWJOYCPL {

        void apply(jdk.incubator.foreign.MemoryAddress x0);
        public static  MemorySegment allocate(LPFNSHOWJOYCPL fi) {
            return RuntimeHelper.upcallStub(LPFNSHOWJOYCPL.class, fi, dinput_h_constants_4.LPFNSHOWJOYCPL$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;)V");
        }
        public static  MemorySegment allocate(LPFNSHOWJOYCPL fi, NativeScope scope) {
            return allocate(fi).handoff(scope);
        }
    }

}


