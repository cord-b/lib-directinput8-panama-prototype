
defaults {

    from {
        # (required) The package with jextract classes, also the output package
        # package = "dev.viskar.lib.dinput8.natives"

        # (required) The outer class generated by jextract to inspect
        # header = "dinput_h"

        # (required) The constants class generated by jextract
        # constants : "dinput_h_constants_5"

        # (optional) The type to generate code for. Expressed as the inner class name of the 'header' outer class.
        type = ""

        # (optional) If true, will generate code for all classes inside the 'header' class
        scan = false

        # (optional) Provide a list of regex strings for exclude classes from a scan
        exclude = []
    }

    # The code generator mode to use.
    # Either "object" or "static-object"
    # If the type has discovered a vtbl class, the vtbl methods will be generated as well.
    # "object"        - Will generate a standard Java that can wrap instances of the struct/object.
    # "static-object" - Will generate a static singleton of the class.
    #                   An 'Initializer' must be implemented to provide the memory address of the initialized singleton.
    template = object

    # When template is 'static-object' the generated static singleton will use the ServiceLoader to find its
    # 'Initializer' implementation. If your codebase provides the the implementation, then enter the classname for this
    # property. The code generator will generate the appropriate "META-INF/services/..." that registers your initializer.
    staticInitializer = ""

    # Whether to generate getters/setters for your objects
    accessors = true

    # Lombok options
    lombok {
        # If true, MethodHandles invocations can omit try { } catch { } blocks that re-throw exceptions
        sneakyThrows : false
    }

    # Provide any regex replacements to apply when naming the generated classes
    rename {
        # "FOO" : "Foo"
    }
}

generate = []